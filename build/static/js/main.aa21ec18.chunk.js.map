{"version":3,"sources":["language/en_US.js","language/zh_CN.js","component/infoSection/infoSection.js","util.js","ABIs/MoneyMarket.js","container/accountInfo/accountInfo_main.js","pages/home/home.js","pages/main/main.js","ABIs/USDX.js","ABIs/WETH.js","component/header/header.js","HOC/withMarketInfo.js","container/recordBoard/recordBoard.js","pages/supply/supply-usdx.js","pages/supply/supply-usdt.js","pages/supply/supply-imbtc.js","util-weth.js","pages/supply/supply-weth.js","pages/borrow/borrow-usdx.js","container/accountInfo/accountInfo_borrow.js","pages/borrow/borrow-usdt.js","pages/borrow/borrow-weth.js","pages/borrow/borrow-imbtc.js","App.js","serviceWorker.js","index.js"],"names":["en_US","Decentralized","USDx_Supplied","USDx_Supplied_home","USDx_Borrowed","Utilization_Rate","Collateralization_ratio","USDx_Supply_APR","USDx_Borrow_APR","Supply_USDx","Borrow_USDx","Supply_your","Pledge_WETH","Account_Portfolio","Supplied_Balance","Borrowed_Balance","Available_to_Borrow","Borrow_APR","Supply","WETH_Supplied","ETH_Balance","WETH_Balance","Withdraw","WETH_Available","Before_borrowing","Borrowing_exceeds","Already_supplied","USDx_Market","Total_Supplied","Total_Borrowed","Supply_APR","Before_supplying","Already_borrowed","INSUFFICIENT_LIQUIDITY","INSUFFICIENT_BALANCE","SUBMITTING","Before_supplying_WETH","ENABLE_WETH","Borrow","USDx_Borrowed_borrow","USDx_Available_borrow","USDx_Available_supply","Repay","USDx_Balance","Home","SUPPLY","BORROW","REPAY","Balance","zh_CN","InfoSection","props","locale","messages","navigator","language","className","accountInfo","filter","info","page","currentPage","map","key","index","src","style","marginRight","alt","title","id","amount","get_allowance","contractInstance","my_account","address_mMarket","bn","a","Promise","resolve","methods","allowance","call","err","res_allowance","console","log","gt","handle_supply_max","that","balance","decimals","to_show","length","substr","substring","div","setState","supply_amount","i_will_supply_max","handle_withdraw_max","withdraw_amount","i_will_withdraw_max","handle_supply_change","value","is_supply_enable","amount_bn","temp_value","indexOf","sub_num","mul","toString","sub","Number","handle_withdraw_change","is_withdraw_enable","format_bn","numStr","decimalPlace","toLocaleString","replace","str","slice","res","get_my_balance","tokenContract","account","balanceOf","res_balance","my_balance","get_supplied__available_to_withdraw","mContract","token_address","m_address","getSupplyBalance","res_supplied","my_supplied","calculateAccountValues","res_account_values","assetPrices","res_price","res_cash","m_supply","m_borrow","collateral_rate","add","liquidity_bn","SmallNum_bn","lt","SmallNum_est","available_to_withdraw","get_available_to_borrow","originationFee","getAccountLiquidity","res_liquidity","available_to_borrow","pow","to_borrow_bn","i_got_hash","net_type","token","action","hash","timestamp","status","window","localStorage","contractData","JSON","parse","getItem","push","setItem","stringify","load_new_history","Math","random","handle_approve","state","isEnableing","approve","estimateGas","from","gasLimit","new_web3","eth","getGasPrice","gasPrice","send","gas","ceil","gas_limit_coefficient","reject","res_hash","Date","getTime","token_name","check_approve","setInterval","getTransactionReceipt","res_fail","res_success","clearInterval","is_approved","handle_supply_click","amount_str","mMarket","supply","handle_withdraw_click","amount_bn_to_history","withdraw","get_borrow_balance","getBorrowBalance","res_borrowed","my_borrowed","handle_borrow_change","i_will_borrow_max","is_borrow_enable","borrow_amount","handle_repay_change","i_will_repay_max","is_repay_enable","repay_amount","handle_borrow_click","borrow","handle_repay_click","repayBorrow","handle_borrow_max","handle_repay_max","borrowed","toFormatShowNumber","String","getPercentageFormat","toFixed","toDoubleThousands","s","l","split","reverse","r","undefined","t","i","join","findNetwork","networkId","networkName","getLoginStatusKey","saveLoginStatus","isLogin","storage","formatBigNumber","bigNumber","NumStr","get_tokens_decimals","USDx","WETH","imBTC","USDT","then","res_usdx_decimals","USDx_decimals","res_weth_decimals","WETH_decimals","res_imBTC_decimals","imBTC_decimals","res_usdt_decimals","USDT_decimals","moneyMarket","require","MoneyMarket","web3","contractSpec","contract","NetworkName","version","network","at","AccountInfo","get_USDx_supply_borrow","accounts","usdxAddress","Network","Main","Rinkeby","markets","USDx_supply","fromWei","USDx_borrow","USDx_supply_APR","toNumber","USDx_borrow_APR","USDx_borrow_supply_rate","componentDidMount","currentProvider","enable","getNetwork","e","timer_main","isMetaMask","ethereum","on","componentWillUnmount","render","login","Component","this","data","my_supply","my_borrow","usdx_total_supply","usdx_supply_APR","usdx_borrow_APR","usdx_u_rate","i_have_supply_usdx","i_have_borrow_usdx","to","pathname","display","width","height","background","usdt_total_supply","usdt_supply_APR","usdt_borrow_APR","usdt_u_rate","i_have_supply_usdt","i_have_borrow_usdt","imbtc_total_supply","imbtc_supply_APR","imbtc_borrow_APR","imbtc_u_rate","i_have_supply_imbtc","i_have_borrow_imbtc","weth_total_supply","weth_supply_APR","weth_borrow_APR","weth_u_rate","i_have_supply_weth","i_have_borrow_weth","usdx","USDX","usdxSpec","weth","WETHSpec","Header","checkLogIn","results","removeItem","item","connectMetamask","isLogIn","unConnectMetamask","componentDidMount_temp","setTimeout","timerID","allocateUSDx","allocateTo","toWei","allocateWETH","margin","onClick","USDxBalance","ETHBalance","WETHBalance","ETHToUSD","alignItems","fontWeight","paddingLeft","color","withMarketInfo","getAccountETHBalanceByAddress","getBalance","isImToken","ETHPersonalBalance","getAccountUSDXBalanceByAddress","usdxBalance","USDXPersonalBalance","getAccountWETHBalanceByAddress","wethBalance","WETHPersonalBalance","new_getETHAssetPrices","wethAddress","err1","res1","err2","res2","ETHToUSDBalance","USDxToUSD","USDxToUSDUnFormat","usdxMarketBalance","assets","marketInfo","banner","constant","RecordBoard","load_history","results_arr","RecentTransactions","timerOBJ","tempRnum","temp_item","temp_status","transactionHash","res_origin","goTxnHashHref","txnHashHref","open","componentWillReceiveProps","nextProps","renderRecord","decimal_precision","img_src","marginLeft","toUpperCase","decimal","moment","format","USDx_abi","WETH_abi","imBTC_abi","USDT_abi","mMarket_abi","address","Supply_usdx","timer_get_data","timer_Next","Web3","givenProvider","utils","toBN","placeholder","net","getNetworkType","Contract","res_accounts","i_am_ready","maxWidth","match","marginTop","animated","size","onChange","changePane","TabPane","tab","Fragment","type","min","target","disabled","Supply_usdt","Supply_imbtc","get_my_ETH","res_eth","my_ETH","get_my_WETH","res_weth","get_WETH_supplied__available_to_withdraw","weth_address","my_WETH_supplied","my_WETH_available_to_withdraw","handle_wrap_change","is_wrap_enable","wrap_amount","handle_wrap_click","deposit","handle_unwrap_change","is_unwrap_enable","unwrap_amount","handle_unwrap_click","Supply_weth","my_WETH","Borrow_usdx","accountInterval","Borrow_usdt","Borrow_weth","Borrow_imbtc","App","get_my_status","res_account","res_usdx_price","get_4_tokens_status","usdx_price","res_usdx_markets","totalSupply","supplyRateMantissa","borrowRateMantissa","totalBorrows","res_my_supply_usdx","res_my_borrow_usdx","res_usdt_markets","res_my_supply_usdt","res_my_borrow_usdt","res_imbtc_markets","res_my_supply_imbtc","res_my_borrow_imbtc","res_weth_markets","res_my_supply_weth","res_my_borrow_weth","get_usdx_status","res_markets","get_usdt_status","res_usdt_price","totalS","get_imbtc_status","res_imbtc_price","get_weth_status","res_weth_price","exact","path","Boolean","location","hostname","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa21ec18.chunk.js","sourcesContent":["const en_US = {\n    Decentralized: \"Earn Interest and Borrow Money at Ease with Lendf.Me\",\n    USDx_Supplied: \"USDx Supplied\",\n    USDx_Supplied_home: \"USDx Supplied\",\n    USDx_Borrowed: \"USDx Borrowed\",\n    Utilization_Rate: \"Utilization Rate\",\n    Collateralization_ratio: \"Collateralization ratio\",\n    USDx_Supply_APR: \"USDx Supply APR\",\n    USDx_Borrow_APR: \"USDx Borrow APR\",\n    Supply_USDx: \"Supply USDx\",\n    Borrow_USDx: \"Borrow USDx\",\n    Supply_your: \"Supply your USDx assets to earn interest on your holdings.\",\n    Pledge_WETH: \"Pledge WETH assets to borrow USDx instantly, at competitive interest rate.\",\n    Account_Portfolio: \"Account Portfolio\",\n    Supplied_Balance: \"Supplied Balance\",\n    Borrowed_Balance: \"Borrowed Balance\",\n    Available_to_Borrow: \"Available to Borrow\",\n    Borrow_APR: \"Borrow APR\",\n    Supply: \"Supply\",\n    WETH_Supplied: \"WETH Supplied\",\n    ETH_Balance: \"ETH Balance\",\n    WETH_Balance: \"WETH Balance\",\n    Withdraw: \"Withdraw\",\n    WETH_Available: \"WETH Available\",\n    Before_borrowing: \"Before borrowing USDx for the first time, you must enable USDx.\",\n    Borrowing_exceeds: \"Borrowing exceeds SAFE value makes your supply in risk.\",\n    Already_supplied: \"Already supplied USDx, please withdraw all of them in Lend Page before borrowing any.\",\n    USDx_Market: \"USDx Market\",\n    Total_Supplied: \"Total Supplied\",\n    Total_Borrowed: \"Total Borrowed\",\n    Supply_APR: \"Supply APR\",\n    Before_supplying: \"Before supplying USDx for the first time, you must enable USDx.\",\n    Already_borrowed: \"Already borrowed USDx, please repay all of them in Borrow Page before supplying any.\",\n    INSUFFICIENT_LIQUIDITY: \"INSUFFICIENT LIQUIDITY\",\n    INSUFFICIENT_BALANCE: \"INSUFFICIENT BALANCE\",\n    SUBMITTING: \"SUBMITTING…\",\n    Before_supplying_WETH: \"Before supplying WETH for the first time, you must enable WETH.\",\n    ENABLE_WETH: \"ENABLE WETH\",\n    Borrow: \"Borrow\",\n    USDx_Borrowed_borrow: \"USDx Borrowed\",\n    USDx_Available_borrow: \"USDx Available\",\n    USDx_Available_supply: \"USDx Available\",\n    Repay: \"Repay\",\n    USDx_Balance: \"USDx Balance\",\n    Home: \"Home\",\n    SUPPLY: \"SUPPLY\",\n    BORROW: \"BORROW\",\n    REPAY: \"REPAY\",\n    Balance: \" Balance\"\n}\nexport default en_US;","const zh_CN = {\n    Decentralized: \"随存随贷，你自己的银行\",\n    USDx_Supplied: \"USDx已存数量\",\n    USDx_Supplied_home: \"USDx存款总额\",\n    USDx_Borrowed: \"USDx借款总额\",\n    Utilization_Rate: \"USDx借存比率\",\n    Collateralization_ratio: \"抵押率\",\n    USDx_Supply_APR: \"USDx存款利率\",\n    USDx_Borrow_APR: \"USDx借款利率\",\n    Supply_USDx: \"存USDx\",\n    Borrow_USDx: \"借USDx\",\n    Supply_your: \"随存随取USDx，即时获得高额利息\",\n    Pledge_WETH: \"抵押Ether获得低利率的USDx即时借款\",\n    Account_Portfolio: \"账户信息\",\n    Supplied_Balance: \"存款总额\",\n    Borrowed_Balance: \"借款总额\",\n    Available_to_Borrow: \"可借款上限\",\n    Borrow_APR: \"借款利率\",\n    Supply: \"存款\",\n    WETH_Supplied: \"WETH已存数量\",\n    ETH_Balance: \"ETH余额\",\n    WETH_Balance: \"WETH余额\",\n    Withdraw: \"取出\",\n    WETH_Available: \"WETH可取数量\",\n    Before_borrowing: \"授权首次USDx借款\",\n    Borrowing_exceeds: \"避免使用过低抵押率导致抵押资产被清算\",\n    Already_supplied: \"借款前需取出所有USDx存款\",\n    USDx_Market: \"USDx市场\",\n    Total_Supplied: \"存款总额\",\n    Total_Borrowed: \"借款总额\",\n    Supply_APR: \"存款利率\",\n    Before_supplying: \"授权首次USDx存款\",\n    Already_borrowed: \"存款前需还清所有USDx借款\",\n    INSUFFICIENT_LIQUIDITY: \"市场流动性不足\",\n    INSUFFICIENT_BALANCE: \"余额不足\",\n    SUBMITTING: \"提交中…\",\n    Before_supplying_WETH: \"授权首次WETH存款\",\n    ENABLE_WETH: \"授权\",\n    Borrow: \"借款\",\n    USDx_Borrowed_borrow: \"USDx已借数量\",\n    USDx_Available_borrow: \"USDx可借数量\",\n    USDx_Available_supply: \"USDx可取数量\",\n    Repay: \"偿还\",\n    USDx_Balance: \"USDx余额\",\n    Home: \"首页\",\n    SUPPLY: \"存款\",\n    BORROW: \"借款\",\n    REPAY: \"偿还\",\n    Balance: \"余额\"\n}\nexport default zh_CN;","import React from 'react';\nimport './infoSection.scss';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nconst InfoSection = (props) => {\n    return (\n        <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n            <div className='info-sec-wrapper'>\n                {props.accountInfo\n                    .filter(info => info.page === props.currentPage)\n                    .map(\n                        (info, key) => (<div className='info-sec' index={key} key={key}>\n                            <div>\n                                <img src={'images/board_icon.png'} style={{ marginRight: '7px' }} alt=\"\" />\n                                {/* <div className='info-title'>{info.title}</div> */}\n                                <div className='info-title'>{info.title === 'USDx Supplied' ? <FormattedMessage id='USDx_Supplied_home' /> : null}</div>\n                                <div className='info-title'>{info.title === 'USDx Borrowed' ? <FormattedMessage id='USDx_Borrowed' /> : null}</div>\n                                <div className='info-title'>{info.title === 'Utilization Rate' ? <FormattedMessage id='Utilization_Rate' /> : null}</div>\n                                <div className='info-title'>{info.title === 'Collateralization ratio' ? <FormattedMessage id='Collateralization_ratio' /> : null}</div>\n                                <div className='info-title'>{info.title === 'USDx Supply APR' ? <FormattedMessage id='USDx_Supply_APR' /> : null}</div>\n                                <div className='info-title'>{info.title === 'USDx Borrow APR' ? <FormattedMessage id='USDx_Borrow_APR' /> : null}</div>\n\n                                <div className='info-title'>{info.title === 'Total Supplied' ? <FormattedMessage id='Total_Supplied' /> : null}</div>\n                                <div className='info-title'>{info.title === 'Total Borrowed' ? <FormattedMessage id='Total_Borrowed' /> : null}</div>\n                                <div className='info-title'>{info.title === 'Supply APR' ? <FormattedMessage id='Supply_APR' /> : null}</div>\n                                <div className='info-title'>{info.title === 'Borrow APR' ? <FormattedMessage id='Borrow_APR' /> : null}</div>\n\n                                <div className='info-title'>{info.title === 'Supplied Balance' ? <FormattedMessage id='Supplied_Balance' /> : null}</div>\n                                <div className='info-title'>{info.title === 'Borrowed Balance' ? <FormattedMessage id='Borrowed_Balance' /> : null}</div>\n                                <div className='info-title'>{info.title === 'Available to Borrow' ? <FormattedMessage id='Available_to_Borrow' /> : null}</div>\n                            </div>\n                            <div className={`info-amount${key + 1}`}>{info.amount}</div>\n                        </div>)\n                    )\n                }\n            </div>\n        </IntlProvider>\n    )\n}\n\nexport default InfoSection;","import moment from 'moment';\nimport Asset from './constant.json';\n\n\nexport const get_allowance = async (contractInstance, my_account, address_mMarket, bn) => {\n  return new Promise((resolve) => {\n    contractInstance.methods.allowance(my_account, address_mMarket).call((err, res_allowance) => {\n      console.log('res_allowance: ', res_allowance);\n      if (bn(res_allowance).gt(bn('0'))) {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n    });\n  })\n}\n\n\nexport const handle_supply_max = (that, balance, decimals) => {\n  var to_show;\n  if (balance.length <= decimals) {\n    to_show = ('0.' + ('000000000000000000' + balance).substr(-decimals)).substring(0, 18);\n  } else {\n    to_show = (that.bn(balance).div(that.bn(10 ** decimals)) + '.' + balance.substr(-decimals)).substring(0, 18);\n  }\n\n  that.setState({\n    supply_amount: to_show,\n    i_will_supply_max: true\n  });\n}\n\n\nexport const handle_withdraw_max = (that, balance, decimals) => {\n  var to_show;\n  if (balance.length <= decimals) {\n    to_show = ('0.' + ('000000000000000000' + balance).substr(-decimals)).substring(0, 18);\n  } else {\n    to_show = (that.bn(balance).div(that.bn(10 ** decimals)) + '.' + balance.substr(-decimals)).substring(0, 18);\n  }\n\n  that.setState({\n    withdraw_amount: to_show,\n    i_will_withdraw_max: true\n  });\n}\n\n\nexport const handle_supply_change = (value, that, decimals, balance) => {\n  if (value.length > 18) {\n    return;\n  }\n\n  that.setState({ i_will_supply_max: false });\n\n  if (value === null || value === '') {\n    console.log(\"value === null || value === ''\")\n    that.setState({\n      is_supply_enable: true,\n      supply_amount: null\n    });\n    return false;\n  } else {\n    var amount_bn;\n    var temp_value = value;\n    if (temp_value.indexOf('.') > 0) {\n      var sub_num = temp_value.length - temp_value.indexOf('.') - 1;// 3\n      if (sub_num > decimals) {\n        console.log(' --- decimals extent ---');\n        that.setState({\n          supply_amount: value,\n          is_supply_enable: false\n        });\n        return false;\n      }\n      temp_value = temp_value.substr(0, temp_value.indexOf('.')) + temp_value.substr(value.indexOf('.') + 1);// '123456'\n      amount_bn = that.bn(temp_value).mul(that.bn(10 ** (decimals - sub_num)));// bn_'123456'\n    } else {\n      amount_bn = that.bn(value).mul(that.bn(10 ** decimals));\n    }\n\n    console.log(amount_bn.toString());\n\n    if (amount_bn.sub(that.bn(balance)) > 0) {\n      console.log(' --- INSUFFICIENT BALANCE ---');\n      that.setState({\n        supply_amount: value,\n        is_supply_enable: false\n      });\n      return false;\n    }\n  }\n\n  that.setState({ supply_amount: value });\n\n  if ((Number(value)) === 0) {\n    that.setState({ is_supply_enable: false });\n    return;\n  } else {\n    that.setState({ is_supply_enable: true });\n  }\n}\n\n\nexport const handle_withdraw_change = (value, that, decimals, balance) => {\n  if (value.length > 18) {\n    return;\n  }\n\n  that.setState({ i_will_withdraw_max: false });\n\n  if (value === null || value === '') {\n    console.log(\"value === null || value === ''\")\n    that.setState({\n      is_withdraw_enable: true,\n      withdraw_amount: null\n    });\n    return false;\n  } else {\n    var amount_bn;\n    var temp_value = value;\n    if (temp_value.indexOf('.') > 0) {\n      var sub_num = temp_value.length - temp_value.indexOf('.') - 1;// 3\n      if (sub_num > decimals) {\n        console.log(' --- decimals extent ---');\n        that.setState({\n          withdraw_amount: value,\n          is_withdraw_enable: false\n        });\n        return false;\n      }\n      temp_value = temp_value.substr(0, temp_value.indexOf('.')) + temp_value.substr(value.indexOf('.') + 1);// '123456'\n      amount_bn = that.bn(temp_value).mul(that.bn(10 ** (decimals - sub_num)));// bn_'123456'\n    } else {\n      amount_bn = that.bn(value).mul(that.bn(10 ** decimals));\n    }\n\n    console.log(amount_bn.toString());\n\n    if (amount_bn.sub(that.bn(balance)) > 0) {\n      console.log(' --- INSUFFICIENT BALANCE ---');\n      that.setState({\n        withdraw_amount: value,\n        is_withdraw_enable: false\n      });\n      return false;\n    }\n  }\n\n  that.setState({ withdraw_amount: value });\n\n  if ((Number(value)) === 0) {\n    that.setState({ is_withdraw_enable: false });\n    return;\n  } else {\n    that.setState({ is_withdraw_enable: true });\n  }\n}\n\n\nexport const format_bn = (numStr, decimals, decimalPlace = decimals) => {\n  numStr = numStr.toLocaleString().replace(/,/g, '');\n  // decimals = decimals.toString();\n\n  var str = (10 ** decimals).toLocaleString().replace(/,/g, '').slice(1);\n\n  var res = (numStr.length > decimals ?\n    numStr.slice(0, numStr.length - decimals) + '.' + numStr.slice(numStr.length - decimals) :\n    '0.' + str.slice(0, str.length - numStr.length) + numStr).replace(/(0+)$/g, \"\");\n\n  res = res.slice(-1) == '.' ? res + '00' : res;\n\n  if (decimalPlace == 0)\n    return res.slice(0, res.indexOf('.'));\n\n  var length = res.indexOf('.') + 1 + decimalPlace;\n  return res.slice(0, length >= res.length ? res.length : length);\n  // return res.slice(-1) == '.' ? res + '00' : res;\n}\n\n\nexport const get_my_balance = (tokenContract, account, that) => {\n  tokenContract.methods.balanceOf(account).call((err, res_balance) => {\n    if (res_balance) {\n      that.setState({\n        my_balance: res_balance\n      }, () => {\n        // console.log(that.state.my_balance)\n        // console.log(typeof (res_balance))\n      })\n    }\n  });\n}\n\n\nexport const get_supplied__available_to_withdraw = (mContract, tokenContract, account, token_address, m_address, that) => {\n  mContract.methods.getSupplyBalance(account, token_address).call((err, res_supplied) => {\n\n    that.setState({ my_supplied: res_supplied }, () => {\n\n      mContract.methods.calculateAccountValues(account).call((err, res_account_values) => {\n        mContract.methods.assetPrices(token_address).call((err, res_price) => {\n          tokenContract.methods.balanceOf(m_address).call((err, res_cash) => {\n\n            var m_supply = that.bn(res_account_values[1]);\n            if (that.bn(res_account_values[2]).gt(that.bn('0'))) {\n              var m_borrow = that.bn(res_account_values[2]).mul(that.bn(that.collateral_rate)).add(that.bn(5 ** 17)).div(that.bn(10 ** 18));\n              if (that.bn(res_account_values[1]).gt(m_borrow)) {\n                m_supply = that.bn(res_account_values[1]).sub(m_borrow);\n              }\n            }\n            // console.log('res_supplied: ', res_supplied)\n            // console.log('res_account_values: ', res_account_values)\n            // console.log('res_price: ', res_price)\n            // console.log('res_cash: ', res_cash)\n            var liquidity_bn = m_supply.div(that.bn(res_price));\n            var SmallNum_bn = liquidity_bn.lt(that.bn(res_supplied)) ? liquidity_bn : that.bn(res_supplied);\n            var SmallNum_est = SmallNum_bn.lt(that.bn(res_cash)) ? SmallNum_bn.toString() : res_cash;\n            // console.log('SmallNum_est: ', SmallNum_est)\n            // console.log('-------------------------------------------')\n\n            that.setState({ available_to_withdraw: SmallNum_est })\n\n          })\n        })\n      })\n    })\n  })\n}\n\n\nexport const get_available_to_borrow = (mContract, tokenContract, m_address, token_address, account, collateral_rate, originationFee, that) => {\n  console.log('*********');\n  mContract.methods.getAccountLiquidity(account).call((err, res_liquidity) => {\n    // console.log(res_liquidity);\n\n    if (!(that.bn(res_liquidity).gt('0'))) {\n      that.setState({ available_to_borrow: 0 });\n      return false;\n    } else {\n\n      tokenContract.methods.balanceOf(m_address).call((err, res_cash) => {\n        mContract.methods.assetPrices(token_address).call((err, res_price) => {\n          // console.log('res_cash: ', res_cash);\n          // console.log('res_price: ', res_price);\n\n          var liquidity_bn = that.bn(res_liquidity).mul(that.bn('10').pow(that.bn('54'))).div(that.bn(res_price).mul(that.bn(collateral_rate)).mul(that.bn('10').pow(that.bn('18')).add(that.bn(originationFee))));\n          var to_borrow_bn = liquidity_bn.lt(that.bn(res_cash)) ? liquidity_bn : that.bn(res_cash);\n\n          console.log('available_to_borrow: ', to_borrow_bn.toString());\n          that.setState({ available_to_borrow: to_borrow_bn.toString() });\n        })\n      })\n    }\n  })\n}\n\n\nexport const i_got_hash = (account, net_type, token, action, amount, hash, timestamp, status, that) => {\n  if (window.localStorage) {\n    let key = account + '-' + net_type;\n    let contractData = JSON.parse(window.localStorage.getItem(key)) || [];\n    contractData.push({\n      account: account,\n      net_type: net_type,\n      token: token,\n      action: action,\n      amount: amount,\n      hash: hash,\n      timestamp: timestamp,\n      status: status\n    });\n    window.localStorage.setItem(key, JSON.stringify(contractData));\n    console.log('got hash && setItem.');\n\n    that.setState({ load_new_history: Math.random() });\n  }\n}\n\n\nexport const handle_approve = (tokenContract, that, m_address) => {\n  if (that.state.isEnableing) {\n    return false;\n  }\n\n  that.setState({ isEnableing: true });\n\n  tokenContract.methods.approve(m_address, -1).estimateGas({ from: that.state.my_account }, (err, gasLimit) => {\n    that.new_web3.eth.getGasPrice((err, gasPrice) => {\n      console.log('handle_approve_gasLimit: ', gasLimit);\n      console.log('handle_approve_gasPrice: ', gasPrice);\n\n      tokenContract.methods.approve(m_address, -1).send(\n        {\n          from: that.state.my_account,\n          gas: Math.ceil(gasLimit * that.gas_limit_coefficient),\n          gasPrice: gasPrice\n        }, (reject, res_hash) => {\n          if (res_hash) {\n            console.log(res_hash);\n            let timestamp = new Date().getTime();\n            i_got_hash(that.state.my_account, that.state.net_type, that.token_name, 'approve', '-1', res_hash, timestamp, 'pendding', that);\n            let check_approve = setInterval(() => {\n              that.new_web3.eth.getTransactionReceipt(res_hash, (res_fail, res_success) => {\n                if (res_success) {\n                  clearInterval(check_approve);\n                  if (res_success.status === true) {\n                    that.setState({ is_approved: true })\n                  }\n                }\n                if (res_fail) {\n                  console.log(res_fail);\n                  clearInterval(check_approve);\n                }\n              })\n            }, 2000)\n          }\n          if (reject) {\n            that.setState({ isEnableing: false });\n            console.log(reject)\n          }\n        }\n      )\n    })\n  });\n};\n\n\nexport const handle_supply_click = (that, decimals, token_address) => {\n  if (!(that.state.is_supply_enable && that.state.supply_amount)) {\n    console.log('i return you...');\n    return false;\n  }\n\n  that.setState({ is_supply_enable: false });\n\n  var amount_str = that.state.supply_amount;// '123.456'\n  var amount_bn;\n\n  if (amount_str.indexOf('.') > 0) {\n    var sub_num = amount_str.length - amount_str.indexOf('.') - 1;// 3\n    amount_str = amount_str.substr(0, amount_str.indexOf('.')) + amount_str.substr(amount_str.indexOf('.') + 1);// '123456'\n    amount_bn = that.bn(amount_str).mul(that.bn(10 ** (decimals - sub_num)));// bn_'123456'\n  } else {\n    amount_bn = that.bn(amount_str).mul(that.bn(10 ** decimals));\n  }\n\n  if (that.state.i_will_supply_max) {\n    amount_bn = that.bn(that.state.my_balance)\n  }\n\n  console.log('amount_bn: ', amount_bn);\n  console.log('amount_bn string: ', amount_bn.toString());\n\n  that.state.mMarket.methods.supply(token_address, amount_bn.toString()).estimateGas({ from: that.state.my_account }, (err, gasLimit) => {\n    that.new_web3.eth.getGasPrice((err, gasPrice) => {\n      console.log('supply_gasLimit: ', gasLimit);\n      console.log('supply_gasPrice: ', gasPrice);\n\n      that.state.mMarket.methods.supply(token_address, amount_bn.toString()).send(\n        {\n          from: that.state.my_account,\n          gas: Math.ceil(gasLimit * that.gas_limit_coefficient),\n          gasPrice: gasPrice\n        }, (reject, res_hash) => {\n          // 成功后返回哈希\n          if (res_hash) {\n            console.log(res_hash);\n            that.setState({ is_supply_enable: true, supply_amount: null });\n            let timestamp = new Date().getTime();\n            i_got_hash(that.state.my_account, that.state.net_type, that.token_name, 'supply', amount_bn.toString(), res_hash, timestamp, 'pendding', that);\n          }\n          // 点击取消\n          if (reject) {\n            console.log(reject)\n            that.setState({ is_supply_enable: true });\n          }\n        }\n      )\n    })\n  })\n}\n\n\nexport const handle_withdraw_click = (that, decimals, token_address) => {\n  if (!(that.state.is_withdraw_enable && that.state.withdraw_amount)) {\n    console.log('i return you...');\n    return false;\n  }\n\n  that.setState({ is_withdraw_enable: false });\n\n  var amount_str = that.state.withdraw_amount;// '123.456'\n  var amount_bn;\n\n  if (amount_str.indexOf('.') > 0) {\n    var sub_num = amount_str.length - amount_str.indexOf('.') - 1;// 3\n    amount_str = amount_str.substr(0, amount_str.indexOf('.')) + amount_str.substr(amount_str.indexOf('.') + 1);// '123456'\n    amount_bn = that.bn(amount_str).mul(that.bn(10 ** (decimals - sub_num)));// bn_'123456'\n  } else {\n    amount_bn = that.bn(amount_str).mul(that.bn(10 ** decimals));\n  }\n\n  var amount_bn_to_history = amount_bn;\n\n  if (that.state.i_will_withdraw_max) {\n    amount_bn = that.bn('-1');\n  }\n\n  console.log('amount_bn: ', amount_bn);\n  console.log('amount_bn string: ', amount_bn.toString());\n\n  that.state.mMarket.methods.withdraw(token_address, amount_bn.toString()).estimateGas({ from: that.state.my_account }, (err, gasLimit) => {\n    that.new_web3.eth.getGasPrice((err, gasPrice) => {\n      console.log('supply_gasLimit: ', gasLimit);\n      console.log('supply_gasPrice: ', gasPrice);\n\n      that.state.mMarket.methods.withdraw(token_address, amount_bn.toString()).send(\n        {\n          from: that.state.my_account,\n          gas: Math.ceil(gasLimit * that.gas_limit_coefficient),\n          gasPrice: gasPrice\n        }, (reject, res_hash) => {\n          // 成功后返回哈希\n          if (res_hash) {\n            console.log(res_hash);\n            let timestamp = new Date().getTime();\n            that.setState({ is_withdraw_enable: true, withdraw_amount: null });\n            i_got_hash(that.state.my_account, that.state.net_type, that.token_name, 'withdraw', amount_bn_to_history.toString(), res_hash, timestamp, 'pendding', that);\n          }\n          // 点击取消\n          if (reject) {\n            console.log(reject);\n            that.setState({ is_withdraw_enable: true });\n          }\n        }\n      )\n    })\n  })\n}\n\n\nexport const get_borrow_balance = (mContract, account, token_address, that) => {\n  mContract.methods.getBorrowBalance(account, token_address).call((err, res_borrowed) => {\n    if (res_borrowed) {\n      that.setState({\n        my_borrowed: res_borrowed\n      }, () => {\n        // console.log(that.state.my_borrowed)\n      })\n    }\n  });\n}\n\n\n\n// export const get_allowance = async (web) => {\n//   return new Promise(resolve => {\n//     web.givenProvider.enable().then(res_accounts => {\n//       setTimeout(() => { resolve(res_accounts) }, 15000)\n\n//     })\n//   })\n//   // await web.givenProvider.enable().then(res_accounts => {\n//   //   console.log(res_accounts);\n//   //   return res_accounts;\n//   // })\n// }\n\n\n// ***** 分割线 *****  ***** 分割线 *****  ***** 分割线 *****  ***** 分割线 *****  ***** 分割线 *****  ***** 分割线 *****  ***** 分割线 ***** ***** 分割线 *****  ***** 分割线 ***** \n\n\nexport const handle_borrow_change = (value, that, decimals, balance) => {\n  if (value.length > 18) {\n    return;\n  }\n\n  that.setState({ i_will_borrow_max: false });\n\n  if (value === null || value === '') {\n    console.log(\"value === null || value === ''\")\n    that.setState({\n      is_borrow_enable: true,\n      borrow_amount: null\n    });\n    return false;\n  } else {\n    var amount_bn;\n    var temp_value = value;\n    if (temp_value.indexOf('.') > 0) {\n      var sub_num = temp_value.length - temp_value.indexOf('.') - 1;// 3\n      if (sub_num > decimals) {\n        console.log(' --- decimals extent ---');\n        that.setState({\n          borrow_amount: value,\n          is_borrow_enable: false\n        });\n        return false;\n      }\n      temp_value = temp_value.substr(0, temp_value.indexOf('.')) + temp_value.substr(value.indexOf('.') + 1);// '123456'\n      amount_bn = that.bn(temp_value).mul(that.bn(10 ** (decimals - sub_num)));// bn_'123456'\n    } else {\n      amount_bn = that.bn(value).mul(that.bn(10 ** decimals));\n    }\n\n    console.log(amount_bn.toString());\n\n    if (amount_bn.sub(that.bn(balance)) > 0) {\n      console.log(' --- INSUFFICIENT BALANCE ---');\n      that.setState({\n        borrow_amount: value,\n        is_borrow_enable: false\n      });\n      return false;\n    }\n  }\n\n  that.setState({ borrow_amount: value });\n\n  if ((Number(value)) === 0) {\n    that.setState({ is_borrow_enable: false });\n    return;\n  } else {\n    that.setState({ is_borrow_enable: true });\n  }\n}\n\n\nexport const handle_repay_change = (value, that, decimals, balance) => {\n  if (value.length > 18) {\n    return;\n  }\n\n  that.setState({ i_will_repay_max: false });\n\n  if (value === null || value === '') {\n    console.log(\"value === null || value === ''\")\n    that.setState({\n      is_repay_enable: true,\n      repay_amount: null\n    });\n    return false;\n  } else {\n    var amount_bn;\n    var temp_value = value;\n    if (temp_value.indexOf('.') > 0) {\n      var sub_num = temp_value.length - temp_value.indexOf('.') - 1;// 3\n      if (sub_num > decimals) {\n        console.log(' --- decimals extent ---');\n        that.setState({\n          repay_amount: value,\n          is_repay_enable: false\n        });\n        return false;\n      }\n      temp_value = temp_value.substr(0, temp_value.indexOf('.')) + temp_value.substr(value.indexOf('.') + 1);// '123456'\n      amount_bn = that.bn(temp_value).mul(that.bn(10 ** (decimals - sub_num)));// bn_'123456'\n    } else {\n      amount_bn = that.bn(value).mul(that.bn(10 ** decimals));\n    }\n\n    console.log(amount_bn.toString());\n\n    if (amount_bn.sub(that.bn(balance)) > 0) {\n      console.log(' --- INSUFFICIENT BALANCE ---');\n      that.setState({\n        repay_amount: value,\n        is_repay_enable: false\n      });\n      return false;\n    }\n  }\n\n  that.setState({ repay_amount: value });\n\n  if ((Number(value)) === 0) {\n    that.setState({ is_repay_enable: false });\n    return;\n  } else {\n    that.setState({ is_repay_enable: true });\n  }\n}\n\n\nexport const handle_borrow_click = (that, decimals, token_address) => {\n  if (!(that.state.is_borrow_enable && that.state.borrow_amount)) {\n    console.log('i return you...');\n    return false;\n  }\n\n  that.setState({ is_borrow_enable: false });\n\n  var amount_str = that.state.borrow_amount;// '123.456'\n  var amount_bn;\n\n  if (amount_str.indexOf('.') > 0) {\n    var sub_num = amount_str.length - amount_str.indexOf('.') - 1;// 3\n    amount_str = amount_str.substr(0, amount_str.indexOf('.')) + amount_str.substr(amount_str.indexOf('.') + 1);// '123456'\n    amount_bn = that.bn(amount_str).mul(that.bn(10 ** (decimals - sub_num)));// bn_'123456'\n  } else {\n    amount_bn = that.bn(amount_str).mul(that.bn(10 ** decimals));\n  }\n\n  if (that.state.i_will_borrow_max) {\n    amount_bn = that.bn(that.state.available_to_borrow)\n  }\n\n  console.log('amount_bn: ', amount_bn);\n  console.log('amount_bn string: ', amount_bn.toString());\n\n  that.state.mMarket.methods.borrow(token_address, amount_bn.toString()).estimateGas({ from: that.state.my_account }, (err, gasLimit) => {\n    that.new_web3.eth.getGasPrice((err, gasPrice) => {\n      console.log('supply_gasLimit: ', gasLimit);\n      console.log('supply_gasPrice: ', gasPrice);\n\n      that.state.mMarket.methods.borrow(token_address, amount_bn.toString()).send(\n        {\n          from: that.state.my_account,\n          gas: Math.ceil(gasLimit * that.gas_limit_coefficient),\n          gasPrice: gasPrice\n        }, (reject, res_hash) => {\n          // 成功后返回哈希\n          if (res_hash) {\n            console.log(res_hash);\n            that.setState({ is_borrow_enable: true, borrow_amount: null });\n            let timestamp = new Date().getTime();\n            i_got_hash(that.state.my_account, that.state.net_type, that.token_name, 'borrow', amount_bn.toString(), res_hash, timestamp, 'pendding', that);\n          }\n          // 点击取消\n          if (reject) {\n            console.log(reject)\n            that.setState({ is_borrow_enable: true });\n          }\n        }\n      )\n    })\n  })\n}\n\n\nexport const handle_repay_click = (that, decimals, token_address) => {\n  if (!(that.state.is_repay_enable && that.state.repay_amount)) {\n    console.log('i return you...');\n    return false;\n  }\n\n  that.setState({ is_repay_enable: false });\n\n  var amount_str = that.state.repay_amount;// '123.456'\n  var amount_bn;\n  var amount_bn_to_history;\n\n  if (amount_str.indexOf('.') > 0) {\n    var sub_num = amount_str.length - amount_str.indexOf('.') - 1;// 3\n    amount_str = amount_str.substr(0, amount_str.indexOf('.')) + amount_str.substr(amount_str.indexOf('.') + 1);// '123456'\n    amount_bn_to_history = amount_bn = that.bn(amount_str).mul(that.bn(10 ** (decimals - sub_num)));// bn_'123456'\n  } else {\n    amount_bn_to_history = amount_bn = that.bn(amount_str).mul(that.bn(10 ** decimals));\n  }\n\n  if (that.state.i_will_repay_max) {\n    if (that.bn(that.state.my_balance).gt(that.bn(that.state.my_borrowed))) {\n      amount_bn = that.bn('-1');\n      amount_bn_to_history = that.bn(that.state.my_borrowed);\n    } else {\n      amount_bn_to_history = amount_bn = that.bn(that.state.my_balance);\n    }\n  }\n\n  console.log('amount_bn: ', amount_bn);\n  console.log('amount_bn string: ', amount_bn.toString());\n\n  that.state.mMarket.methods.repayBorrow(token_address, amount_bn.toString()).estimateGas({ from: that.state.my_account }, (err, gasLimit) => {\n    that.new_web3.eth.getGasPrice((err, gasPrice) => {\n      console.log('supply_gasLimit: ', gasLimit);\n      console.log('supply_gasPrice: ', gasPrice);\n\n      that.state.mMarket.methods.repayBorrow(token_address, amount_bn.toString()).send(\n        {\n          from: that.state.my_account,\n          gas: Math.ceil(gasLimit * that.gas_limit_coefficient),\n          gasPrice: gasPrice\n        }, (reject, res_hash) => {\n          // 成功后返回哈希\n          if (res_hash) {\n            console.log(res_hash);\n            that.setState({ is_repay_enable: true, repay_amount: null });\n            let timestamp = new Date().getTime();\n            i_got_hash(that.state.my_account, that.state.net_type, that.token_name, 'repay', amount_bn_to_history.toString(), res_hash, timestamp, 'pendding', that);\n          }\n          // 点击取消\n          if (reject) {\n            console.log(reject)\n            that.setState({ is_repay_enable: true });\n          }\n        }\n      )\n    })\n  })\n}\n\n\n// export const handle_wrap_change = (value, that, decimals, balance) => {\n//   if (value.length > 18) {\n//     return;\n//   }\n\n//   that.setState({ i_will_wrap_max: false });\n\n//   if (value === null || value === '') {\n//     console.log(\"value === null || value === ''\")\n//     that.setState({\n//       is_wrap_enable: true,\n//       borrow_amount: null\n//     });\n//     return false;\n//   } else {\n//     var amount_bn;\n//     var temp_value = value;\n//     if (temp_value.indexOf('.') > 0) {\n//       var sub_num = temp_value.length - temp_value.indexOf('.') - 1;// 3\n//       if (sub_num > decimals) {\n//         console.log(' --- decimals extent ---');\n//         that.setState({\n//           borrow_amount: value,\n//           is_borrow_enable: false\n//         });\n//         return false;\n//       }\n//       temp_value = temp_value.substr(0, temp_value.indexOf('.')) + temp_value.substr(value.indexOf('.') + 1);// '123456'\n//       amount_bn = that.bn(temp_value).mul(that.bn(10 ** (decimals - sub_num)));// bn_'123456'\n//     } else {\n//       amount_bn = that.bn(value).mul(that.bn(10 ** decimals));\n//     }\n\n//     console.log(amount_bn.toString());\n\n//     if (amount_bn.sub(that.bn(balance)) > 0) {\n//       console.log(' --- INSUFFICIENT BALANCE ---');\n//       that.setState({\n//         borrow_amount: value,\n//         is_borrow_enable: false\n//       });\n//       return false;\n//     }\n//   }\n\n//   that.setState({ borrow_amount: value });\n\n//   if ((Number(value)) === 0) {\n//     that.setState({ is_borrow_enable: false });\n//     return;\n//   } else {\n//     that.setState({ is_borrow_enable: true });\n//   }\n// }\n\n\n\nexport const handle_borrow_max = (that, balance, decimals) => {\n  var to_show;\n  if (balance.length <= decimals) {\n    to_show = ('0.' + ('000000000000000000' + balance).substr(-decimals)).substring(0, 18);\n  } else {\n    to_show = (that.bn(balance).div(that.bn(10 ** decimals)) + '.' + balance.substr(-decimals)).substring(0, 18);\n  }\n\n  that.setState({\n    borrow_amount: to_show,\n    i_will_borrow_max: true\n  });\n}\n\n\nexport const handle_repay_max = (that, balance, borrowed, decimals) => {\n  var to_show;\n\n  if (that.bn(balance).gt(that.bn(borrowed))) {\n    if (borrowed.length <= decimals) {\n      to_show = ('0.' + ('000000000000000000' + borrowed).substr(-decimals)).substring(0, 18);\n    } else {\n      to_show = (that.bn(borrowed).div(that.bn(10 ** decimals)) + '.' + borrowed.substr(-decimals)).substring(0, 18);\n    }\n  } else {\n    if (balance.length <= decimals) {\n      to_show = ('0.' + ('000000000000000000' + balance).substr(-decimals)).substring(0, 18);\n    } else {\n      to_show = (that.bn(balance).div(that.bn(10 ** decimals)) + '.' + balance.substr(-decimals)).substring(0, 18);\n    }\n  }\n\n  that.setState({\n    repay_amount: to_show,\n    i_will_repay_max: true\n  });\n}\n\n\n\n\n\n\n\nexport const validNumber = (number) => {\n  let reg = /^(\\+)?\\d+(\\.\\d+)?$/;\n  return reg.test(number);\n}\n\nexport const toFormatShowNumber = (value) => {\n  return String(value).replace(/^(.*\\..{2}).*$/, \"$1\");\n  // let val = String(value).replace(/^(.*\\..{2}).*$/, \"$1\");\n  // if (val.split(\".\")[1] === undefined) {\n  //   val = val + '.00'\n  // } else if (val.split(\".\")[1].length < 2) {\n  //   val = val + '0'\n  // }\n  // return val;\n}\n\nexport const toFormat4Number = (value) => {\n  // console.log(value)\n  let val = String(value).replace(/^(.*\\..{4}).*$/, \"$1\");\n  if (val.split(\".\")[1] === undefined) {\n    val = val + '.00'\n  } else if (val.split(\".\")[1].length < 4) {\n    val = val + '0'\n  }\n  // console.log(val)\n  return val;\n}\n\nexport const toFormat10Number = (value) => {\n  // console.log(value)\n  let val = String(value).replace(/^(.*\\..{10}).*$/, \"$1\");\n  if (val.split(\".\")[1] === undefined) {\n    val = val + '.00'\n  } else if (val.split(\".\")[1].length < 4) {\n    val = val + '0'\n  }\n  // console.log(val)\n  return val;\n}\n\nexport const getPercentageFormat = (value) => {\n  return (value * 100).toFixed(2);\n}\n\nexport const toNonExponential = (num) => {\n  var m = num.toExponential().match(/\\d(?:\\.(\\d*))?e([+-]\\d+)/);\n  return num.toFixed(Math.max(0, (m[1] || '').length - m[2]));\n}\n\nexport const toDoubleThousands = (s) => {\n  if (s == null || s === '') {\n    return '0.00';\n  }\n  s = toFormatShowNumber(s);\n  let l = s.split(\".\")[0].split(\"\").reverse(),\n    r = s.split(\".\")[1];\n  // console.log('s:' + s + ' / l:' +l + ' / r:' + r)\n  if (r === undefined) {\n    r = '00';\n  } else if (r.length < 2) {\n    r = r + '0';\n  }\n  let t = \"\";\n  for (let i = 0; i < l.length; i++) {\n    t += l[i] + ((i + 1) % 3 == 0 && (i + 1) != l.length ? \",\" : \"\");\n  }\n  return t.split(\"\").reverse().join(\"\") + \".\" + r;\n}\n\nexport const getTransactionHistoryKey = (account, coinType, page, networkId) => {\n  return account + '-' + Asset['Asset'][coinType] + '-' + page + '-' + networkId;\n}\n\nexport const saveTransaction = (icon, account, coinType, page, networkId, transactionType,\n  transactionAmount, coinType2, txnHashHref, txId, status, realAmount, failed, failedInfo) => {\n  if (status === undefined || status === null || status === '') {\n    status = 0;// 0:pending 1:done\n  }\n  if (transactionAmount === null) {\n    transactionAmount = ' ';\n  } else {\n    transactionAmount = ' ' + transactionAmount + ' ';\n  }\n  if (window.localStorage) {\n    let storage = window.localStorage;\n    // storage.clear();\n    // let dateTime = moment().format('MMMM Do, h:mm a');\n    let dateTime = moment().format('MMM. DD,HH:mm');\n    let key = getTransactionHistoryKey(account, coinType, page, networkId);\n    let contractData = JSON.parse(storage.getItem(key)) || [];\n    contractData.push({\n      icon: icon,\n      transactionDetail: transactionType + transactionAmount + coinType2,\n      transactionTime: dateTime,\n      txnHashHref: txnHashHref,\n      txId: txId,\n      status: status,\n      transactionType: transactionType,\n      realAmount: realAmount,\n      failed: failed,\n      failedInfo: failedInfo,\n      //超时则取消控件限制\n      timestamp: moment().valueOf(),\n      timeOutFlag: -1\n    });\n    storage.setItem(key, JSON.stringify(contractData));\n    // save txId key\n    let txIdKey = 'txId-' + txId;\n    storage.setItem(txIdKey, txId)\n    // console.log('========>key:' + key + ' / value:' + storage.getItem(key));\n  }\n}\nexport const txIdExist = (txId) => {\n  if (window.localStorage) {\n    let key = 'txId-' + txId;\n    let storage = window.localStorage;\n    return storage.getItem(key) !== null;\n  }\n}\n\nexport const blockHashExist = (blockHash) => {\n  if (window.localStorage) {\n    let key = 'blockHash-' + blockHash;\n    let storage = window.localStorage;\n    if (storage.getItem(key) !== null) {\n      return true;\n    } else {\n      storage.setItem(key, blockHash);\n      return false;\n    }\n  }\n}\n\nexport const getTxnHashHref = (networkId) => {\n  let txnHashHref;\n  switch (networkId) {\n    case \"1\":\n      txnHashHref = \"https://etherscan.io/tx/\";\n      break;\n    case \"2\"://Morden(不再使用的网络)\n      txnHashHref = \"https://etherscan.io/tx/\";\n      break;\n    case \"3\":\n      txnHashHref = \"https://ropsten.etherscan.io/tx/\";\n      break;\n    case \"4\":\n      txnHashHref = \"https://rinkeby.etherscan.io/tx/\";\n      break;\n    case \"42\":\n      txnHashHref = \"https://kovan.etherscan.io/tx/\";\n      break;\n    default:\n      txnHashHref = \"\";\n  }\n  return txnHashHref;\n}\n\nexport const findNetwork = (networkId) => {\n  let networkName;\n  switch (networkId) {\n    case \"1\":\n      networkName = \"Main\";\n      break;\n    case \"2\":\n      networkName = \"Morden\";\n      break;\n    case \"3\":\n      networkName = \"Ropsten\";\n      break;\n    case \"4\":\n      networkName = \"Rinkeby\";\n      break;\n    case \"42\":\n      networkName = \"Kovan\";\n      break;\n    default:\n      networkName = \"Unknown\";\n  }\n  return networkName;\n}\n\nexport const getLoginStatusKey = (account) => {\n  return account + '-LoginStatus';\n}\n\nexport const saveLoginStatus = (account, isLogin) => {\n  if (account === undefined || isLogin === null) {\n    return;\n  }\n  if (window.localStorage) {\n    let storage = window.localStorage;\n    let key = getLoginStatusKey(account);\n    let contractData = JSON.parse(storage.getItem(key)) || [];\n    contractData.push({\n      account: account,\n      isLogin: isLogin\n    });\n    storage.setItem(key, JSON.stringify(contractData));\n  }\n}\n\nexport const formatTransactionTime = (time) => {\n  return time.substr(0, time.indexOf(' ')).substr(0, 3) + '.' + ' ' + time.substr(time.indexOf(' ') + 1);\n}\n\n//超时则取消控件限制\nexport const diffMin = (eTime) => {\n  let date1 = moment(moment().valueOf());\n  let date2 = moment(eTime);\n  let minutes = date1.diff(date2, 'minute');\n  return minutes;\n}\n\n//bignumber\nexport const formatBigNumber = (bigNumber) => {\n  let NumStr = Number(bigNumber).toLocaleString().replace(/,/g, '')\n  const str = '000000000000000000';\n  if (NumStr.length < 18) {\n    bigNumber = '0.' + str.slice(0, str.length - NumStr.length) + NumStr.replace(/(0+)$/g, \"\");\n  } else {\n    bigNumber = (NumStr.slice(0, NumStr.length - 18) === '' ? 0 : NumStr.slice(0, NumStr.length - 18)) + '.' + NumStr.slice(NumStr.length - 18, NumStr.length - 10);\n  }\n  return bigNumber;\n}\n\n\n\n\n\n\n\n\n\n\nexport const get_tokens_decimals = (USDx, WETH, imBTC, USDT, that) => {\n  USDx.methods.decimals().call().then(res_usdx_decimals => {\n    console.log('usdx: ', res_usdx_decimals);\n    that.setState({ USDx_decimals: Number(res_usdx_decimals) })\n  })\n\n  WETH.methods.decimals().call().then(res_weth_decimals => {\n    console.log('weth: ', res_weth_decimals);\n    that.setState({ WETH_decimals: Number(res_weth_decimals) })\n  })\n\n  imBTC.methods.decimals().call().then(res_imBTC_decimals => {\n    console.log('imbtc: ', res_imBTC_decimals);\n    that.setState({ imBTC_decimals: Number(res_imBTC_decimals) })\n  })\n\n  USDT.methods.decimals().call().then(res_usdt_decimals => {\n    console.log('usdt: ', res_usdt_decimals);\n    that.setState({ USDT_decimals: Number(res_usdt_decimals) })\n  })\n}\n\n\n\n\n// export const get_allowance = async (web) => {\n//   return new Promise(resolve => {\n//     web.givenProvider.enable().then(res_accounts => {\n//       setTimeout(() => { resolve(res_accounts) }, 15000)\n\n//     })\n//   })\n//   // await web.givenProvider.enable().then(res_accounts => {\n//   //   console.log(res_accounts);\n//   //   return res_accounts;\n//   // })\n// }\n\n\n\n\n\n","import { findNetwork } from '../util.js';\nlet moneyMarket = require('./moneyMarket.json');\n\nexport default function MoneyMarket() {\n    if (typeof web3 === 'undefined') {\n        return;\n    }\n    const contractSpec = window.web3.eth.contract(moneyMarket);\n    // window.web3.version.getNetwork((e, r) => {\n    //     if (r) {\n    //         let NetworkName = findNetwork(r);\n    //         var MoneyMarket;\n    //         if (NetworkName === 'Main') {\n    //             MoneyMarket = contractSpec.at(\"0xeda3849869fd560b49dab8c110be3a020f46c79e\");\n    //         } else if (NetworkName === 'Rinkeby') {\n    //             MoneyMarket = contractSpec.at(\"0x5759F246E6b66B654c61Fec7427dc69E693E98fA\");\n    //         }\n    //     }\n    // })\n    let NetworkName = findNetwork(window.web3.version.network);\n    var MoneyMarket;\n    if (NetworkName === 'Main') {\n        MoneyMarket = contractSpec.at(\"0xeda3849869fd560b49dab8c110be3a020f46c79e\");\n    } else if (NetworkName === 'Rinkeby') {\n        MoneyMarket = contractSpec.at(\"0x5759F246E6b66B654c61Fec7427dc69E693E98fA\");\n    }\n    return MoneyMarket;\n}","import React, { Component } from 'react';\nimport InfoSection from '../../component/infoSection/infoSection';\nimport Network from '../../constant.json';\nimport MoneyMarket from './../../ABIs/MoneyMarket.js';\nimport { getPercentageFormat, toDoubleThousands, findNetwork } from '../../util.js';\n\nimport './accountInfo.scss';\n\n\nclass AccountInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.web3 = window.web3;\n  }\n\n  get_USDx_supply_borrow = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || MoneyMarket() === undefined) {\n      return;\n    }\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    MoneyMarket().markets.call(usdxAddress, (err, res) => {\n      if (res !== undefined && res !== null) {\n        // USDx_supply: res[3]\n        // USDx_borrow: res[6]\n        // USDx_supply_APR: res[4]\n        // USDx_borrow_APR: res[7]\n        this.setState({\n          USDx_supply: this.web3.fromWei(res[3], \"ether\"),\n          USDx_borrow: this.web3.fromWei(res[6], \"ether\"),\n          USDx_supply_APR: getPercentageFormat(this.web3.fromWei(res[4].toNumber(), \"ether\") * 86400 * 365 / 15),\n          USDx_borrow_APR: getPercentageFormat(this.web3.fromWei(res[7].toNumber(), \"ether\") * 86400 * 365 / 15)\n        }, () => {\n          this.setState({\n            USDx_borrow_supply_rate: getPercentageFormat(this.state.USDx_borrow / this.state.USDx_supply)\n          })\n        });\n      }\n    })\n  }\n\n\n  componentDidMount = () => {\n    if (window.web3) {\n      window.web3.currentProvider.enable().then(\n        res => {\n          // this.componentDidMount_temp()\n          window.web3.version.getNetwork((e, r) => {\n            if (r) {\n              this.setState({\n                NetworkName: r\n              }, () => {\n                // this.componentDidMount_temp();\n                this.get_USDx_supply_borrow();\n              })\n            }\n          })\n        }\n      )\n    }\n\n    // this.get_USDx_supply_borrow();\n\n    this.timer_main = setInterval(() => {\n      this.get_USDx_supply_borrow();\n    }, 1000 * 15);\n\n    if (this.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', () => {\n        this.get_USDx_supply_borrow();\n      });\n    }\n  }\n\n\n  componentWillUnmount = () => {\n    clearInterval(this.timer_main);\n  }\n\n  render = () => {\n    const accountInfo = [\n      {\n        title: 'USDx Supplied',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : '$' + toDoubleThousands(this.state.USDx_supply),\n        page: 'main'\n      },\n      {\n        title: 'USDx Borrowed',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : '$' + toDoubleThousands(this.state.USDx_borrow),\n        page: 'main'\n      },\n      {\n        title: 'Utilization Rate',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : toDoubleThousands(this.state.USDx_borrow_supply_rate) + '%',\n        page: 'main'\n      },\n      {\n        title: 'Collateralization ratio',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : '125.00%',\n        page: 'main'\n      },\n      {\n        title: 'USDx Supply APR',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : toDoubleThousands(this.state.USDx_supply_APR) + '%',\n        page: 'main'\n      },\n      {\n        title: 'USDx Borrow APR',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : toDoubleThousands(this.state.USDx_borrow_APR) + '%',\n        page: 'main'\n      }\n    ];\n\n    return (\n      <div className={'main-info-board'}>\n        <div className={'main-info-board-content'}>\n          <InfoSection accountInfo={accountInfo} currentPage={'main'} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AccountInfo;","import React, { Component } from 'react';\nimport './home.scss';\nimport { Link } from \"react-router-dom\";\nimport MediaQuery from 'react-responsive';\nimport AccountInfo from '../../container/accountInfo/accountInfo_main';\nimport { findNetwork, getLoginStatusKey } from '../../util.js';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        // this.componentDidMount_temp();\n\n    }\n\n    componentDidMount = () => { }\n\n\n\n\n\n\n    render() {\n        return (\n            <div className='card-wrap'>\n                <div className='header'>\n                    supply: <span>{this.props.data.my_supply ? this.props.data.my_supply : '-'}</span>\n                    borrow: <span>{this.props.data.my_borrow ? this.props.data.my_borrow : '-'}</span>\n                </div>\n                <hr />\n\n\n\n                <div className='card'>\n                    <div className='card-top'>\n                        <div className='card-top-left'>USDx</div>\n                        <div className='card-top-right'></div>\n                    </div>\n                    <div className='card-center'>\n                        usdx_total_supply: <span>{this.props.data.usdx_total_supply ? this.props.data.usdx_total_supply : '-'}</span>\n                        usdx_supply_APR: <span>{this.props.data.usdx_supply_APR ? this.props.data.usdx_supply_APR : '-'}</span>\n                        usdx_borrow_APR: <span>{this.props.data.usdx_borrow_APR ? this.props.data.usdx_borrow_APR : '-'}</span>\n                        usdx_u_rate: <span>{this.props.data.usdx_u_rate ? this.props.data.usdx_u_rate : '-'}</span>\n                    </div>\n\n                    <div className='card-bottom'>\n                        {/* <div className='card-bottom-btn-left'>SUPPLY</div>\n                        <div className='card-bottom-btn-right'>BORROW</div> */}\n                        {\n                            (this.props.data.i_have_supply_usdx || (!this.props.data.i_have_supply_usdx && !this.props.data.i_have_borrow_usdx)) &&\n                            <Link className={'lend-link'} to={{ pathname: './supply-usdx' }}>to supply-usdx</Link>\n                        }\n\n                        <span style={{ display: 'inline-block', width: '20px', height: '5px', background: 'red' }}></span>\n\n                        {\n                            (this.props.data.i_have_borrow_usdx || (!this.props.data.i_have_supply_usdx && !this.props.data.i_have_borrow_usdx)) &&\n                            <Link className={'lend-link'} to={{ pathname: './borrow-usdx' }}>to borrow-usdx</Link>\n                        }\n\n                    </div>\n                </div>\n                <hr />\n\n\n\n\n\n                <div className='card'>\n                    <div className='card-top'>\n                        <div className='card-top-left'>USDT</div>\n                        <div className='card-top-right'></div>\n                    </div>\n                    <div className='card-center'>\n                        usdt_total_supply: <span>{this.props.data.usdt_total_supply ? this.props.data.usdt_total_supply : '-'}</span>\n                        usdt_supply_APR: <span>{this.props.data.usdt_supply_APR ? this.props.data.usdt_supply_APR : '-'}</span>\n                        usdt_borrow_APR: <span>{this.props.data.usdt_borrow_APR ? this.props.data.usdt_borrow_APR : '-'}</span>\n                        usdt_u_rate: <span>{this.props.data.usdt_u_rate ? this.props.data.usdt_u_rate : '-'}</span>\n                    </div>\n\n                    <div className='card-bottom'>\n                        {\n                            (this.props.data.i_have_supply_usdt || (!this.props.data.i_have_supply_usdt && !this.props.data.i_have_borrow_usdt)) &&\n                            <Link className={'lend-link'} to={{ pathname: './supply-usdt' }}>to supply-usdt</Link>\n                        }\n\n                        <span style={{ display: 'inline-block', width: '20px', height: '5px', background: 'red' }}></span>\n\n                        {\n                            (this.props.data.i_have_borrow_usdt || (!this.props.data.i_have_supply_usdt && !this.props.data.i_have_borrow_usdt)) &&\n                            <Link className={'lend-link'} to={{ pathname: './borrow-usdt' }}>to borrow-usdt</Link>\n                        }\n\n                    </div>\n                </div>\n                <hr />\n\n\n\n\n\n                <div className='card'>\n                    <div className='card-top'>\n                        <div className='card-top-left'>imBTC</div>\n                        <div className='card-top-right'></div>\n                    </div>\n                    <div className='card-center'>\n                        imbtc_total_supply: <span>{this.props.data.imbtc_total_supply ? this.props.data.imbtc_total_supply : '-'}</span>\n                        imbtc_supply_APR: <span>{this.props.data.imbtc_supply_APR ? this.props.data.imbtc_supply_APR : '-'}</span>\n                        imbtc_borrow_APR: <span>{this.props.data.imbtc_borrow_APR ? this.props.data.imbtc_borrow_APR : '-'}</span>\n                        imbtc_u_rate: <span>{this.props.data.imbtc_u_rate ? this.props.data.imbtc_u_rate : '-'}</span>\n                    </div>\n\n                    <div className='card-bottom'>\n                        {\n                            (this.props.data.i_have_supply_imbtc || (!this.props.data.i_have_supply_imbtc && !this.props.data.i_have_borrow_imbtc)) &&\n                            <Link className={'lend-link'} to={{ pathname: './supply-imbtc' }}>to supply-imbtc</Link>\n                        }\n\n                        <span style={{ display: 'inline-block', width: '20px', height: '5px', background: 'red' }}></span>\n\n                        {\n                            (this.props.data.i_have_borrow_imbtc || (!this.props.data.i_have_supply_imbtc && !this.props.data.i_have_borrow_imbtc)) &&\n                            <Link className={'lend-link'} to={{ pathname: './borrow-imbtc' }}>to borrow-imbtc</Link>\n                        }\n\n                    </div>\n                </div>\n                <hr />\n\n\n\n\n\n                <div className='card'>\n                    <div className='card-top'>\n                        <div className='card-top-left'>WETH</div>\n                        <div className='card-top-right'></div>\n                    </div>\n                    <div className='card-center'>\n                        weth_total_supply: <span>{this.props.data.weth_total_supply ? this.props.data.weth_total_supply : '-'}</span>\n                        weth_supply_APR: <span>{this.props.data.weth_supply_APR ? this.props.data.weth_supply_APR : '-'}</span>\n                        weth_borrow_APR: <span>{this.props.data.weth_borrow_APR ? this.props.data.weth_borrow_APR : '-'}</span>\n                        weth_u_rate: <span>{this.props.data.weth_u_rate ? this.props.data.weth_u_rate : '-'}</span>\n                    </div>\n\n                    <div className='card-bottom'>\n                        {\n                            (this.props.data.i_have_supply_weth || (!this.props.data.i_have_supply_weth && !this.props.data.i_have_borrow_weth)) &&\n                            <Link className={'lend-link'} to={{ pathname: './supply-weth' }}>to supply-weth</Link>\n                        }\n\n                        <span style={{ display: 'inline-block', width: '20px', height: '5px', background: 'red' }}></span>\n\n                        {\n                            (this.props.data.i_have_borrow_weth || (!this.props.data.i_have_supply_weth && !this.props.data.i_have_borrow_weth)) &&\n                            <Link className={'lend-link'} to={{ pathname: './borrow-weth' }}>to borrow-weth</Link>\n                        }\n\n                    </div>\n                </div>\n                <hr />\n\n\n\n                {/* <div>\n                    <Link className={'lend-link'} to={{ pathname: './supply-usdx' }}>to supply-usdx</Link>\n                    <span style={{ display: 'inline-block', width: '20px', height: '5px', background: 'red' }}></span>\n                    <Link className={'lend-link'} to={{ pathname: './borrow-usdx' }}>to borrow-usdx</Link>\n                </div>\n                <hr style={{ margin: '20px 0' }}></hr>\n\n                <div>\n                    <Link className={'lend-link'} to={{ pathname: './supply-weth' }}>to supply-weth</Link>\n                    <span style={{ display: 'inline-block', width: '20px', height: '5px', background: 'red' }}></span>\n                    <Link className={'lend-link'} to={{ pathname: './borrow-weth' }}>to borrow-weth</Link>\n                </div>\n                <hr style={{ margin: '20px 0' }}></hr>\n\n                <div>\n                    <Link className={'lend-link'} to={{ pathname: './supply-usdt' }}>to supply-usdt</Link>\n                    <span style={{ display: 'inline-block', width: '20px', height: '5px', background: 'red' }}></span>\n                    <Link className={'lend-link'} to={{ pathname: './borrow-usdt' }}>to borrow-usdt</Link>\n                </div>\n                <hr style={{ margin: '20px 0' }}></hr>\n\n                <div>\n                    <Link className={'lend-link'} to={{ pathname: './supply-imbtc' }}>to supply-imbtc</Link>\n                    <span style={{ display: 'inline-block', width: '20px', height: '5px', background: 'red' }}></span>\n                    <Link className={'lend-link'} to={{ pathname: './borrow-imbtc' }}>to borrow-imbtc</Link>\n                </div> */}\n\n            </div>\n        )\n        // return (\n        //     <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        //         <MediaQuery maxWidth={736}>\n        //             {(match) => <div className={'main-page ' + (match ? 'CM XS' : 'CM LG')}>\n        //                 <div className='main-page-header'>\n        //                     <img src={'images/logo@2x.svg'} className='header-logo' alt=\"MAIN\" />\n        //                     {match ? null : <div className='login-info-sec'>\n        //                         <div style={{ display: 'flex', alignItems: 'center' }}>\n        //                             <div className={account !== undefined && this.state.isLogIn ? 'signed-in' : 'connect-sign'}></div>\n        //                             <span style={{ fontWeight: 500, paddingLeft: '8px' }}>{account !== undefined && this.state.isLogIn ? `${NetworkName}` : 'Unconnected'}</span>\n        //                         </div>\n        //                         <div className=\"login\" style={{ fontWeight: 500 }}>\n        //                             {account !== undefined && this.state.isLogIn ? account.substring(0, 8) + '...' + account.substring(account.length - 6) : 'Connect to Metamask'}\n        //                             <div className=\"popup\">\n        //                                 <span><em></em></span>\n        //                                 <p style={{ display: account !== undefined && this.state.isLogIn ? 'none' : 'block', fontWeight: 500 }} onClick={() => this.connectMetamask()}>Connect</p>\n        //                                 <p className=\"out\" style={{ display: account !== undefined && this.state.isLogIn ? 'block' : 'none', fontWeight: 500 }} onClick={() => this.unConnectMetamask()}>Logout</p>\n        //                             </div>\n        //                         </div>\n        //                     </div>}\n        //                 </div>\n        //                 <div className='headline-wrapper'>\n        //                     <div className='headline'>\n        //                         {/* <span>Decentralized Lending with Lendf.me</span> */}\n        //                         <FormattedMessage id='Decentralized' />\n        //                     </div>\n        //                     {/* <div className='headline-intro'>\n        //                         <div>Borrowing and lending are mutually exclusive and cannot be occur simultaneously; </div>\n        //                         <div>In order to offer USDx in Lend page, you must first repay the USDx loan in the Borrow option.</div>\n        //                     </div> */}\n        //                 </div>\n        //                 <div className='info-sec'>\n        //                     <AccountInfo currentPage={'main'} account={this.state.currentAccount} login={this.state.isLogIn} />\n        //                 </div>\n        //                 <div className='button-container'>\n        //                     <div className='lend-container'>\n        //                         <div className='lend-button'>\n        //                             <Link className={'lend-link'} to={{ pathname: './supply', state: { isLogIn: this.state.isLogIn } }} />\n        //                             <div style={{ display: 'flex', alignItems: 'center' }}>\n        //                                 <img src={'images/icon_s@2x.png'} alt=\"MAIN\" />\n        //                                 <div className='title'>\n        //                                     <FormattedMessage id='Supply_USDx' />\n        //                                 </div>\n        //                             </div>\n        //                         </div>\n        //                         <div className='description'>\n        //                             <FormattedMessage id='Supply_your' />\n        //                         </div>\n        //                     </div>\n        //                     <div className='borrow-container'>\n        //                         <div className='borrow-button'>\n        //                             <Link className={'borrow-link'} to={{ pathname: './borrow', state: { isLogIn: this.state.isLogIn } }} />\n        //                             <div style={{ display: 'flex', alignItems: 'center' }}>\n        //                                 <img src={'images/icon_b@2x.png'} alt=\"MAIN\" />\n        //                                 <div className='title'>\n        //                                     <FormattedMessage id='Borrow_USDx' />\n        //                                 </div>\n        //                             </div>\n        //                         </div>\n        //                         <div className='description'>\n        //                             <FormattedMessage id='Pledge_WETH' />\n        //                         </div>\n        //                     </div>\n        //                 </div>\n        //             </div>}\n        //         </MediaQuery>\n        //     </IntlProvider>\n        // );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport './main.scss';\nimport { Link } from \"react-router-dom\";\nimport MediaQuery from 'react-responsive';\nimport AccountInfo from '../../container/accountInfo/accountInfo_main';\nimport { findNetwork, getLoginStatusKey } from '../../util.js';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentAccount: null,\n            isLogIn: false\n        }\n        this.web3 = window.web3;\n\n        // this.componentDidMount_temp();\n\n        window.web3.currentProvider.enable().then(\n            res => {\n                this.setState({ isLogIn: true }, () => {\n                    window.web3.version.getNetwork((e, r) => {\n                        if (r) {\n                            this.setState({\n                                NetworkName: r\n                            }, () => {\n                                this.componentDidMount_temp();\n                            })\n                        }\n                    })\n\n                });\n            }\n        )\n\n        if (window.web3.currentProvider.isMetaMask) {\n            window.ethereum.on('accountsChanged', () => {\n                this.componentDidMount_temp();\n            });\n        }\n\n    }\n\n    componentDidMount_temp = () => {\n        // this.connectMetamask();\n        // this.getCurentAccount();\n\n        setTimeout(() => {\n            this.connectMetamask();\n            this.getCurentAccount();\n        }, 2000);\n\n        this.getCurentAccountTimer = setInterval(() => {\n            this.getCurentAccount();\n            this.setLoginStatus();\n            // console.log('main:' + this.props.isLogIn) // main:undefined\n        }, 1000 * 15);\n    }\n\n    getCurentAccount = () => {\n        if (typeof web3 !== 'undefined') {\n            this.web3.eth.getCoinbase((e, r) => {\n                // console.log(e, r)\n                if (r) {\n                    this.setState({ currentAccount: r });\n                } else {\n                    this.setState({ currentAccount: null });\n                }\n            })\n        }\n    }\n\n    setLoginStatus = () => {\n        const { isSMView } = this.props;\n        if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined) {\n            return;\n        }\n        var storage = null;\n        var results = null;\n        var key = getLoginStatusKey(this.web3.eth.accounts[0]);\n        if (window.localStorage) {\n            storage = window.localStorage;\n            results = JSON.parse(`${storage.getItem(key)}`);\n        }\n        if (this.state.isLogIn !== true && isSMView) {\n            this.setState({ isLogIn: true });\n        }\n        if (results === null) {\n            return;\n        }\n        results = results.map(item => {\n            if (item.account === this.web3.eth.accounts[0] && this.state.isLogIn !== item.isLogin && !isSMView) {\n                this.setState({ isLogIn: item.isLogin });\n            }\n            return item.id;\n        })\n    }\n\n    connectMetamask = () => {\n        if (typeof web3 === 'undefined') {\n            return;\n        }\n        window.web3.currentProvider.enable().then(\n            res => {\n                this.setState({ isLogIn: true });\n            }\n        )\n        // this.props.checkLogIn(true);\n    }\n\n    unConnectMetamask = () => {\n        this.setState({ isLogIn: false });\n        this.props.checkLogIn(false);\n    }\n\n\n    render() {\n        let NetworkName = findNetwork(this.state.NetworkName);\n        let account = window.web3.eth.accounts[0];\n        // if (typeof web3 !== 'undefined') {\n        //     NetworkName = findNetwork(this.state.NetworkName);\n        //     account = window.web3.eth.accounts[0];\n        // }\n\n        return (\n            <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n                <MediaQuery maxWidth={736}>\n                    {(match) => <div className={'main-page ' + (match ? 'CM XS' : 'CM LG')}>\n                        <div className='main-page-header'>\n                            <img src={'images/logo@2x.svg'} className='header-logo' alt=\"MAIN\" />\n                            {match ? null : <div className='login-info-sec'>\n                                <div style={{ display: 'flex', alignItems: 'center' }}>\n                                    <div className={account !== undefined && this.state.isLogIn ? 'signed-in' : 'connect-sign'}></div>\n                                    <span style={{ fontWeight: 500, paddingLeft: '8px' }}>{account !== undefined && this.state.isLogIn ? `${NetworkName}` : 'Unconnected'}</span>\n                                </div>\n                                <div className=\"login\" style={{ fontWeight: 500 }}>\n                                    {account !== undefined && this.state.isLogIn ? account.substring(0, 8) + '...' + account.substring(account.length - 6) : 'Connect to Metamask'}\n                                    <div className=\"popup\">\n                                        <span><em></em></span>\n                                        <p style={{ display: account !== undefined && this.state.isLogIn ? 'none' : 'block', fontWeight: 500 }} onClick={() => this.connectMetamask()}>Connect</p>\n                                        <p className=\"out\" style={{ display: account !== undefined && this.state.isLogIn ? 'block' : 'none', fontWeight: 500 }} onClick={() => this.unConnectMetamask()}>Logout</p>\n                                    </div>\n                                </div>\n                            </div>}\n                        </div>\n                        <div className='headline-wrapper'>\n                            <div className='headline'>\n                                {/* <span>Decentralized Lending with Lendf.me</span> */}\n                                <FormattedMessage id='Decentralized' />\n                            </div>\n                            {/* <div className='headline-intro'>\n                                <div>Borrowing and lending are mutually exclusive and cannot be occur simultaneously; </div>\n                                <div>In order to offer USDx in Lend page, you must first repay the USDx loan in the Borrow option.</div>\n                            </div> */}\n                        </div>\n                        <div className='info-sec'>\n                            <AccountInfo currentPage={'main'} account={this.state.currentAccount} login={this.state.isLogIn} />\n                        </div>\n                        <div className='button-container'>\n                            <div className='lend-container'>\n                                <div className='lend-button'>\n                                    <Link className={'lend-link'} to={{ pathname: './supply', state: { isLogIn: this.state.isLogIn } }} />\n                                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                                        <img src={'images/icon_s@2x.png'} alt=\"MAIN\" />\n                                        <div className='title'>\n                                            <FormattedMessage id='Supply_USDx' />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='description'>\n                                    <FormattedMessage id='Supply_your' />\n                                </div>\n                            </div>\n                            <div className='borrow-container'>\n                                <div className='borrow-button'>\n                                    <Link className={'borrow-link'} to={{ pathname: './borrow', state: { isLogIn: this.state.isLogIn } }} />\n                                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                                        <img src={'images/icon_b@2x.png'} alt=\"MAIN\" />\n                                        <div className='title'>\n                                            <FormattedMessage id='Borrow_USDx' />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='description'>\n                                    <FormattedMessage id='Pledge_WETH' />\n                                </div>\n                            </div>\n                        </div>\n                    </div>}\n                </MediaQuery>\n            </IntlProvider>\n        );\n    }\n}\n\nexport default Main;","import { findNetwork } from '../util.js';\nlet usdx = require('./USDX_FAUCET_ABI.json');\n\nexport default function USDX() {\n    if (typeof web3 === 'undefined') {\n        return;\n    }\n    const usdxSpec = window.web3.eth.contract(usdx);\n    let NetworkName = findNetwork(window.web3.version.network);\n    // window.web3.version.getNetwork((e, r) => {\n    //     if (r) {\n    //         let NetworkName = findNetwork(r);\n    //         var USDX;\n    //         if (NetworkName === 'Main') {\n    //             USDX = usdxSpec.at(\"0x3a9e75afcffcd89613037989ea0ed6cec44a4353\");\n    //         } else if (NetworkName === 'Rinkeby') {\n    //             USDX = usdxSpec.at(\"0xaf21bb8ae7b7a5eec37964e478583cd486fd12e2\");\n    //         }\n    //         return USDX;\n    //     }\n    // })\n    // let NetworkName = findNetwork(r);\n    var USDX;\n    if (NetworkName === 'Main') {\n        USDX = usdxSpec.at(\"0x3a9e75afcffcd89613037989ea0ed6cec44a4353\");\n    } else if (NetworkName === 'Rinkeby') {\n        USDX = usdxSpec.at(\"0xaf21bb8ae7b7a5eec37964e478583cd486fd12e2\");\n    }\n    return USDX;\n}","import { findNetwork } from '../util.js';\n// let weth = require('./WETH_FAUCET_ABI.json');//测试用weth_faucet weth测试网修改的地方\n// let weth = require('./WETH_ABI.json');\n\nexport default function WETH() {\n    if (typeof web3 === 'undefined') {\n        return;\n    }\n    let NetworkName = findNetwork(window.web3.version.network);\n    let weth;\n    weth = require('./WETH_ABI.json')\n    //测试用weth_faucet weth测试网修改的地方\n    // if(NetworkName === 'Rinkeby') {\n    //     weth = require('./WETH_ABI.json')\n    // } else if (NetworkName === 'Main') {\n    //     weth = require('./WETH_FAUCET_ABI.json');\n    // }\n    const WETHSpec = window.web3.eth.contract(weth);\n    \n    var WETH;\n    if (NetworkName === 'Main') {\n        WETH = WETHSpec.at(\"0x06a1cd567e61b7edda49c30d3d32e60f607fd646\");////测试用weth_faucet\n    } else if (NetworkName === 'Rinkeby') {\n        WETH = WETHSpec.at(\"0xC8b1a5ef2e19937dd6c0f804DF2e3efE9F093B1e\");\n    }\n    return WETH;\n}","import React, { Component } from 'react';\nimport USDX from \"./../../ABIs/USDX.js\";\nimport WETH from \"./../../ABIs/WETH.js\";\nimport { findNetwork, saveLoginStatus, getLoginStatusKey } from './../../util.js';\nimport './header.scss';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLogIn: false,\n            ETHToUSD: '-',\n        }\n        this.web3 = window.web3;\n\n        // this.componentDidMount_temp();\n        window.web3.version.getNetwork((e, r) => {\n            if (r) {\n                this.setState({\n                    NetworkName: r\n                }, () => {\n                    this.componentDidMount_temp();\n                })\n            }\n        })\n\n        if (window.web3.currentProvider.isMetaMask) {\n            window.ethereum.on('accountsChanged', () => {\n                this.componentDidMount_temp();\n            });\n        }\n    }\n\n    checkLogIn = (isLogin) => {\n        // save to local storage\n        if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined) {\n            return;\n        }\n        var storage = null;\n        var results = null;\n        var key = getLoginStatusKey(this.web3.eth.accounts[0]);\n        if (window.localStorage) {\n            storage = window.localStorage;\n            results = JSON.parse(`${storage.getItem(key)}`);\n        }\n        if (results === null) {\n            saveLoginStatus(this.web3.eth.accounts[0], isLogin);\n            return;\n        }\n        storage.removeItem(key);\n        results = results.map(item => {\n            if (item.account === this.web3.eth.accounts[0]) {\n                return {\n                    ...item,\n                    isLogin: isLogin\n                }\n            }\n            return {\n                ...item\n            }\n        })\n        storage.setItem(key, JSON.stringify(results));\n    }\n\n    connectMetamask = () => {\n        if (typeof web3 === 'undefined') {\n            return;\n        }\n        window.web3.currentProvider.enable().then(\n            res => {\n                this.setState({ isLogIn: true });\n            }\n        )\n        this.checkLogIn(true);\n    }\n\n    unConnectMetamask = () => {\n        this.setState({ isLogIn: false });\n        this.checkLogIn(false);\n    }\n\n    componentDidMount_temp = () => {\n        // this.connectMetamask();\n        // this.getETHAssetPrices();\n\n        setTimeout(() => {\n            this.connectMetamask();\n            // this.getETHAssetPrices();\n        }, 2000);\n\n        this.timerID = setInterval(() => {\n            // this.getETHAssetPrices();\n            var storage = null;\n            var results = null;\n            if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined) {\n                return;\n            }\n            var key = getLoginStatusKey(this.web3.eth.accounts[0]);\n            if (window.localStorage) {\n                storage = window.localStorage;\n                results = JSON.parse(`${storage.getItem(key)}`);\n            }\n            if (results === null) {\n                return;\n            }\n            // console.log('header --- is login.');\n            results = results.map(item => {\n                if (item.account === this.web3.eth.accounts[0] && this.state.isLogIn !== item.isLogin) {\n                    this.setState({ isLogIn: item.isLogin });\n                }\n                return item.id;\n            })\n        }, 1000 * 15)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    // 领取测试币 USDx\n    allocateUSDx = () => {\n        if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined) {\n            return;\n        }\n        USDX().allocateTo(this.web3.eth.accounts[0], this.web3.toWei(100, \"ether\"), (err, res) => { });\n    }\n\n    // 测试用 weth_faucet\n    allocateWETH = () => {\n        if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined) {\n            return;\n        }\n        WETH().allocateTo(this.web3.eth.accounts[0], this.web3.toWei(100, \"ether\"), (err, res) => { });\n    }\n\n    render = () => {\n        let NetworkName = window.web3 !== undefined ? findNetwork(this.state.NetworkName) : null;\n        return (\n            <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n                <div className={'header ' + (NetworkName === 'Main' ? 'without-banner' : 'with-banner')}>\n                    <div className='header-content'>\n                        <div className='left'>\n                            <img className='header-logo' style={{ margin: 'auto' }} src={'images/h_logo@2x.svg'} alt=\"HEADER\" />\n\n                            <div className='market-info'>\n                                <span className='market-info-title'>\n                                    USDx\n                                    <FormattedMessage id='Balance' />\n                                    {window.web3 !== undefined && findNetwork(this.state.NetworkName) === 'Rinkeby' ? <a className='usdx-faucet' onClick={this.allocateUSDx}>Faucet</a> : ''}</span>\n                                <span className='market-info-digits'>{this.props.USDxBalance}</span>\n                            </div>\n\n                            <div className='market-info'>\n                                <span className='market-info-title'>\n                                    ETH\n                                    <FormattedMessage id='Balance' />\n                                </span>\n                                <span className='market-info-digits'>{this.props.ETHBalance}</span>\n                            </div>\n\n                            <div className='market-info'>\n                                <span className='market-info-title'>\n                                    WETH\n                                    <FormattedMessage id='Balance' />\n                                </span>\n                                <span className='market-info-digits'>{this.props.WETHBalance}</span>\n                            </div>\n\n                            <div className='market-info'>\n                                <span className='market-info-title'>ETH/USD</span>\n                                <span className='market-info-digits'>{this.props.ETHToUSD}</span>\n                            </div>\n                        </div>\n\n\n\n                        <div className='right'>\n                            {/* <div className='account-info'>\n                            <div className='market-info-digits'><i />  {this.props.networkName}</div>\n                            <div className='market-info-digits'>{this.props.account}</div>\n                        </div> */}\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <div className={this.props.account !== undefined && this.state.isLogIn ? 'signed-in' : 'connect-sign'}></div>\n                                <span style={{ fontWeight: 500, paddingLeft: '8px', color: '#FFF' }}>{this.props.account !== undefined && this.state.isLogIn ? `${this.props.networkName}` : 'Unconnected'}</span>\n                            </div>\n                            <div className=\"login\" style={{ fontWeight: 500, color: '#FFF' }}>\n                                {this.props.account !== undefined && this.state.isLogIn ? this.props.account.substring(0, 8) + '...' + this.props.account.substring(this.props.account.length - 6) : 'Connect to Metamask'}\n                                <div className=\"popup\">\n                                    <span><em></em></span>\n                                    <p style={{ display: this.props.account !== undefined && this.state.isLogIn ? 'none' : 'block', fontWeight: 500 }} onClick={() => this.connectMetamask()}>Connect</p>\n                                    <p className=\"out\" style={{ display: this.props.account !== undefined && this.state.isLogIn ? 'block' : 'none', fontWeight: 500 }} onClick={() => this.unConnectMetamask()}>Logout</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </IntlProvider>\n        )\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport MoneyMarket from './../ABIs/MoneyMarket.js';\nimport Network from './../constant.json';\nimport { toDoubleThousands, findNetwork, formatBigNumber } from './../util';\nimport USDX from \"./../ABIs/USDX.js\";\nimport WETH from './../ABIs/WETH.js';\n\nexport function withMarketInfo(Header) {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        USDXPersonalBalance: '-',\n        WETHPersonalBalance: '-',\n        ETHPersonalBalance: '-',\n        ETHToUSD: '-',\n        USDxToUSD: 0,\n        USDxToUSDUnFormat: 0,\n        usdxMarketBalance: 0,\n        assets: ['WETH', 'USDx']\n      }\n      this.web3 = window.web3;\n\n      // this.componentDidMount_temp();\n      window.web3.version.getNetwork((e, r) => {\n        if (r) {\n          this.setState({\n            NetworkName: r\n          }, () => {\n            this.componentDidMount_temp();\n          })\n        }\n      })\n\n      if (window.web3.currentProvider.isMetaMask) {\n        window.ethereum.on('accountsChanged', () => {\n          this.componentDidMount_temp();\n        });\n      }\n    }\n\n    getAccountETHBalanceByAddress = () => {\n      if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) {\n        this.setState({ ETHPersonalBalance: '-' });\n        return;\n      }\n      this.web3.eth.getBalance(this.web3.eth.accounts[0], (err, balance) => {\n        if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n          console.log('===>ethBalance balance:' + balance + ' address:' + this.web3.eth.accounts[0])\n        }\n        if (balance === undefined || balance === null) {\n          return;\n        }\n        balance = formatBigNumber(balance);\n        this.setState({ ETHPersonalBalance: toDoubleThousands(balance) })\n      });\n    }\n\n    getAccountUSDXBalanceByAddress = () => {\n      if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || USDX() === undefined || !this.props.login) {\n        this.setState({ USDXPersonalBalance: '-' })\n        return;\n      }\n      USDX().balanceOf(this.web3.eth.accounts[0],\n        (err, res) => {\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            console.log('===>usdxBalance res:' + res + ' USDX():' + USDX())\n          }\n          if (res === undefined || res === null) {\n            return;\n          }\n          let usdxBalance = 0;\n          usdxBalance = toDoubleThousands(this.web3.fromWei(res.toNumber(), \"ether\"));\n          this.setState({ USDXPersonalBalance: usdxBalance });\n        }\n      );\n\n    }\n\n    getAccountWETHBalanceByAddress = () => {\n      if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || WETH() === undefined || !this.props.login) {\n        this.setState({ WETHPersonalBalance: '-' })\n        return;\n      }\n      WETH().balanceOf(this.web3.eth.accounts[0],\n        (err, res) => {\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            console.log('===>wethBalance res:' + res + ' WETH():' + WETH())\n          }\n          if (res === undefined || res === null) {\n            return;\n          }\n          let wethBalance = 0;\n          wethBalance = toDoubleThousands(this.web3.fromWei(res.toNumber(), \"ether\"));\n          this.setState({ WETHPersonalBalance: wethBalance })\n        }\n      );\n    }\n\n    new_getETHAssetPrices = () => {\n      if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || MoneyMarket() === undefined) {\n        this.setState({ ETHToUSD: '-' })\n        return;\n      }\n      let wethAddress = '';\n      let NetworkName = findNetwork(this.state.NetworkName);\n      if (NetworkName === 'Main') {\n        wethAddress = Network.Main.WETH;\n      } else if (NetworkName === 'Rinkeby') {\n        wethAddress = Network.Rinkeby.WETH;\n      }\n      MoneyMarket().assetPrices(wethAddress, (err1, res1) => {\n        if (res1 !== undefined || res1 !== null) {\n          MoneyMarket().assetPrices(\n            Network[NetworkName]['USDx'],\n            (err2, res2) => {\n              if (res2 !== undefined && res2 !== null) {\n                let ETHToUSDBalance = 0;\n                if (Number(this.web3.fromWei(res2.toNumber(), \"ether\")) !== 0) {\n                  ETHToUSDBalance = toDoubleThousands(this.web3.fromWei(res1.toNumber(), \"ether\") / this.web3.fromWei(res2.toNumber(), \"ether\"));\n                }\n                this.setState({ ETHToUSD: ETHToUSDBalance }, () => {\n                  // console.log(this.state.ETHToUSD);\n                });\n              }\n            }\n          );\n        }\n      });\n    }\n\n\n    componentDidMount_temp = () => {\n      setTimeout(() => {\n        this.getAccountETHBalanceByAddress();\n        this.getAccountUSDXBalanceByAddress();\n        this.getAccountWETHBalanceByAddress();\n        this.new_getETHAssetPrices();\n      }, 2000);\n\n      this.timerID = setInterval(() => {\n        let NetworkName = window.web3 !== undefined ? findNetwork(this.state.NetworkName) : null;\n        if (true && (NetworkName === 'Main' || NetworkName === 'Rinkeby')) {\n          this.getAccountETHBalanceByAddress();\n          this.getAccountUSDXBalanceByAddress();\n          this.getAccountWETHBalanceByAddress();\n          this.new_getETHAssetPrices();\n        }\n      }, 1000 * 15);\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n\n    render() {\n      let NetworkName = window.web3 !== undefined ? findNetwork(this.state.NetworkName) : null;\n      const marketInfo = {\n        USDxBalance: this.state.USDXPersonalBalance,\n        ETHBalance: this.state.ETHPersonalBalance,\n        WETHBalance: this.state.WETHPersonalBalance,\n        ETHToUSD: this.state.ETHToUSD,\n        networkName: this.props.networkName,\n        account: this.props.account,\n        banner: NetworkName === 'Main' ? true : false\n      }\n      return <Header {...marketInfo} />\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport Record from \"../../component/record/record\";\nimport Asset from \"../../constant.json\";\nimport { getTransactionHistoryKey, formatTransactionTime, format_bn } from \"../../util.js\";\n\nimport { Popover } from 'antd';\nimport moment from 'moment';\nimport \"./recordBoard.scss\";\n\nlet constant = require('../../ABIs/constant.json');\n\nclass RecordBoard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            RecentTransactions: []\n        };\n\n        this.decimal_precision = constant.decimal_precision;\n    }\n\n\n\n    load_history = () => {\n        if (window.localStorage) {\n            let key = this.props.account + '-' + this.props.net_type;\n            let results_arr = JSON.parse(`${window.localStorage.getItem(key)}`) || [];\n\n            if (results_arr !== null) {\n                results_arr.reverse();\n                // console.log(JSON.stringify(results_arr));\n\n                this.setState({ RecentTransactions: results_arr }, () => {\n                    results_arr.map(item => {\n                        if (item.status === 'pendding') {\n\n                            var timerOBJ = {};\n                            var tempRnum = Math.random();\n                            timerOBJ[tempRnum] = setInterval(() => {\n\n                                console.log('checking getTransactionReceipt...');\n\n                                this.props.new_web3.eth.getTransactionReceipt(item.hash, (res_fail, res_success) => {\n\n                                    // 合约有信息返回\n                                    if (res_success) {\n                                        // console.log(JSON.stringify(res_success));\n                                        console.log(' *** i got getTransactionReceipt... *** ');\n                                        clearInterval(timerOBJ[tempRnum]);\n\n                                        // 有状态返回 存入localstorage\n                                        let contractData = JSON.parse(window.localStorage.getItem(key));\n                                        contractData.map((temp_item) => {\n                                            if (temp_item.hash === res_success.transactionHash) {\n                                                var temp_status;\n                                                if (res_success.status === true) {\n                                                    temp_status = 'success'\n                                                } else {\n                                                    temp_status = 'fail'\n                                                }\n                                                temp_item.res_origin = res_success;\n                                                temp_item.status = temp_status;\n                                            }\n                                        })\n\n                                        window.localStorage.setItem(key, JSON.stringify(contractData));\n\n                                        setTimeout(() => {\n                                            console.log(' *** i load_history again *** ');\n                                            this.load_history();\n                                        }, 300);\n                                    }\n\n\n                                    if (res_fail) {\n                                        console.log(res_fail);\n                                        clearInterval(timerOBJ[tempRnum]);\n                                    }\n                                })\n                            }, 2000)\n                        }\n                    })\n                });\n            }\n        }\n    }\n\n\n    goTxnHashHref = txnHashHref => {\n        window.open(txnHashHref, \"_blank\");\n    };\n\n\n    componentDidMount = () => {\n        this.load_history();\n    };\n\n\n    componentWillUnmount() {\n        // clearInterval(this.timerID);\n    }\n\n\n    componentWillReceiveProps = (nextProps) => {\n        if (this.props.load_new_history !== nextProps.load_new_history) {\n            console.log(this.props.load_new_history !== nextProps.load_new_history, 'i will load new history.');\n            this.load_history();\n        }\n    }\n\n\n    renderRecord() {\n        if (this.state.RecentTransactions === null) {\n            return \"\";\n        }\n\n        return (\n            <div className=\"record-board\">\n                {\n                    (this.state.RecentTransactions && this.state.RecentTransactions.length > 0) &&\n                    <div className=\"board-title\">Recent Transactions</div>\n                }\n\n                <div className=\"board-content\">\n                    {\n                        this.state.RecentTransactions ?\n                            this.state.RecentTransactions.map((item, i) => {\n\n                                if (item.token !== this.props.token) {\n                                    return false;\n                                }\n\n                                var img_src;\n\n                                if (item.status === 'pendding') {\n                                    if (item.action === 'borrow' || item.action === 'repay') {\n                                        img_src = 'loading_02'\n                                    } else {\n                                        img_src = 'loading_01'\n                                    }\n                                } else if (item.status === 'success') {\n                                    // item.action; //   wrap unwrap  \n                                    img_src = item.action;\n                                }\n\n\n                                return (\n                                    <div key={i}>\n                                        {/* <Popover  placement=\"top\" content={props.failedInfo} trigger={props.failed ? 'hover' : ''}> */}\n                                        {/* <Popover> */}\n                                        <div className='transaction' onClick={() => this.goTxnHashHref(this.goTxnHashHref)}>\n                                            <div className='transaction-detail'>\n                                                <img\n                                                    style={{ height: '16px', width: '16px' }}\n                                                    src={`images/${img_src}.png`}\n                                                    alt=\"RECORD\"\n                                                    className={item.status === 'pendding' ? 'icon-loading' : null}\n                                                />\n                                                <span style={{ marginLeft: '5px' }}>\n                                                    {\n                                                        item.action === 'approve' ?\n                                                            'Enable ' :\n                                                            item.action.substring(0, 1).toUpperCase() + item.action.substring(1) + ' '\n                                                    }\n                                                    {\n                                                        item.action === 'approve' ?\n                                                            null :\n                                                            format_bn(item.amount, this.props.decimal, this.decimal_precision) + ' '\n                                                    }\n                                                    {item.token}\n                                                </span>\n                                            </div>\n                                            <div className='transaction-time'>\n                                                <span>\n                                                    {moment(item.timestamp).format('MMM. DD, HH:mm')}\n                                                </span>\n                                            </div>\n                                        </div>\n                                        {/* </Popover> */}\n                                    </div>\n                                )\n                            })\n                            :\n                            null\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    render = () => {\n        return this.renderRecord();\n    };\n}\n\nexport default RecordBoard;\n","import React, { Component } from \"react\";\nimport Header from '../../component/header/header';\nimport { withMarketInfo } from '../../HOC/withMarketInfo';\nimport {\n  toFormatShowNumber,\n  findNetwork,\n  getLoginStatusKey,\n  i_got_hash,\n  format_bn,\n  get_tokens_decimals,\n  get_allowance,\n  handle_supply_change,\n  handle_supply_max,\n  handle_withdraw_change,\n  handle_withdraw_max,\n  get_my_balance,\n  get_supplied__available_to_withdraw,\n  handle_approve,\n  handle_supply_click,\n  handle_withdraw_click\n} from '../../util.js';\n\nimport { Link } from \"react-router-dom\";\n\nimport MediaQuery from 'react-responsive';\nimport \"./supply.scss\";\n\n\n\nimport RecordBoard from '../../container/recordBoard/recordBoard';\n\n\nimport { Tabs, Button, InputNumber, Input } from 'antd';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nimport Web3 from 'web3';\n\n\n// tokens ABIs\nlet USDx_abi = require('../../ABIs/USDX_ABI.json');\nlet WETH_abi = require('../../ABIs/WETH_ABI.json');\nlet imBTC_abi = require('../../ABIs/imBTC_ABI.json');\nlet USDT_abi = require('../../ABIs/USDT_ABI.json');\nlet mMarket_abi = require('../../ABIs/moneyMarket.json');\n\n// tokens address\nlet address = require('../../ABIs/address_map.json');\n\n// 常量\nlet constant = require('../../ABIs/constant.json');\n\nconst WithMarketInfoEnhanced = withMarketInfo(Header);\n\n\nclass Supply_usdx extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      supply_amount: null,\n      is_supply_enable: true,\n      is_withdraw_enable: true\n    }\n\n    this.new_web3 = window.new_web3 = new Web3(Web3.givenProvider || null);\n    this.bn = this.new_web3.utils.toBN;\n    this.decimal_precision = constant.decimal_precision;\n    this.gas_limit_coefficient = constant.gas_limit_coefficient;\n    this.collateral_rate = constant.collateral_rate;\n\n    this.placeholder = 'Amount in USDx';\n    this.img_src = 'USDx@2x';\n    this.token_name = 'USDx';\n\n    this.new_web3.eth.net.getNetworkType().then(\n      (net_type) => {\n        let USDx = new this.new_web3.eth.Contract(USDx_abi, address[net_type]['address_USDx']);\n        let WETH = new this.new_web3.eth.Contract(WETH_abi, address[net_type]['address_WETH']);\n        let imBTC = new this.new_web3.eth.Contract(imBTC_abi, address[net_type]['address_imBTC']);\n        let USDT = new this.new_web3.eth.Contract(USDT_abi, address[net_type]['address_USDT']);\n        let mMarket = new this.new_web3.eth.Contract(mMarket_abi, address[net_type]['address_mMarket']);\n        console.log(' *** init contract finished *** ');\n        this.setState({ net_type: net_type, USDx: USDx, WETH: WETH, imBTC: imBTC, USDT: USDT, mMarket: mMarket }, () => {\n          get_tokens_decimals(this.state.USDx, this.state.WETH, this.state.imBTC, this.state.USDT, this);\n          this.new_web3.givenProvider.enable().then(res_accounts => {\n            this.setState({\n              my_account: res_accounts[0]\n            }, async () => {\n              console.log('connected: ', this.state.my_account)\n\n              let is_approved = await get_allowance(this.state.USDx, this.state.my_account, address[net_type]['address_mMarket'], this.bn);\n\n              console.log('is_approved: ', is_approved)\n              this.setState({ is_approved: is_approved })\n\n              let timer_Next = setInterval(() => {\n                if (!(this.state.USDx_decimals && this.state.WETH_decimals && this.state.imBTC_decimals && this.state.USDT_decimals)) {\n                  console.log('111111111: not get yet...');\n                } else {\n                  console.log('2222222222: i got it...');\n                  clearInterval(timer_Next);\n                  this.setState({ i_am_ready: true })\n\n                  // to do something...\n\n\n\n                }\n              }, 100)\n            })\n          })\n        })\n      }\n    )\n  }\n\n\n\n\n\n\n\n  componentDidMount = () => {\n    console.log('component-Did-Mount...')\n    this.timer_get_data = setInterval(() => {\n      if (!this.state.my_account) {\n        console.log('account not available.')\n        return false;\n      }\n      console.log('update new data.')\n      get_my_balance(this.state.USDx, this.state.my_account, this);\n      get_supplied__available_to_withdraw(this.state.mMarket, this.state.USDx, this.state.my_account, address[this.state.net_type]['address_USDx'], address[this.state.net_type]['address_mMarket'], this);\n    }, 3000)\n\n  }\n\n\n  componentWillUnmount = () => {\n    if (this.timer_Next) {\n      clearInterval(this.timer_Next)\n    }\n    clearInterval(this.timer_get_data)\n  }\n\n\n  render() {\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <MediaQuery maxWidth={768}>\n          {(match) =>\n            // <div className={'lend-page ' + (match ? 'CM XS ' : 'CM LG ') + (NetworkName === 'Main' ? 'without-banner' : 'with-banner')}>\n\n            <div className={'lend-page ' + (match ? 'CM XS ' : 'CM LG ') + ('without-banner')}>\n              {/* <WithMarketInfoEnhanced login={true} /> */}\n              <div className='redirect-button'>\n                <div className='go-back-button'>\n                  <Link to={'/'}>\n                    <img src={'images/icon_home@2x.png'} alt=\"HOME\" />\n                    <span>\n                      <FormattedMessage id='Home' />\n                    </span>\n                  </Link>\n                </div>\n              </div>\n              {/* <AccountInfo currentPage={'lend'}  login={true} /> */}\n\n              <div className=\"lend-page-wrapper\">\n                <div className=\"supply-group\">\n                  <div className=\"supply-title\">\n                    <span>\n                      <FormattedMessage id='SUPPLY' /></span>\n                  </div>\n                  <div className=\"supply-content\" style={{}}>\n                    {/* <div className=\"supply-content\" style={{ display: (this.state.isApproved_USDx == 1) || (this.state.not_approve_atfirst_USDX == 1) ? 'block' : 'none' }}> */}\n                    {/* <SupplyContent /> */}\n\n\n                    <div className='supply-input'>\n                      <div className='info-wrapper'>\n                        <span className='balance-type'>\n                          <img style={{ width: '16px', height: '16px', margin: 'auto', marginTop: '-4px' }} src={`images/${this.img_src}.png`} alt=\"\" />\n                          &nbsp;\n                          <FormattedMessage id='USDx_Supplied' />\n                        </span>\n                        <span className='balance-amount'>\n                          {this.state.my_supplied ? format_bn(this.state.my_supplied, this.state.USDx_decimals, this.decimal_precision) : '-'}\n                        </span>\n                      </div>\n\n                      <Tabs className='tab-wrapper' animated={true} size='large' onChange={this.changePane}>\n\n                        {/* ***** ***** ***** approve ***** ***** ***** */}\n                        <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '存款' : 'SUPPLY'} key=\"1\" className='tab-content'>\n                          {\n                            (this.state.i_am_ready && this.state.is_approved) &&\n                            <React.Fragment>\n                              <div className='balance-info'>\n                                <span className='balance-desc'>\n                                  <FormattedMessage id='USDx_Balance' />\n                                </span>\n                                <span className='balance-amount'>\n                                  {this.state.my_balance ? format_bn(this.state.my_balance, this.state.USDx_decimals, this.decimal_precision) : '-'}\n                                  &nbsp;\n                                    {this.token_name}\n                                </span>\n                              </div>\n                              <div className='input-unit-wrapper'>\n                                <div className='input-wrapper'>\n                                  <Input\n                                    type='number'\n                                    placeholder={this.placeholder}\n                                    min={0}\n                                    onChange={(e) => handle_supply_change(e.target.value, this, this.state.USDx_decimals, this.state.my_balance)}\n                                    className='input-number'\n                                    value={this.state.supply_amount}\n                                  />\n                                  <span className={'max-amount-button'} onClick={() => { handle_supply_max(this, this.state.my_balance, this.state.USDx_decimals) }}>\n                                    {'MAX'}\n                                  </span>\n                                </div>\n                                <div className={'button-wrapper'}>\n                                  <Button\n                                    size='large'\n                                    className={this.state.is_supply_enable ? null : 'disable-button'}\n                                    disabled={false}\n                                    onClick={() => { handle_supply_click(this, this.state.USDx_decimals, address[this.state.net_type]['address_USDx']) }}\n                                  >\n                                    {'SUPPLY'}\n                                    {/* <FormattedMessage id='USDx_Balance' /> */}\n                                  </Button>\n                                </div>\n                              </div>\n                            </React.Fragment>\n                          }\n                          {\n                            (this.state.i_am_ready && !this.state.is_approved) &&\n                            <div className='approve-section'>\n                              <div className='enable-message'>\n                                {'Before supplying USDT for the first time, you must enable USDT.'}\n                              </div>\n                              <div className={'button-wrapper'}>\n                                <Button\n                                  size='large'\n                                  className={''}\n                                  disabled={false}\n                                  onClick={() => { handle_approve(this.state.USDx, this, address[this.state.net_type]['address_mMarket']) }}\n                                >\n                                  {'ENABLE'}\n                                </Button>\n                              </div>\n                            </div>\n                          }\n                        </Tabs.TabPane>\n                        {/* ***** ***** ***** approve ***** ***** ***** */}\n\n                        {/* ***** ***** ***** withdraw ***** ***** ***** */}\n                        <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '取出' : 'WITHDRAW'} key=\"2\" className='tab-content'>\n                          {\n                            (this.state.i_am_ready && this.state.is_approved) &&\n                            <React.Fragment>\n                              <div className='balance-info'>\n                                <span className='balance-desc'>\n                                  <FormattedMessage id='USDx_Available_supply' />\n                                </span>\n                                <span className='balance-amount'>\n                                  {this.state.available_to_withdraw ? format_bn(this.state.available_to_withdraw, this.state.USDx_decimals, this.decimal_precision) : '-'}\n                                </span>\n                              </div>\n\n                              <div className='input-unit-wrapper'>\n                                <div className='input-wrapper'>\n                                  <Input\n                                    type='number'\n                                    placeholder={this.placeholder}\n                                    min={0}\n                                    className='input-number'\n                                    onChange={(e) => handle_withdraw_change(e.target.value, this, this.state.USDx_decimals, this.state.available_to_withdraw)}\n                                    value={this.state.withdraw_amount}\n                                  />\n                                  <span className={'max-amount-button'} onClick={() => { handle_withdraw_max(this, this.state.available_to_withdraw, this.state.USDx_decimals) }}>\n                                    {'MAX'}\n                                  </span>\n                                </div>\n\n                                <div className={'button-wrapper'}>\n                                  <Button\n                                    size='large'\n                                    className={this.state.is_withdraw_enable ? null : 'disable-button'}\n                                    disabled={false}\n                                    onClick={() => { handle_withdraw_click(this, this.state.USDx_decimals, address[this.state.net_type]['address_USDx']) }}\n                                  >\n                                    {'WITHDRAW'}\n                                  </Button>\n                                </div>\n                              </div>\n                            </React.Fragment>\n                          }\n                          {\n                            (this.state.i_am_ready && !this.state.is_approved) &&\n                            <div className='approve-section'>\n                              <div className='enable-message'>\n                                {'Before supplying USDT for the first time, you must enable USDT.'}\n                              </div>\n                              <div className={'button-wrapper'}>\n                                <Button\n                                  size='large'\n                                  className={''}\n                                  disabled={false}\n                                  onClick={() => { handle_approve(this.state.USDx, this, address[this.state.net_type]['address_mMarket']) }}\n                                >\n                                  {'ENABLE'}\n                                </Button>\n                              </div>\n                            </div>\n                          }\n                        </Tabs.TabPane>\n                        {/* ***** ***** ***** withdraw ***** ***** ***** */}\n\n                      </Tabs>\n                    </div>\n\n                    {/* ***** ***** ***** RecordBoard ***** ***** ***** */}\n                    {\n                      this.state.i_am_ready &&\n                      <RecordBoard\n                        account={this.state.my_account}\n                        net_type={this.state.net_type}\n                        decimal={this.state.USDx_decimals}\n                        token={this.token_name}\n                        load_new_history={this.state.load_new_history}\n                        new_web3={this.new_web3}\n                      />\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n        </MediaQuery>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default Supply_usdx;\n","import React, { Component } from \"react\";\nimport Header from '../../component/header/header';\nimport { withMarketInfo } from '../../HOC/withMarketInfo';\nimport {\n  toFormatShowNumber,\n  findNetwork,\n  getLoginStatusKey,\n  i_got_hash,\n  format_bn,\n  get_tokens_decimals,\n  get_allowance,\n  handle_supply_change,\n  handle_supply_max,\n  handle_withdraw_change,\n  handle_withdraw_max,\n  get_my_balance,\n  get_supplied__available_to_withdraw,\n  handle_approve,\n  handle_supply_click,\n  handle_withdraw_click\n} from '../../util.js';\n\nimport { Link } from \"react-router-dom\";\n\nimport MediaQuery from 'react-responsive';\nimport \"./supply.scss\";\n\n\n\nimport RecordBoard from '../../container/recordBoard/recordBoard';\n\n\nimport { Tabs, Button, InputNumber, Input } from 'antd';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nimport Web3 from 'web3';\n\n\n// tokens ABIs\nlet USDx_abi = require('../../ABIs/USDX_ABI.json');\nlet WETH_abi = require('../../ABIs/WETH_ABI.json');\nlet imBTC_abi = require('../../ABIs/imBTC_ABI.json');\nlet USDT_abi = require('../../ABIs/USDT_ABI.json');\nlet mMarket_abi = require('../../ABIs/moneyMarket.json');\n\n// tokens address\nlet address = require('../../ABIs/address_map.json');\n\n// 常量\nlet constant = require('../../ABIs/constant.json');\n\nconst WithMarketInfoEnhanced = withMarketInfo(Header);\n\n\nclass Supply_usdt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      supply_amount: null,\n      is_supply_enable: true,\n      is_withdraw_enable: true\n    }\n\n    this.new_web3 = window.new_web3 = new Web3(Web3.givenProvider || null);\n    this.bn = this.new_web3.utils.toBN;\n    this.decimal_precision = constant.decimal_precision;\n    this.gas_limit_coefficient = constant.gas_limit_coefficient;\n    this.collateral_rate = constant.collateral_rate;\n\n    this.placeholder = 'Amount in USDT';\n    this.img_src = 'USDT';\n    this.token_name = 'USDT';\n\n    this.new_web3.eth.net.getNetworkType().then(\n      (net_type) => {\n        let USDx = new this.new_web3.eth.Contract(USDx_abi, address[net_type]['address_USDx']);\n        let WETH = new this.new_web3.eth.Contract(WETH_abi, address[net_type]['address_WETH']);\n        let imBTC = new this.new_web3.eth.Contract(imBTC_abi, address[net_type]['address_imBTC']);\n        let USDT = new this.new_web3.eth.Contract(USDT_abi, address[net_type]['address_USDT']);\n        let mMarket = new this.new_web3.eth.Contract(mMarket_abi, address[net_type]['address_mMarket']);\n        console.log(' *** init contract finished *** ');\n        this.setState({ net_type: net_type, USDx: USDx, WETH: WETH, imBTC: imBTC, USDT: USDT, mMarket: mMarket }, () => {\n          get_tokens_decimals(this.state.USDx, this.state.WETH, this.state.imBTC, this.state.USDT, this);\n          this.new_web3.givenProvider.enable().then(res_accounts => {\n            this.setState({\n              my_account: res_accounts[0]\n            }, async () => {\n              console.log('connected: ', this.state.my_account)\n\n              let is_approved = await get_allowance(this.state.USDT, this.state.my_account, address[net_type]['address_mMarket'], this.bn);\n\n              console.log('is_approved: ', is_approved)\n              this.setState({ is_approved: is_approved })\n\n              let timer_Next = setInterval(() => {\n                if (!(this.state.USDx_decimals && this.state.WETH_decimals && this.state.imBTC_decimals && this.state.USDT_decimals)) {\n                  console.log('111111111: not get yet...');\n                } else {\n                  console.log('2222222222: i got it...');\n                  clearInterval(timer_Next);\n                  this.setState({ i_am_ready: true })\n\n                  // to do something...\n\n\n\n                }\n              }, 100)\n            })\n          })\n        })\n      }\n    )\n  }\n\n\n\n\n\n\n\n\n\n  componentDidMount = () => {\n    console.log('component-Did-Mount...')\n\n    this.timer_get_data = setInterval(() => {\n      if (!this.state.my_account) {\n        console.log('account not available.')\n        return false;\n      }\n      console.log('update new data.')\n      get_my_balance(this.state.USDT, this.state.my_account, this);\n      get_supplied__available_to_withdraw(this.state.mMarket, this.state.USDT, this.state.my_account, address[this.state.net_type]['address_USDT'], address[this.state.net_type]['address_mMarket'], this);\n    }, 3000)\n\n  }\n\n\n  componentWillUnmount = () => {\n    if (this.timer_Next) {\n      clearInterval(this.timer_Next)\n    }\n    clearInterval(this.timer_get_data)\n  }\n\n\n  render() {\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <MediaQuery maxWidth={768}>\n          {(match) =>\n            // <div className={'lend-page ' + (match ? 'CM XS ' : 'CM LG ') + (NetworkName === 'Main' ? 'without-banner' : 'with-banner')}>\n\n            <div className={'lend-page ' + (match ? 'CM XS ' : 'CM LG ') + ('without-banner')}>\n              {/* <WithMarketInfoEnhanced login={true} /> */}\n              <div className='redirect-button'>\n                <div className='go-back-button'>\n                  <Link to={'/'}>\n                    <img src={'images/icon_home@2x.png'} alt=\"HOME\" />\n                    <span>\n                      <FormattedMessage id='Home' />\n                    </span>\n                  </Link>\n                </div>\n              </div>\n              {/* <AccountInfo currentPage={'lend'}  login={true} /> */}\n\n              <div className=\"lend-page-wrapper\">\n                <div className=\"supply-group\">\n                  <div className=\"supply-title\">\n                    <span>\n                      <FormattedMessage id='SUPPLY' /></span>\n                  </div>\n                  <div className=\"supply-content\" style={{}}>\n                    {/* <div className=\"supply-content\" style={{ display: (this.state.isApproved_USDx == 1) || (this.state.not_approve_atfirst_USDX == 1) ? 'block' : 'none' }}> */}\n                    {/* <SupplyContent /> */}\n\n\n                    <div className='supply-input'>\n                      <div className='info-wrapper'>\n                        <span className='balance-type'>\n                          <img style={{ width: '16px', height: '16px', margin: 'auto', marginTop: '-4px' }} src={`images/${this.img_src}.svg`} alt=\"\" />\n                          &nbsp;\n                          <FormattedMessage id='USDx_Supplied' />\n                        </span>\n                        <span className='balance-amount'>\n                          {this.state.my_supplied ? format_bn(this.state.my_supplied, this.state.USDT_decimals, this.decimal_precision) : '-'}\n                        </span>\n                      </div>\n\n                      <Tabs className='tab-wrapper' animated={true} size='large' onChange={this.changePane}>\n                        {/* ***** ***** ***** approve ***** ***** ***** */}\n                        <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '存款' : 'SUPPLY'} key=\"1\" className='tab-content'>\n                          {\n                            (this.state.i_am_ready && this.state.is_approved) &&\n                            <React.Fragment>\n                              <div className='balance-info'>\n                                <span className='balance-desc'>\n                                  <FormattedMessage id='USDx_Balance' />\n                                </span>\n                                <span className='balance-amount'>\n                                  {this.state.my_balance ? format_bn(this.state.my_balance, this.state.USDT_decimals, this.decimal_precision) : '-'}\n                                  &nbsp;\n                                {this.token_name}\n                                </span>\n                              </div>\n                              <div className='input-unit-wrapper'>\n                                <div className='input-wrapper'>\n                                  <Input\n                                    type='number'\n                                    placeholder={this.placeholder}\n                                    min={0}\n                                    onChange={(e) => handle_supply_change(e.target.value, this, this.state.USDT_decimals, this.state.my_balance)}\n                                    className='input-number'\n                                    value={this.state.supply_amount}\n                                  />\n                                  <span className={'max-amount-button'} onClick={() => { handle_supply_max(this, this.state.my_balance, this.state.USDT_decimals) }}>\n                                    {'MAX'}\n                                  </span>\n                                </div>\n                                <div className={'button-wrapper'}>\n                                  <Button\n                                    size='large'\n                                    className={this.state.is_supply_enable ? null : 'disable-button'}\n                                    disabled={false}\n                                    onClick={() => { handle_supply_click(this, this.state.USDT_decimals, address[this.state.net_type]['address_USDT']) }}\n                                  >\n                                    {'SUPPLY'}\n                                    {/* <FormattedMessage id='USDx_Balance' /> */}\n                                  </Button>\n                                </div>\n                              </div>\n                            </React.Fragment>\n                          }\n                          {\n                            (this.state.i_am_ready && !this.state.is_approved) &&\n                            <div className='approve-section'>\n                              <div className='enable-message'>\n                                {'Before supplying USDT for the first time, you must enable USDT.'}\n                              </div>\n                              <div className={'button-wrapper'}>\n                                <Button\n                                  size='large'\n                                  className={this.state.isEnableing ? 'disable-button' : null}\n                                  disabled={false}\n                                  onClick={() => { handle_approve(this.state.USDT, this, address[this.state.net_type]['address_mMarket']) }}\n                                >\n                                  {'ENABLE'}\n                                </Button>\n                              </div>\n                            </div>\n                          }\n                        </Tabs.TabPane>\n                        {/* ***** ***** ***** approve ***** ***** ***** */}\n\n                        {/* ***** ***** ***** withdraw ***** ***** ***** */}\n                        <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '取出' : 'WITHDRAW'} key=\"2\" className='tab-content'>\n                          {\n                            (this.state.i_am_ready && this.state.is_approved) &&\n                            <React.Fragment>\n                              <div className='balance-info'>\n                                <span className='balance-desc'>\n                                  <FormattedMessage id='USDx_Available_supply' />\n                                </span>\n                                <span className='balance-amount'>\n                                  {this.state.available_to_withdraw ? format_bn(this.state.available_to_withdraw, this.state.USDT_decimals, this.decimal_precision) : '-'}\n                                </span>\n                              </div>\n\n                              <div className='input-unit-wrapper'>\n                                <div className='input-wrapper'>\n                                  <Input\n                                    type='number'\n                                    placeholder={this.placeholder}\n                                    min={0}\n                                    className='input-number'\n                                    onChange={(e) => handle_withdraw_change(e.target.value, this, this.state.USDT_decimals, this.state.available_to_withdraw)}\n                                    value={this.state.withdraw_amount}\n                                  />\n                                  <span className={'max-amount-button'} onClick={() => { handle_withdraw_max(this, this.state.available_to_withdraw, this.state.USDT_decimals) }}>\n                                    {'MAX'}\n                                  </span>\n                                </div>\n\n                                <div className={'button-wrapper'}>\n                                  <Button\n                                    size='large'\n                                    className={this.state.is_withdraw_enable ? null : 'disable-button'}\n                                    disabled={false}\n                                    onClick={() => { handle_withdraw_click(this, this.state.USDT_decimals, address[this.state.net_type]['address_USDT']) }}\n                                  >\n                                    {'WITHDRAW'}\n                                  </Button>\n                                </div>\n                              </div>\n                            </React.Fragment>\n                          }\n                          {\n                            (this.state.i_am_ready && !this.state.is_approved) &&\n                            <div className='approve-section'>\n                              <div className='enable-message'>\n                                {'Before supplying USDT for the first time, you must enable USDT.'}\n                              </div>\n                              <div className={'button-wrapper'}>\n                                <Button\n                                  size='large'\n                                  className={this.state.isEnableing ? 'disable-button' : null}\n                                  disabled={false}\n                                  onClick={() => { handle_approve(this.state.USDT, this, address[this.state.net_type]['address_mMarket']) }}\n                                >\n                                  {'ENABLE'}\n                                </Button>\n                              </div>\n                            </div>\n                          }\n                        </Tabs.TabPane>\n                        {/* ***** ***** ***** withdraw ***** ***** ***** */}\n                      </Tabs>\n                    </div>\n\n                    {/* ***** ***** ***** RecordBoard ***** ***** ***** */}\n                    {\n                      this.state.i_am_ready &&\n                      <RecordBoard\n                        account={this.state.my_account}\n                        net_type={this.state.net_type}\n                        decimal={this.state.USDT_decimals}\n                        token={this.token_name}\n                        load_new_history={this.state.load_new_history}\n                        new_web3={this.new_web3}\n                      />\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n        </MediaQuery>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default Supply_usdt;\n","import React, { Component } from \"react\";\nimport Header from '../../component/header/header';\nimport { withMarketInfo } from '../../HOC/withMarketInfo';\nimport {\n  toFormatShowNumber,\n  findNetwork,\n  getLoginStatusKey,\n  i_got_hash,\n  format_bn,\n  get_tokens_decimals,\n  get_allowance,\n  handle_supply_change,\n  handle_supply_max,\n  handle_withdraw_change,\n  handle_withdraw_max,\n  get_my_balance,\n  get_supplied__available_to_withdraw,\n  handle_approve,\n  handle_supply_click,\n  handle_withdraw_click\n} from '../../util.js';\n\nimport { Link } from \"react-router-dom\";\n\nimport MediaQuery from 'react-responsive';\nimport \"./supply.scss\";\n\n\n\nimport RecordBoard from '../../container/recordBoard/recordBoard';\n\n\nimport { Tabs, Button, InputNumber, Input } from 'antd';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nimport Web3 from 'web3';\n\n\n// tokens ABIs\nlet USDx_abi = require('../../ABIs/USDX_ABI.json');\nlet WETH_abi = require('../../ABIs/WETH_ABI.json');\nlet imBTC_abi = require('../../ABIs/imBTC_ABI.json');\nlet USDT_abi = require('../../ABIs/USDT_ABI.json');\nlet mMarket_abi = require('../../ABIs/moneyMarket.json');\n// tokens address\nlet address = require('../../ABIs/address_map.json');\n// 常量\nlet constant = require('../../ABIs/constant.json');\n\nconst WithMarketInfoEnhanced = withMarketInfo(Header);\n\n\nclass Supply_imbtc extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      supply_amount: null,\n      is_supply_enable: true,\n      is_withdraw_enable: true\n    }\n\n    this.new_web3 = window.new_web3 = new Web3(Web3.givenProvider || null);\n    this.bn = this.new_web3.utils.toBN;\n    this.decimal_precision = constant.decimal_precision;\n    this.gas_limit_coefficient = constant.gas_limit_coefficient;\n    this.collateral_rate = constant.collateral_rate;\n\n    this.placeholder = 'Amount in imBTC';\n    this.img_src = 'imBTC';\n    this.token_name = 'imBTC';\n\n    this.new_web3.eth.net.getNetworkType().then(\n      (net_type) => {\n        let USDx = new this.new_web3.eth.Contract(USDx_abi, address[net_type]['address_USDx']);\n        let WETH = new this.new_web3.eth.Contract(WETH_abi, address[net_type]['address_WETH']);\n        let imBTC = new this.new_web3.eth.Contract(imBTC_abi, address[net_type]['address_imBTC']);\n        let USDT = new this.new_web3.eth.Contract(USDT_abi, address[net_type]['address_USDT']);\n        let mMarket = new this.new_web3.eth.Contract(mMarket_abi, address[net_type]['address_mMarket']);\n\n        console.log(' *** init contract finished *** ');\n\n        this.setState({ net_type: net_type, USDx: USDx, WETH: WETH, imBTC: imBTC, USDT: USDT, mMarket: mMarket }, () => {\n          get_tokens_decimals(this.state.USDx, this.state.WETH, this.state.imBTC, this.state.USDT, this);\n          this.new_web3.givenProvider.enable().then(res_accounts => {\n            this.setState({ my_account: res_accounts[0] }, async () => {\n              console.log('connected: ', this.state.my_account)\n              let is_approved = await get_allowance(this.state.imBTC, this.state.my_account, address[net_type]['address_mMarket'], this.bn);\n              console.log('is_approved: ', is_approved)\n              this.setState({ is_approved: is_approved })\n\n              let timer_Next = setInterval(() => {\n                if (!(this.state.USDx_decimals && this.state.WETH_decimals && this.state.imBTC_decimals && this.state.USDT_decimals)) {\n                  console.log('111111111: not get yet...');\n                } else {\n                  console.log('2222222222: i got it...');\n                  clearInterval(timer_Next);\n                  this.setState({ i_am_ready: true })\n\n                  // to do something...\n\n\n\n                }\n              }, 100)\n            })\n          })\n        })\n      }\n    )\n  }\n\n\n\n\n\n\n\n  componentDidMount = () => {\n    console.log('component-Did-Mount...')\n\n    this.timer_get_data = setInterval(() => {\n      if (!this.state.my_account) {\n        console.log('account not available.')\n        return false;\n      }\n      console.log('update new data.')\n      get_my_balance(this.state.imBTC, this.state.my_account, this);\n      get_supplied__available_to_withdraw(this.state.mMarket, this.state.imBTC, this.state.my_account, address[this.state.net_type]['address_imBTC'], address[this.state.net_type]['address_mMarket'], this);\n    }, 3000)\n\n  }\n\n\n  componentWillUnmount = () => {\n    if (this.timer_Next) {\n      clearInterval(this.timer_Next)\n    }\n    clearInterval(this.timer_get_data)\n  }\n\n\n  render() {\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <MediaQuery maxWidth={768}>\n          {(match) =>\n            // <div className={'lend-page ' + (match ? 'CM XS ' : 'CM LG ') + (NetworkName === 'Main' ? 'without-banner' : 'with-banner')}>\n\n            <div className={'lend-page ' + (match ? 'CM XS ' : 'CM LG ') + ('without-banner')}>\n              {/* <WithMarketInfoEnhanced login={true} /> */}\n              <div className='redirect-button'>\n                <div className='go-back-button'>\n                  <Link to={'/'}>\n                    <img src={'images/icon_home@2x.png'} alt=\"HOME\" />\n                    <span>\n                      <FormattedMessage id='Home' />\n                    </span>\n                  </Link>\n                </div>\n              </div>\n              {/* <AccountInfo currentPage={'lend'}  login={true} /> */}\n\n              <div className=\"lend-page-wrapper\">\n                <div className=\"supply-group\">\n                  <div className=\"supply-title\">\n                    <span>\n                      <FormattedMessage id='SUPPLY' /></span>\n                  </div>\n                  <div className=\"supply-content\">\n                    {/* <div className=\"supply-content\" style={{ display: (this.state.isApproved_USDx == 1) || (this.state.not_approve_atfirst_USDX == 1) ? 'block' : 'none' }}> */}\n                    {/* <SupplyContent /> */}\n\n\n                    <div className='supply-input'>\n                      <div className='info-wrapper'>\n                        <span className='balance-type'>\n                          <img style={{ width: '16px', height: '16px', margin: 'auto', marginTop: '-4px' }} src={`images/${this.img_src}.svg`} alt=\"\" />\n                          &nbsp;\n                          <FormattedMessage id='USDx_Supplied' />\n                        </span>\n                        <span className='balance-amount'>\n                          {this.state.my_supplied ? format_bn(this.state.my_supplied, this.state.imBTC_decimals, this.decimal_precision) : '-'}\n                        </span>\n                      </div>\n\n                      <Tabs className='tab-wrapper' animated={true} size='large' onChange={this.changePane}>\n                        {/* ***** ***** ***** approve ***** ***** ***** */}\n                        <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '存款' : 'SUPPLY'} key=\"1\" className='tab-content'>\n                          {\n                            (this.state.i_am_ready && this.state.is_approved) &&\n                            <React.Fragment>\n                              <div className='balance-info'>\n                                <span className='balance-desc'>\n                                  <FormattedMessage id='USDx_Balance' />\n                                </span>\n                                <span className='balance-amount'>\n                                  {this.state.my_balance ? format_bn(this.state.my_balance, this.state.imBTC_decimals, this.decimal_precision) : '-'}\n                                  &nbsp;\n                                {this.token_name}\n                                </span>\n                              </div>\n                              <div className='input-unit-wrapper'>\n                                <div className='input-wrapper'>\n                                  <Input\n                                    type='number'\n                                    placeholder={this.placeholder}\n                                    min={0}\n                                    onChange={(e) => handle_supply_change(e.target.value, this, this.state.imBTC_decimals, this.state.my_balance)}\n                                    className='input-number'\n                                    value={this.state.supply_amount}\n                                  />\n                                  <span className={'max-amount-button'} onClick={() => { handle_supply_max(this, this.state.my_balance, this.state.imBTC_decimals) }}>\n                                    {'MAX'}\n                                  </span>\n                                </div>\n                                <div className={'button-wrapper'}>\n                                  <Button\n                                    size='large'\n                                    className={this.state.is_supply_enable ? null : 'disable-button'}\n                                    disabled={false}\n                                    onClick={() => { handle_supply_click(this, this.state.imBTC_decimals, address[this.state.net_type]['address_imBTC']) }}\n                                  >\n                                    {'SUPPLY'}\n                                    {/* <FormattedMessage id='USDx_Balance' /> */}\n                                  </Button>\n                                </div>\n                              </div>\n                            </React.Fragment>\n                          }\n                          {\n                            (this.state.i_am_ready && !this.state.is_approved) &&\n                            <div className='approve-section'>\n                              <div className='enable-message'>\n                                {'Before supplying USDT for the first time, you must enable USDT.'}\n                              </div>\n                              <div className={'button-wrapper'}>\n                                <Button\n                                  size='large'\n                                  className={this.state.isEnableing ? 'disable-button' : null}\n                                  disabled={false}\n                                  onClick={() => { handle_approve(this.state.imBTC, this, address[this.state.net_type]['address_mMarket']) }}\n                                >\n                                  {'ENABLE'}\n                                </Button>\n                              </div>\n                            </div>\n                          }\n                        </Tabs.TabPane>\n                        {/* ***** ***** ***** approve ***** ***** ***** */}\n\n                        {/* ***** ***** ***** withdraw ***** ***** ***** */}\n                        <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '取出' : 'WITHDRAW'} key=\"2\" className='tab-content'>\n                          {\n                            (this.state.i_am_ready && this.state.is_approved) &&\n                            <React.Fragment>\n                              <div className='balance-info'>\n                                <span className='balance-desc'>\n                                  <FormattedMessage id='USDx_Available_supply' />\n                                </span>\n                                <span className='balance-amount'>\n                                  {this.state.available_to_withdraw ? format_bn(this.state.available_to_withdraw, this.state.imBTC_decimals, this.decimal_precision) : '-'}\n                                </span>\n                              </div>\n\n                              <div className='input-unit-wrapper'>\n                                <div className='input-wrapper'>\n                                  <Input\n                                    type='number'\n                                    placeholder={this.placeholder}\n                                    min={0}\n                                    className='input-number'\n                                    onChange={(e) => handle_withdraw_change(e.target.value, this, this.state.imBTC_decimals, this.state.available_to_withdraw)}\n                                    value={this.state.withdraw_amount}\n                                  />\n                                  <span className={'max-amount-button'} onClick={() => { handle_withdraw_max(this, this.state.available_to_withdraw, this.state.imBTC_decimals) }}>\n                                    {'MAX'}\n                                  </span>\n                                </div>\n\n                                <div className={'button-wrapper'}>\n                                  <Button\n                                    size='large'\n                                    className={this.state.is_withdraw_enable ? null : 'disable-button'}\n                                    disabled={false}\n                                    onClick={() => { handle_withdraw_click(this, this.state.imBTC_decimals, address[this.state.net_type]['address_imBTC']) }}\n                                  >\n                                    {'WITHDRAW'}\n                                  </Button>\n                                </div>\n                              </div>\n                            </React.Fragment>\n                          }\n                          {\n                            (this.state.i_am_ready && !this.state.is_approved) &&\n                            <div className='approve-section'>\n                              <div className='enable-message'>\n                                {'Before supplying USDT for the first time, you must enable USDT.'}\n                              </div>\n                              <div className={'button-wrapper'}>\n                                <Button\n                                  size='large'\n                                  className={this.state.isEnableing ? 'disable-button' : null}\n                                  disabled={false}\n                                  onClick={() => { handle_approve(this.state.imBTC, this, address[this.state.net_type]['address_mMarket']) }}\n                                >\n                                  {'ENABLE'}\n                                </Button>\n                              </div>\n                            </div>\n                          }\n                        </Tabs.TabPane>\n                        {/* ***** ***** ***** withdraw ***** ***** ***** */}\n                      </Tabs>\n                    </div>\n\n                    {/* ***** ***** ***** RecordBoard ***** ***** ***** */}\n                    {\n                      this.state.i_am_ready &&\n                      <RecordBoard\n                        account={this.state.my_account}\n                        net_type={this.state.net_type}\n                        decimal={this.state.imBTC_decimals}\n                        token={this.token_name}\n                        load_new_history={this.state.load_new_history}\n                        new_web3={this.new_web3}\n                      />\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n        </MediaQuery>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default Supply_imbtc;\n","// for weth.\n\nexport const get_my_ETH = (that) => {\n  that.new_web3.eth.getBalance(that.state.my_account, (err, res_eth) => {\n    // console.log('res_eth: ', res_eth)\n    that.setState({\n      my_ETH: res_eth\n    })\n  })\n}\n\nexport const get_my_WETH = (that) => {\n  that.state.WETH.methods.balanceOf(that.state.my_account).call((err, res_weth) => {\n    // console.log('res_weth: ', res_weth)\n    if (res_weth) {\n      that.setState({\n        my_balance: res_weth\n      })\n    }\n  });\n}\n\nexport const get_WETH_supplied__available_to_withdraw = (that, weth_address, m_address) => {\n  that.state.mMarket.methods.getSupplyBalance(that.state.my_account, weth_address).call((err, res_supplied) => {\n    that.setState({\n      my_WETH_supplied: res_supplied\n    }, () => {\n      that.state.mMarket.methods.calculateAccountValues(that.state.my_account).call((err, res_account_values) => {\n        that.state.mMarket.methods.assetPrices(weth_address).call((err, res_price) => {\n          that.state.WETH.methods.balanceOf(m_address).call((err, res_cash) => {\n\n            var m_supply = that.bn(res_account_values[1]);\n            if (that.bn(res_account_values[2]).gt(that.bn('0'))) {\n              var m_borrow = that.bn(res_account_values[2]).mul(that.bn(that.collateral_rate)).add(that.bn(5 ** 17)).div(that.bn(10 ** 18));\n              if (that.bn(res_account_values[1]).gt(m_borrow)) {\n                m_supply = that.bn(res_account_values[1]).sub(m_borrow);\n              }\n            }\n            // console.log('res_supplied: ', res_supplied)\n            // console.log('res_account_values: ', res_account_values)\n            // console.log('res_price: ', res_price)\n            // console.log('res_cash: ', res_cash)\n            var liquidity_bn = m_supply.div(that.bn(res_price));\n            var SmallNum_bn = liquidity_bn.lt(that.bn(res_supplied)) ? liquidity_bn : that.bn(res_supplied);\n            var SmallNum_est = SmallNum_bn.lt(that.bn(res_cash)) ? SmallNum_bn.toString() : res_cash;\n            // console.log('SmallNum_est: ', SmallNum_est)\n            // console.log('-------------------------------------------')\n            that.setState({\n              my_WETH_available_to_withdraw: SmallNum_est\n            })\n          })\n        })\n      })\n    })\n  })\n}\n\nexport const handle_wrap_change = (that, value, balance) => {\n  if (value.length > 18) {\n    return;\n  }\n\n  if (value === null || value === '') {\n    console.log(\"value === null || value === ''\")\n    that.setState({\n      is_wrap_enable: true,\n      wrap_amount: null\n    });\n    return false;\n  } else {\n    var amount_bn;\n    var temp_value = value;\n    if (temp_value.indexOf('.') > 0) {\n      var sub_num = temp_value.length - temp_value.indexOf('.') - 1;// 3\n      if (sub_num > 18) {\n        console.log(' --- decimals extent ---');\n        that.setState({\n          wrap_amount: value,\n          is_wrap_enable: false\n        });\n        return false;\n      }\n      temp_value = temp_value.substr(0, temp_value.indexOf('.')) + temp_value.substr(value.indexOf('.') + 1);// '123456'\n      amount_bn = that.bn(temp_value).mul(that.bn(10 ** (18 - sub_num)));// bn_'123456'\n    } else {\n      amount_bn = that.bn(value).mul(that.bn(10 ** 18));\n    }\n\n    console.log(amount_bn.toString());\n\n    if (amount_bn.sub(that.bn(balance)) > 0) {\n      console.log(' --- INSUFFICIENT BALANCE ---');\n      that.setState({\n        wrap_amount: value,\n        is_wrap_enable: false\n      });\n      return false;\n    }\n  }\n\n  that.setState({ wrap_amount: value });\n\n  if ((Number(value)) === 0) {\n    that.setState({ is_wrap_enable: false });\n    return;\n  } else {\n    that.setState({ is_wrap_enable: true });\n  }\n}\n\nexport const handle_wrap_click = (that) => {\n  if (!(that.state.is_wrap_enable && that.state.wrap_amount)) {\n    console.log('i return you...');\n    return false;\n  }\n\n  that.setState({ is_wrap_enable: false });\n\n  var amount_str = that.state.wrap_amount;// '123.456'\n  var amount_bn;\n\n  if (amount_str.indexOf('.') > 0) {\n    var sub_num = amount_str.length - amount_str.indexOf('.') - 1;// 3\n    amount_str = amount_str.substr(0, amount_str.indexOf('.')) + amount_str.substr(amount_str.indexOf('.') + 1);// '123456'\n    amount_bn = that.bn(amount_str).mul(that.bn(10 ** (18 - sub_num)));// bn_'123456'\n  } else {\n    amount_bn = that.bn(amount_str).mul(that.bn(10 ** 18));\n  }\n\n  console.log('amount_bn: ', amount_bn);\n  console.log('amount_bn string: ', amount_bn.toString());\n\n  that.state.WETH.methods.deposit().estimateGas({ from: that.state.my_account,value: amount_bn.toString() }, (err, gasLimit) => {\n    that.new_web3.eth.getGasPrice((err, gasPrice) => {\n      console.log('supply_gasLimit: ', gasLimit);\n      console.log('supply_gasPrice: ', gasPrice);\n\n      that.state.WETH.methods.deposit().send(\n        {\n          from: that.state.my_account,\n          value: amount_bn.toString(),\n          gas: Math.ceil(gasLimit * that.gas_limit_coefficient),\n          gasPrice: gasPrice\n        }, (reject, res_hash) => {\n          // 成功后返回哈希\n          if (res_hash) {\n            console.log(res_hash);\n            that.setState({ is_wrap_enable: true, wrap_amount: null });\n            let timestamp = new Date().getTime();\n            i_got_hash(that.state.my_account, that.state.net_type, 'ETH', 'wrap', amount_bn.toString(), res_hash, timestamp, 'pendding', that);\n          }\n          // 点击取消\n          if (reject) {\n            console.log(reject)\n            that.setState({ is_wrap_enable: true });\n          }\n        }\n      )\n    })\n  })\n}\n\nexport const i_got_hash = (account, net_type, token, action, amount, hash, timestamp, status, that) => {\n  if (window.localStorage) {\n    let key = account + '-' + net_type;\n    let contractData = JSON.parse(window.localStorage.getItem(key)) || [];\n    contractData.push({\n      account: account,\n      net_type: net_type,\n      token: token,\n      action: action,\n      amount: amount,\n      hash: hash,\n      timestamp: timestamp,\n      status: status\n    });\n    window.localStorage.setItem(key, JSON.stringify(contractData));\n    console.log('got hash && setItem.');\n\n    that.setState({ load_new_history: Math.random() });\n  }\n}\n\n// ***** 分割线 *****  ***** 分割线 *****  ***** 分割线 *****  ***** 分割线 *****  ***** 分割线 *****  ***** 分割线 *****  ***** 分割线 ***** ***** 分割线 *****  ***** 分割线 ***** \n\nexport const handle_unwrap_change = (that, value, balance) => {\n  if (value.length > 18) {\n    return;\n  }\n\n  if (value === null || value === '') {\n    console.log(\"value === null || value === ''\")\n    that.setState({\n      is_unwrap_enable: true,\n      unwrap_amount: null\n    });\n    return false;\n  } else {\n    var amount_bn;\n    var temp_value = value;\n    if (temp_value.indexOf('.') > 0) {\n      var sub_num = temp_value.length - temp_value.indexOf('.') - 1;// 3\n      if (sub_num > 18) {\n        console.log(' --- decimals extent ---');\n        that.setState({\n          unwrap_amount: value,\n          is_unwrap_enable: false\n        });\n        return false;\n      }\n      temp_value = temp_value.substr(0, temp_value.indexOf('.')) + temp_value.substr(value.indexOf('.') + 1);// '123456'\n      amount_bn = that.bn(temp_value).mul(that.bn(10 ** (18 - sub_num)));// bn_'123456'\n    } else {\n      amount_bn = that.bn(value).mul(that.bn(10 ** 18));\n    }\n\n    console.log(amount_bn.toString());\n\n    if (amount_bn.sub(that.bn(balance)) > 0) {\n      console.log(' --- INSUFFICIENT BALANCE ---');\n      that.setState({\n        unwrap_amount: value,\n        is_unwrap_enable: false\n      });\n      return false;\n    }\n  }\n\n  that.setState({ unwrap_amount: value });\n\n  if ((Number(value)) === 0) {\n    that.setState({ is_unwrap_enable: false });\n    return;\n  } else {\n    that.setState({ is_unwrap_enable: true });\n  }\n}\n\nexport const handle_unwrap_click = (that) => {\n  if (!(that.state.is_unwrap_enable && that.state.unwrap_amount)) {\n    console.log('i return you...');\n    return false;\n  }\n\n  that.setState({ is_unwrap_enable: false });\n\n  var amount_str = that.state.unwrap_amount;// '123.456'\n  var amount_bn;\n\n  if (amount_str.indexOf('.') > 0) {\n    var sub_num = amount_str.length - amount_str.indexOf('.') - 1;// 3\n    amount_str = amount_str.substr(0, amount_str.indexOf('.')) + amount_str.substr(amount_str.indexOf('.') + 1);// '123456'\n    amount_bn = that.bn(amount_str).mul(that.bn(10 ** (18 - sub_num)));// bn_'123456'\n  } else {\n    amount_bn = that.bn(amount_str).mul(that.bn(10 ** 18));\n  }\n\n  console.log('amount_bn: ', amount_bn);\n  console.log('amount_bn string: ', amount_bn.toString());\n\n  that.state.WETH.methods.withdraw(amount_bn.toString()).estimateGas({ from: that.state.my_account }, (err, gasLimit) => {\n    that.new_web3.eth.getGasPrice((err, gasPrice) => {\n      console.log('supply_gasLimit: ', gasLimit);\n      console.log('supply_gasPrice: ', gasPrice);\n\n      that.state.WETH.methods.withdraw(amount_bn.toString()).send(\n        {\n          from: that.state.my_account,\n          gas: Math.ceil(gasLimit * that.gas_limit_coefficient),\n          gasPrice: gasPrice\n        }, (reject, res_hash) => {\n          // 成功后返回哈希\n          if (res_hash) {\n            console.log(res_hash);\n            that.setState({ is_unwrap_enable: true, unwrap_amount: null });\n            let timestamp = new Date().getTime();\n            i_got_hash(that.state.my_account, that.state.net_type, 'ETH', 'unwrap', amount_bn.toString(), res_hash, timestamp, 'pendding', that);\n          }\n          // 点击取消\n          if (reject) {\n            console.log(reject)\n            that.setState({ is_unwrap_enable: true });\n          }\n        }\n      )\n    })\n  })\n}\n\n\n\n","import React, { Component } from 'react';\n\nimport RecordBoard from '../../container/recordBoard/recordBoard';\nimport { Link } from \"react-router-dom\";\n\nimport MediaQuery from 'react-responsive';\nimport './supply.scss';\n\nimport {\n  get_tokens_decimals,\n  format_bn,\n  get_allowance,\n  handle_approve,\n  handle_supply_click,\n  handle_supply_change,\n  handle_withdraw_click,\n  handle_withdraw_change\n} from '../../util.js';\n\nimport {\n  get_my_ETH,\n  get_my_WETH,\n  get_WETH_supplied__available_to_withdraw,\n  handle_wrap_change,\n  handle_wrap_click,\n  handle_unwrap_change,\n  handle_unwrap_click\n} from '../../util-weth';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nimport { Tabs, Button, InputNumber, Input } from 'antd';\n\nimport Web3 from 'web3';\n\n// tokens ABIs\nlet USDx_abi = require('../../ABIs/USDX_ABI.json');\nlet WETH_abi = require('../../ABIs/WETH_ABI.json');\nlet imBTC_abi = require('../../ABIs/imBTC_ABI.json');\nlet USDT_abi = require('../../ABIs/USDT_ABI.json');\nlet mMarket_abi = require('../../ABIs/moneyMarket.json');\n// tokens address\nlet address = require('../../ABIs/address_map.json');\n// 常量\nlet constant = require('../../ABIs/constant.json');\n\n\nclass Supply_weth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      is_wrap_enable: true,\n      is_unwrap_enable: true,\n      is_supply_enable: true,\n      is_withdraw_enable:true\n    };\n\n    this.new_web3 = window.new_web3 = new Web3(Web3.givenProvider || null);\n    this.bn = this.new_web3.utils.toBN;\n\n    this.decimal_precision = constant.decimal_precision;\n    this.gas_limit_coefficient = constant.gas_limit_coefficient;\n    this.collateral_rate = constant.collateral_rate;\n    this.originationFee = constant.originationFee;\n\n    this.placeholder = 'Amount in WETH';\n    this.img_src = 'WETH';\n    this.token_name = 'WETH';\n\n    this.new_web3.eth.net.getNetworkType().then(\n      (net_type) => {\n        let USDx = new this.new_web3.eth.Contract(USDx_abi, address[net_type]['address_USDx']);\n        let WETH = new this.new_web3.eth.Contract(WETH_abi, address[net_type]['address_WETH']);\n        let imBTC = new this.new_web3.eth.Contract(imBTC_abi, address[net_type]['address_imBTC']);\n        let USDT = new this.new_web3.eth.Contract(USDT_abi, address[net_type]['address_USDT']);\n        let mMarket = new this.new_web3.eth.Contract(mMarket_abi, address[net_type]['address_mMarket']);\n\n        console.log(' *** init contract finished *** ');\n\n        this.setState({\n          net_type: net_type, USDx: USDx, WETH: WETH, imBTC: imBTC, USDT: USDT, mMarket: mMarket\n        }, () => {\n          get_tokens_decimals(this.state.USDx, this.state.WETH, this.state.imBTC, this.state.USDT, this);\n          this.new_web3.givenProvider.enable().then(res_accounts => {\n            this.setState({\n              my_account: res_accounts[0]\n            }, async () => {\n              console.log('connected: ', this.state.my_account)\n              let is_approved = await get_allowance(this.state.WETH, this.state.my_account, address[net_type]['address_mMarket'], this.bn);\n              console.log('is_approved: ', is_approved);\n\n              this.setState({ is_approved: is_approved })\n\n              let timer_Next = setInterval(() => {\n                if (!(this.state.USDx_decimals && this.state.WETH_decimals && this.state.imBTC_decimals && this.state.USDT_decimals)) {\n                  console.log('111111111: not get yet...');\n                } else {\n                  console.log('2222222222: i got it...');\n                  clearInterval(timer_Next);\n                  this.setState({ i_am_ready: true })\n\n                  // to do something...\n                }\n              }, 100)\n            })\n          })\n        })\n      }\n    )\n  }\n\n\n\n  componentDidMount = () => {\n    this.timer_get_data = setInterval(() => {\n      if (!this.state.my_account) {\n        console.log('account not ailableav')\n        return false;\n      }\n\n      get_my_ETH(this);\n      get_my_WETH(this);\n      get_WETH_supplied__available_to_withdraw(this, address[this.state.net_type]['address_WETH'], address[this.state.net_type]['address_mMarket']);\n    }, 3000)\n\n  }\n\n  componentWillUnmount = () => {\n    if (this.timer_Next) {\n      clearInterval(this.timer_Next)\n    }\n    clearInterval(this.timer_get_data)\n  }\n\n\n  render() {\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <MediaQuery maxWidth={768}>\n          {(match) =>\n            <div className={'lend-page ' + (match ? 'CM XS ' : 'CM LG ') + ('without-banner')}>\n\n\n              <div className='redirect-button'>\n                <div className='go-back-button'>\n                  <Link to={'/'}>\n                    <img src={'images/icon_home@2x.png'} alt=\"HOME\" />\n                    <FormattedMessage id='Home' />\n                  </Link>\n                </div>\n              </div>\n\n              {/* <AccountInfo networkName={NetworkName} currentPage={'borrow'} account={currentAccount} login={window.web3.eth.accounts[0] ? true : false} /> */}\n\n              <div className='lend-page-wrapper'>\n\n                <div className='supply-group'>\n                  <div className='supply-title'>\n                    <span className='title-font'>\n                      <FormattedMessage id='SUPPLY' />\n                    </span>\n                  </div>\n                  <div className='supply-content' style={{}}>\n                    <div className='supply-input'>\n                      {/* <BalanceInfoWithIcon coin={'WETH'} action={'Supplied'} login={window.web3.eth.accounts[0] ? true : false} /> */}\n                      <div className='info-wrapper'>\n                        <span className='balance-type'>\n                          <img style={{ width: '16px', height: '16px', margin: 'auto', marginTop: '-4px' }} src={`images/WETH@2x.png`} alt=\"\" />\n                          &nbsp;\n                            <FormattedMessage id='WETH_Supplied' />\n                        </span>\n                        <span className='balance-amount'>\n                          {this.state.my_WETH_supplied ? format_bn(this.state.my_WETH_supplied, this.state.WETH_decimals, 2) : '-'}\n                        </span>\n                      </div>\n\n\n                      <Tabs className='tab-wrapper' animated={true} size='large' onChange={this.changePane}>\n                        <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '存款' : 'SUPPLY'} key=\"1\" className='tab-content'>\n                          {\n                            (this.state.i_am_ready && this.state.is_approved) &&\n                            <React.Fragment>\n                              <div className='balance-info'>\n                                <span className='balance-desc'>\n                                  <FormattedMessage id='ETH_Balance' />\n                                </span>\n                                <span className='balance-amount'>\n                                  {this.state.my_ETH ? format_bn(this.state.my_ETH, 18, 2) : '-'}\n                                  &nbsp;ETH\n                                  </span>\n                              </div>\n                              <div className='input-wrap-unit-wrapper'>\n                                <div className='wrap-input-wrapper'>\n                                  <div className='input-wrapper'>\n                                    <Input\n                                      type='number'\n                                      placeholder={'Ether to Wrap'}\n                                      min={0}\n                                      value={this.state.wrap_amount}\n                                      onChange={(e) => handle_wrap_change(this, e.target.value, this.state.my_ETH)}\n                                      className='input-number'\n                                    />\n                                  </div>\n                                  <div className='button-wrapper'>\n                                    <Button\n                                      size='large'\n                                      className={this.state.is_wrap_enable ? null : 'disable-button'}\n                                      onClick={() => handle_wrap_click(this)}\n                                    >\n                                      {'wrap'}\n                                    </Button>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className='input-unwrap-unit-wrapper'>\n                                <div className='input-wrapper'>\n                                  <Input\n                                    type='number'\n                                    placeholder={'WETH to Unwrap'}\n                                    min={0}\n                                    value={this.state.unwrap_amount}\n                                    onChange={(e) => handle_unwrap_change(this, e.target.value, this.state.my_WETH)}\n                                    className='input-number'\n                                  />\n                                  {/* <span className={this.state.unwrapMaxClassName} onClick={this.state.unwrapInputDisabled ? '' : this.handleunwrapMax}>MAX</span> */}\n                                </div>\n                                <div className='button-wrapper'>\n                                  <Button\n                                    size='large'\n                                    className={this.state.is_unwrap_enable ? null : 'disable-button'}\n                                    disabled={false}\n                                    onClick={() => handle_unwrap_click(this)}\n                                  >\n                                    {'unwrap'}\n                                  </Button>\n                                </div>\n                              </div>\n                              <div className='balance-info'>\n                                <span className='balance-desc'>\n                                  <FormattedMessage id='WETH_Balance' />\n                                </span>\n                                <span className='balance-amount'>\n                                  {this.state.my_WETH ? format_bn(this.state.my_WETH, 18, 2) : '-'}\n                                  &nbsp;WETH\n                                  </span>\n                              </div>\n                              <div className='input-unit-wrapper'>\n                                <div className='input-wrapper'>\n                                  <Input\n                                    type='number'\n                                    placeholder={'Amount in WETH'}\n                                    min={0}\n                                    value={this.state.supply_amount}\n                                    onChange={(e) => handle_supply_change(e.target.value, this, this.state.WETH_decimals, this.state.my_WETH)}\n                                    className='input-number'\n                                    disabled={false}\n                                  />\n                                  {/* <span className={this.state.maxClassName} onClick={this.state.supplyInputDisabled ? '' : this.handleSupplyMax}>MAX</span> */}\n                                </div>\n\n                                <div className={'button-wrapper'}>\n                                  <Button\n                                    size='large'\n                                    className={this.state.is_supply_enable ? null : 'disable-button'}\n                                    disabled={false}\n                                    onClick={() => { handle_supply_click(this, this.state.WETH_decimals, address[this.state.net_type]['address_WETH']) }}\n                                  >\n                                    {'supply'}\n                                  </Button>\n                                </div>\n                              </div>\n                            </React.Fragment>\n                          }\n                          {\n                            (this.state.i_am_ready && !this.state.is_approved) &&\n                            <div className='approve-section'>\n                              <div className='enable-message'>\n                                {'Before supplying USDT for the first time, you must enable USDT.'}\n                              </div>\n                              <div className={'button-wrapper'}>\n                                <Button\n                                  size='large'\n                                  className={''}\n                                  disabled={false}\n                                  onClick={() => { handle_approve(this.state.WETH, this, address[this.state.net_type]['address_mMarket']) }}\n                                >\n                                  {'ENABLE'}\n                                </Button>\n                              </div>\n                            </div>\n                          }\n                        </Tabs.TabPane>\n\n\n\n\n                        <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '取出' : 'WITHDRAW'} key=\"2\" className='tab-content'>\n                          {\n                            (this.state.i_am_ready && this.state.is_approved) &&\n                            <React.Fragment>\n                              <div className='balance-info'>\n                                <span className='balance-desc'>\n                                  <FormattedMessage id='WETH_Available' />\n                                </span>\n                                <span className='balance-amount'>\n                                  {this.state.my_WETH_available_to_withdraw ? format_bn(this.state.my_WETH_available_to_withdraw, this.state.WETH_decimals, 2) : '-'}\n                                  &nbsp;WETH\n                                  </span>\n                              </div>\n                              <div className='input-unit-wrapper'>\n                                <div className='input-wrapper'>\n                                  <Input\n                                    type='number'\n                                    placeholder={'Amount in WETH'}\n                                    min={0}\n                                    value={this.state.withdraw_amount}\n                                    onChange={(e) => handle_withdraw_change(e.target.value, this, this.state.WETH_decimals, this.state.my_WETH_available_to_withdraw)}\n                                    className='input-number'\n                                    disabled={false}\n                                  />\n                                </div>\n\n                                {/* {\n                                  props.exceedsSafeMax ?\n                                    <div className='safe-max-alert-message'>Borrowing exceeds SAFE value makes your supply in risk.</div> : ''\n                                } */}\n\n                                <div className={'button-wrapper'}>\n                                  <Button\n                                    size='large'\n                                    className={this.state.is_withdraw_enable ? null : 'disable-button'}\n                                    disabled={false}\n                                    onClick={() => { handle_withdraw_click(this, this.state.WETH_decimals, address[this.state.net_type]['address_WETH']) }}\n                                  >\n                                    {'withdraw'}\n                                  </Button>\n                                </div>\n                              </div>\n                            </React.Fragment>\n                          }\n                          {\n                            (this.state.i_am_ready && !this.state.is_approved) &&\n                            <div className='approve-section'>\n                              <div className='enable-message'>\n                                {'Before supplying USDT for the first time, you must enable USDT.'}\n                              </div>\n                              <div className={'button-wrapper'}>\n                                <Button\n                                  size='large'\n                                  className={''}\n                                  disabled={false}\n                                  onClick={() => { handle_approve(this.state.WETH, this, address[this.state.net_type]['address_mMarket']) }}\n                                >\n                                  {'ENABLE'}\n                                </Button>\n                              </div>\n                            </div>\n                          }\n                        </Tabs.TabPane>\n                      </Tabs>\n                    </div>\n\n                    {/* ***** ***** ***** RecordBoard ***** ***** ***** */}\n                    {\n                      this.state.i_am_ready &&\n                      <RecordBoard\n                        account={this.state.my_account}\n                        net_type={this.state.net_type}\n                        decimal={18}\n                        token={this.token_name}\n                        load_new_history={this.state.load_new_history}\n                        new_web3={this.new_web3}\n                      />\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n        </MediaQuery>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default Supply_weth;","import React, { Component } from 'react';\nimport Header from '../../component/header/header';\nimport RecordBoard from '../../container/recordBoard/recordBoard';\nimport { withMarketInfo } from '../../HOC/withMarketInfo';\nimport AccountInfo from '../../container/accountInfo/accountInfo_borrow';\nimport { Link } from \"react-router-dom\";\nimport Network from '../../constant.json';\nimport MediaQuery from 'react-responsive';\n\nimport './borrow.scss';\n\nimport { Tabs, Input, Button } from 'antd';\nimport {\n  findNetwork,\n  getLoginStatusKey,\n  get_tokens_decimals,\n  get_allowance,\n  get_borrow_balance,\n  format_bn,\n  get_my_balance,\n  get_available_to_borrow,\n  handle_borrow_click,\n  handle_borrow_change,\n  handle_repay_change,\n  handle_repay_click,\n  handle_borrow_max,\n  handle_repay_max,\n  handle_approve\n} from '../../util.js';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nimport Web3 from 'web3';\n// tokens ABIs\nlet USDx_abi = require('../../ABIs/USDX_ABI.json');\nlet WETH_abi = require('../../ABIs/WETH_ABI.json');\nlet imBTC_abi = require('../../ABIs/imBTC_ABI.json');\nlet USDT_abi = require('../../ABIs/USDT_ABI.json');\nlet mMarket_abi = require('../../ABIs/moneyMarket.json');\n// tokens address\nlet address = require('../../ABIs/address_map.json');\n// 常量\nlet constant = require('../../ABIs/constant.json');\n\n\nconst WithMarketInfoEnhanced = withMarketInfo(Header);\n\nclass Borrow_usdx extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      is_borrow_enable: true,\n      is_repay_enable: true\n    };\n\n\n    this.new_web3 = window.new_web3 = new Web3(Web3.givenProvider || null);\n    this.bn = this.new_web3.utils.toBN;\n    this.decimal_precision = constant.decimal_precision;\n    this.gas_limit_coefficient = constant.gas_limit_coefficient;\n    this.collateral_rate = constant.collateral_rate;\n\n    this.originationFee = constant.originationFee;\n\n    this.placeholder = 'Amount in USDx';\n    this.img_src = 'USDx';\n    this.token_name = 'USDx';\n\n\n    this.new_web3.eth.net.getNetworkType().then(\n      (net_type) => {\n        let USDx = new this.new_web3.eth.Contract(USDx_abi, address[net_type]['address_USDx']);\n        let WETH = new this.new_web3.eth.Contract(WETH_abi, address[net_type]['address_WETH']);\n        let imBTC = new this.new_web3.eth.Contract(imBTC_abi, address[net_type]['address_imBTC']);\n        let USDT = new this.new_web3.eth.Contract(USDT_abi, address[net_type]['address_USDT']);\n        let mMarket = new this.new_web3.eth.Contract(mMarket_abi, address[net_type]['address_mMarket']);\n\n        console.log(' *** init contract finished *** ');\n\n        this.setState({ net_type: net_type, USDx: USDx, WETH: WETH, imBTC: imBTC, USDT: USDT, mMarket: mMarket }, () => {\n          get_tokens_decimals(this.state.USDx, this.state.WETH, this.state.imBTC, this.state.USDT, this);\n          this.new_web3.givenProvider.enable().then(res_accounts => {\n            this.setState({ my_account: res_accounts[0] }, async () => {\n              console.log('connected: ', this.state.my_account)\n              let is_approved = await get_allowance(this.state.USDx, this.state.my_account, address[net_type]['address_mMarket'], this.bn);\n              console.log('is_approved: ', is_approved)\n              this.setState({ is_approved: is_approved })\n\n              let timer_Next = setInterval(() => {\n                if (!(this.state.USDx_decimals && this.state.WETH_decimals && this.state.imBTC_decimals && this.state.USDT_decimals)) {\n                  console.log('111111111: not get yet...');\n                } else {\n                  console.log('2222222222: i got it...');\n                  clearInterval(timer_Next);\n                  this.setState({ i_am_ready: true })\n\n                  // to do something...\n\n\n\n                }\n              }, 100)\n            })\n          })\n        })\n      }\n    )\n\n  }\n\n\n  componentWillMount() { }\n\n\n  componentDidMount = () => {\n    this.timer_get_data = setInterval(() => {\n      if (!this.state.my_account) {\n        console.log('account not available.')\n        return false;\n      }\n      console.log('update new data.')\n      get_available_to_borrow(this.state.mMarket, this.state.USDx, address[this.state.net_type]['address_mMarket'], address[this.state.net_type]['address_USDx'], this.state.my_account, this.collateral_rate, this.originationFee, this);\n      get_borrow_balance(this.state.mMarket, this.state.my_account, address[this.state.net_type]['address_USDx'], this);\n      get_my_balance(this.state.USDx, this.state.my_account, this)\n      // get_supplied__available_to_withdraw(this.state.mMarket, this.state.USDx, this.state.my_account, address[this.state.net_type]['address_USDx'], address[this.state.net_type]['address_mMarket'], this);\n    }, 3000)\n  }\n\n\n  componentWillUnmount() {\n    clearInterval(this.accountInterval);\n    clearInterval(this.timer_get_data);\n  }\n\n\n\n\n\n\n\n  render() {\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <MediaQuery maxWidth={768}>\n          {(match) =>\n            <div className={'borrow-page ' + (match ? 'CM XS ' : 'CM LG ') + ('without-banner')}>\n\n              {/* <WithMarketInfoEnhanced networkName={findNetwork(this.state.NetworkName)} account={window.web3.eth.accounts[0]} login={window.web3.eth.accounts[0]} /> */}\n\n              <div className='redirect-button'>\n                <div className='go-back-button'>\n                  <Link to={'/'}>\n                    <img src={'images/icon_home@2x.png'} alt=\"HOME\" />\n                    <span>\n                      <FormattedMessage id='Home' />\n                    </span>\n                  </Link>\n                </div>\n              </div>\n\n              {/* <AccountInfo networkName={NetworkName} currentPage={'borrow'} account={currentAccount} login={window.web3.eth.accounts[0] ? true : false} /> */}\n\n              {\n                // match && <label className='input-unit-switch'>\n                //   <input type='checkbox' checked={this.state.borrowgroup} onChange={() => this.setState({ borrowgroup: !this.state.borrowgroup })} />\n                //   <span className=\"slider round\"></span>\n                //   <span className=\"supply\">\n                //     <FormattedMessage id='Supply' />\n                //   </span>\n                //   <span className=\"borrow\">\n                //     <FormattedMessage id='Borrow' />\n                //   </span>\n                // </label>\n              }\n\n              <div className='lend-page-wrapper'>\n                {\n                  // (!this.state.borrowgroup || !match) && <div className='supply-group'>\n                  //   <div className='supply-title'>\n                  //     <span className='title-font'>\n                  //       <FormattedMessage id='SUPPLY' />\n                  //     </span>\n                  //   </div>\n                  //   <div className='supply-content' style={{ display: (this.state.isApproved_WETH === 1) || (this.state.not_approve_atfirst_WETH === 1) ? 'block' : 'none' }}>\n                  //     {/* <Borrow_left {...wethProps} father_approve_WETH={this.state.isApproved_WETH} /> */}\n                  //     {/* <RecordBoard coinType={'WETH'} account={currentAccount} page={'borrow'} /> */}\n                  //   </div>\n                  // </div>\n                }\n\n                {\n\n                  <div className='borrow-group'>\n                    <div className='borrow-title-borrow'>\n                      <span className='title-font'>\n                        <FormattedMessage id='BORROW' />\n                      </span>\n                    </div>\n\n                    <div className='borrow-content'>\n                      {/* <Borrow_right {...borrowProps} father_approve_USDx={this.state.isApproved_USDx} /> */}\n\n\n\n\n\n\n\n                      <div className='borrow-input'>\n                        {/* <BalanceInfoWithIcon coin={'USDx'} action={'Borrowed'} login={this.props.login} /> */}\n\n                        <div className='info-wrapper'>\n                          <span className='balance-type'>\n                            <img style={{ width: '16px', height: '16px', margin: 'auto', marginTop: '-4px' }} src={`images/USDx@2x.png`} alt=\"\" />\n                            &nbsp;\n                          <FormattedMessage id='USDx_Borrowed_borrow' />\n                          </span>\n                          <span className='balance-amount'>\n                            {this.state.my_borrowed ? format_bn(this.state.my_borrowed, this.state.USDx_decimals, this.decimal_precision) : '-'}\n                          </span>\n                        </div>\n\n\n                        <Tabs className='tab-wrapper' animated={true} size='large' onChange={this.changePane}>\n                          <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '借款' : 'BORROW'} key=\"1\" className='tab-content'>\n                            {\n                              (this.state.i_am_ready && this.state.is_approved) &&\n                              <React.Fragment>\n                                <div className='balance-info'>\n                                  <span className='balance-desc'>\n                                    <FormattedMessage id='USDx_Available_borrow' />\n                                  </span>\n                                  <span className='balance-amount'>\n                                    {this.state.available_to_borrow ? format_bn(this.state.available_to_borrow, this.state.USDx_decimals, this.decimal_precision) : '-'}\n                                    &nbsp;\n                                    {'USDx'}\n                                  </span>\n                                </div>\n                                <div className='input-unit-wrapper'>\n                                  {\n                                    <div className='input-wrapper'>\n                                      <Input\n                                        type='number'\n                                        placeholder={this.placeholder}\n                                        min={0}\n                                        onChange={(e) => handle_borrow_change(e.target.value, this, this.state.USDx_decimals, this.state.available_to_borrow)}\n                                        className='input-number'\n                                        value={this.state.borrow_amount}\n                                      />\n                                      <span className={'max-amount-button-borrow'} onClick={() => { handle_borrow_max(this, this.state.available_to_borrow, this.state.USDx_decimals) }}>\n                                        {'SAFE MAX'}\n                                      </span>\n                                    </div>\n                                  }\n                                  <div className='button-wrapper-borrow'>\n                                    <Button\n                                      size='large'\n                                      className={this.state.is_borrow_enable ? null : 'disable-button'}\n                                      disabled={false}\n                                      onClick={() => { handle_borrow_click(this, this.state.USDx_decimals, address[this.state.net_type]['address_USDx']) }}\n                                    >\n                                      {'borrow'}\n                                    </Button>\n                                  </div>\n                                </div>\n                              </React.Fragment>\n                            }\n                            {\n                              (this.state.i_am_ready && !this.state.is_approved) &&\n                              <div className='approve-section'>\n                                <div className='enable-message'>\n                                  {'Before supplying USDT for the first time, you must enable USDT.'}\n                                </div>\n                                <div className={'button-wrapper'}>\n                                  <Button\n                                    size='large'\n                                    className={''}\n                                    disabled={false}\n                                    onClick={() => { handle_approve(this.state.USDx, this, address[this.state.net_type]['address_mMarket']) }}\n                                  >\n                                    {'ENABLE'}\n                                  </Button>\n                                </div>\n                              </div>\n                            }\n                          </Tabs.TabPane>\n\n\n\n\n\n\n                          <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '偿还' : 'REPAY'} key=\"2\" className='tab-content'>\n                            {\n                              (this.state.i_am_ready && this.state.is_approved) &&\n                              <React.Fragment>\n                                <div className='balance-info'>\n                                  <span className='balance-desc'>\n                                    <FormattedMessage id='USDx_Balance' />\n                                  </span>\n                                  <span className='balance-amount'>\n                                    {this.state.my_balance ? format_bn(this.state.my_balance, this.state.USDx_decimals, this.decimal_precision) : '-'}\n                                    &nbsp;\n                                {'USDx'}\n                                  </span>\n                                </div>\n\n                                <div className='input-unit-wrapper'>\n                                  <div className='input-wrapper'>\n                                    <Input\n                                      type='number'\n                                      placeholder={this.placeholder}\n                                      min={0}\n                                      onChange={(e) => handle_repay_change(e.target.value, this, this.state.USDx_decimals, this.state.my_balance)}\n                                      className='input-number'\n                                      value={this.state.repay_amount}\n                                    />\n                                    <span className={'max-amount-button-borrow'} onClick={() => { handle_repay_max(this, this.state.my_balance, this.state.my_borrowed, this.state.USDx_decimals) }}>\n                                      {'MAX'}\n                                    </span>\n                                  </div>\n\n                                  <div className={'button-wrapper-borrow'}>\n                                    <Button\n                                      size='large'\n                                      className={this.state.is_repay_enable ? null : 'disable-button'}\n                                      disabled={false}\n                                      onClick={() => { handle_repay_click(this, this.state.USDx_decimals, address[this.state.net_type]['address_USDx']) }}\n                                    >\n                                      {'repay'}\n                                    </Button>\n                                  </div>\n                                </div>\n                              </React.Fragment>\n                            }\n                            {\n                              (this.state.i_am_ready && !this.state.is_approved) &&\n                              <div className='approve-section'>\n                                <div className='enable-message'>\n                                  {'Before supplying USDT for the first time, you must enable USDT.'}\n                                </div>\n                                <div className={'button-wrapper'}>\n                                  <Button\n                                    size='large'\n                                    className={''}\n                                    disabled={false}\n                                    onClick={() => { handle_approve(this.state.USDx, this, address[this.state.net_type]['address_mMarket']) }}\n                                  >\n                                    {'ENABLE'}\n                                  </Button>\n                                </div>\n                              </div>\n                            }\n                          </Tabs.TabPane>\n                        </Tabs>\n                      </div>\n\n\n\n\n\n\n\n\n                      {\n                        // <RecordBoard coinType={'USDx'} account={currentAccount} page={'borrow'} />\n                      }\n                      {/* ***** ***** ***** RecordBoard ***** ***** ***** */}\n                      {\n                        this.state.i_am_ready &&\n                        <RecordBoard\n                          account={this.state.my_account}\n                          net_type={this.state.net_type}\n                          decimal={this.state.USDx_decimals}\n                          token={this.token_name}\n                          load_new_history={this.state.load_new_history}\n                          new_web3={this.new_web3}\n                        />\n                      }\n                    </div>\n                  </div>\n                }\n              </div>\n            </div>\n          }\n        </MediaQuery>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default Borrow_usdx;","import React, { Component } from 'react';\nimport InfoSection from '../../component/infoSection/infoSection';\nimport Network from '../../constant.json';\nimport USDX from \"./../../ABIs/USDX.js\";\nimport MoneyMarket from './../../ABIs/MoneyMarket.js';\nimport { toFormatShowNumber, getPercentageFormat, toDoubleThousands, findNetwork, formatBigNumber } from '../../util.js';\nimport './accountInfo.scss';\n\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nclass AccountInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      borrowBalance: 0,\n      borrowBalanceShow: 0,\n      borrowInterestRate: 0,\n      supplyInterestRate: 0,\n      totalSupply: 0,\n      totalBorrowInMoneyMarket: 0,\n      totalBorrowInMoneyMarketUnformat: 0,\n      totalSupplyUSDxInMoneyMarket: 0,\n      totalSupplyWETHInMoneyMarket: 0,\n      availableToBorrow: 0,\n      collateralRatio: 0,\n      collateralRatioShow: 0,\n      usdxBalanceOf: 0,\n      cash: 0,\n      utilizationRate: 0,\n      usdxAssetPrice: 0,\n      WETHAssetPrice: 0,\n      supplyWETHAmount: 0,\n      originationFee: 0,\n      tatol_Supplied: 0\n    }\n    this.web3 = window.web3;\n\n    if (window.web3) {\n      window.web3.currentProvider.enable().then(\n        res => {\n          console.log(this.web3.eth.accounts[0]);\n          // this.componentDidMount_temp();\n          window.web3.version.getNetwork((e, r) => {\n            if (r) {\n              this.setState({\n                NetworkName: r\n              }, () => {\n                this.componentDidMount_temp();\n              })\n            }\n          })\n        }\n      )\n    }\n\n    if (window.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', () => {\n        this.componentDidMount_temp();\n      });\n    }\n  }\n\n\n  // **************8 totalSupply\n  getWETHAssetPrice = () => {\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    let wethAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      wethAddress = Network.Main.WETH;\n    } else if (NetworkName === 'Rinkeby') {\n      wethAddress = Network.Rinkeby.WETH;\n    }\n    MoneyMarket().assetPrices(\n      wethAddress,\n      (err, res1) => {\n        // res1 weth 价格\n        if (res1 !== undefined && res1 !== null) {\n          // console.log('1111111111111111111 weth 价格 -: ', res1);\n          let usdxAddress = '';\n          let NetworkName = findNetwork(this.state.NetworkName);\n          if (NetworkName === 'Main') {\n            usdxAddress = Network.Main.USDx;\n          } else if (NetworkName === 'Rinkeby') {\n            usdxAddress = Network.Rinkeby.USDx;\n          }\n          MoneyMarket().assetPrices(\n            usdxAddress,\n            (err, res2) => {\n              // res2 usdx 价格\n              if (res2 !== undefined && res2 !== null) {\n                // console.log('2222222222222222222 usdx 价格 -: ', res2);\n                if (this.web3.fromWei(res2.toNumber(), \"ether\") !== 0 && res1.toNumber() !== 0) {\n                  this.setState({ WETHAssetPrice: this.web3.fromWei(res1.toNumber(), \"ether\") / this.web3.fromWei(res2.toNumber(), \"ether\") }, () => {\n                    // console.log('33333333333333333 ----- WETHAssetPrice---: ', this.state.WETHAssetPrice);\n                    // 现在去拿 supply WETH Amount\n                    MoneyMarket().getSupplyBalance(\n                      this.web3.eth.accounts[0],\n                      wethAddress,\n                      (err, res3) => {\n                        // res3 是 supply WETH Amount\n                        // console.log('444444444444444444 ----- supply WETH Amount---: ', res3);\n                        if (res3 !== undefined && res3 !== null) {\n                          this.setState({\n                            supplyWETHAmount: this.web3.fromWei(res3.toNumber(), \"ether\"),\n                            totalSupply: this.state.WETHAssetPrice * this.web3.fromWei(res3.toNumber(), \"ether\")\n                          }, () => {\n                            // console.log('5555555555555555 ----- totalSupply----: ', this.state.totalSupply);\n                          });\n                        }\n                      }\n                    );\n                  });\n                }\n              }\n            });\n        }\n      });\n  }\n\n  // ************************* availableToBorrow\n  calculateAccountValuesByAddress = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || MoneyMarket() === undefined) {\n      return;\n    }\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    let wethAddress = '';\n    if (NetworkName === 'Main') {\n      wethAddress = Network.Main.WETH;\n    } else if (NetworkName === 'Rinkeby') {\n      wethAddress = Network.Rinkeby.WETH;\n    }\n    let mmAddress = '';\n    if (NetworkName === 'Main') {\n      mmAddress = Network.Main.MoneyMarket;\n    } else if (NetworkName === 'Rinkeby') {\n      mmAddress = Network.Rinkeby.MoneyMarket;\n    }\n    MoneyMarket().getBorrowBalance(this.web3.eth.accounts[0], usdxAddress, (err, res) => {\n      // res 是 sun_of_borrow 总的borrow （ 借出 ）\n      if (res !== undefined || res !== null) {\n        // console.log('sun_of_borrow:', res);\n        let res_format = formatBigNumber(res);\n        MoneyMarket().assetPrices(wethAddress, (err, res1) => {\n          if (res1 !== undefined && res1 !== null) {\n            MoneyMarket().assetPrices(usdxAddress, (err, res2) => {\n              if (res2 !== undefined && res2 !== null) {\n                this.setState({ WETHAssetPrice: this.web3.fromWei(res1.toNumber(), \"ether\") / this.web3.fromWei(res2.toNumber(), \"ether\") }, () => {\n                  // console.log(this.state.WETHAssetPrice)\n                  MoneyMarket().getSupplyBalance(this.web3.eth.accounts[0], wethAddress, (err, res3) => {\n                    if (res3 !== undefined && res3 !== null) {\n                      this.setState({\n                        supplyWETHAmount: this.web3.fromWei(res3.toNumber(), \"ether\"),\n                        totalSupply: this.state.WETHAssetPrice * this.web3.fromWei(res3.toNumber(), \"ether\")\n                      }, () => {\n                        MoneyMarket().collateralRatio((err, res_ratio) => {\n                          if (res_ratio !== undefined && res_ratio !== null) {\n                            this.setState({ collateralRatioShow: getPercentageFormat(this.web3.fromWei(res_ratio.toNumber(), \"ether\")) })\n                            USDX().balanceOf(mmAddress, (err, res_cash) => {\n                              if (res_cash) {\n                                MoneyMarket().originationFee((err, res_originFee) => {\n                                  let sumofSupplies = this.web3.fromWei(res3.toNumber(), \"ether\") * this.state.WETHAssetPrice;\n                                  let sumofBorrow = res_format;\n                                  let availableToBorrow = (sumofSupplies / this.web3.fromWei(res_ratio.toNumber(), \"ether\")) - sumofBorrow;\n                                  let availableBorrowAmount = Math.min(availableToBorrow, toFormatShowNumber(this.web3.fromWei(res_cash.toNumber(), \"ether\")));\n                                  if (Number(availableBorrowAmount) < 0) {\n                                    availableBorrowAmount = 0;\n                                  }\n                                  // 修改 available_To_Borrow 不同步问题\n                                  if (Number(availableBorrowAmount) === Number(toFormatShowNumber(this.web3.fromWei(res_cash.toNumber(), \"ether\")))) {\n                                    this.setState({ availableToBorrow: toFormatShowNumber(this.web3.fromWei(res_cash.toNumber(), \"ether\")) }, () => {\n                                      // console.log('--- available_to_borrow --- : ', this.state.availableToBorrow);\n                                    });\n                                  } else {\n                                    this.setState({ availableToBorrow: availableBorrowAmount / (1 + Number(formatBigNumber(res_originFee))) }, () => {\n                                      // console.log('--- available_to_borrow --- : ', this.state.availableToBorrow);\n                                    })\n                                  }\n                                });\n                              }\n                            })\n                          }\n                        });\n                      });\n                    }\n                  }\n                  );\n                });\n              }\n            });\n          }\n        });\n      }\n    }\n    )\n  }\n\n  // ********************** borrowBalanceShow\n  getBorrowBalance = () => {\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined) {\n      MoneyMarket().getBorrowBalance(this.web3.eth.accounts[0], usdxAddress, (err, res) => {\n        // let borrowBalance = 0;\n        if (res !== undefined && res !== null) {\n          // console.log(res)\n          // borrowBalance = res.toNumber();\n          this.setState({\n            borrowBalance: this.web3.fromWei(res.toNumber(), \"ether\"),\n            borrowBalanceShow: this.web3.fromWei(res.toNumber(), \"ether\")\n          }, () => {\n            // console.log(this.state.borrowBalance);\n          });\n        }\n      });\n    }\n  };\n\n  // ******************** borrowInterestRate\n  getBorrowInterestRate = () => {\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    MoneyMarket().markets.call(usdxAddress,\n      (err, res) => {\n        if (res !== null && res !== undefined) {\n          this.setState({ borrowInterestRate: getPercentageFormat(this.web3.fromWei(res[7].toNumber(), \"ether\") * 86400 * 365 / 15) })\n        }\n      }\n    );\n  }\n\n\n  componentDidMount_temp = () => {\n\n    setTimeout(() => {\n      this.getWETHAssetPrice();\n      this.getBorrowBalance();\n      this.getBorrowInterestRate();\n      this.calculateAccountValuesByAddress();\n    }, 2000);\n    this.getAddressIntervalBorrow = setInterval(() => {\n      if (true) {\n        this.getWETHAssetPrice();\n        this.getBorrowBalance();\n        this.getBorrowInterestRate();\n        this.calculateAccountValuesByAddress();\n      }\n    }, 1000 * 15);\n  }\n\n\n  render = () => {\n    const accountInfo = [\n      {\n        title: 'Supplied Balance',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : '$' + toDoubleThousands(this.state.totalSupply),\n        page: 'borrow'\n      },\n      {\n        title: 'Borrowed Balance',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : '$' + toDoubleThousands(this.state.borrowBalanceShow),\n        page: 'borrow'\n      },\n      {\n        title: 'Available to Borrow',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : '$' + toDoubleThousands(this.state.availableToBorrow),\n        page: 'borrow'\n      },\n      {\n        title: 'Borrow APR',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : toDoubleThousands(this.state.borrowInterestRate) + '%',\n        page: 'borrow'\n      },\n      {\n        title: 'Collateralization ratio',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : toDoubleThousands(this.state.collateralRatioShow) + '%',\n        page: 'borrow'\n      }\n    ];\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <div className={'account-info-board'}>\n          <div className={'info-board-title'}>\n            <FormattedMessage id='Account_Portfolio' />\n          </div>\n          <div className={'info-board-content'}>\n            <InfoSection accountInfo={accountInfo} currentPage={'borrow'} />\n          </div>\n        </div>\n      </IntlProvider>\n    )\n  }\n}\n\nexport default AccountInfo;","import React, { Component } from 'react';\nimport Header from '../../component/header/header';\nimport RecordBoard from '../../container/recordBoard/recordBoard';\nimport { withMarketInfo } from '../../HOC/withMarketInfo';\nimport AccountInfo from '../../container/accountInfo/accountInfo_borrow';\nimport { Link } from \"react-router-dom\";\nimport MediaQuery from 'react-responsive';\n\nimport './borrow.scss';\n\nimport { Tabs, Input, Button } from 'antd';\nimport {\n  get_tokens_decimals,\n  get_allowance,\n  get_borrow_balance,\n  format_bn,\n  get_my_balance,\n  get_available_to_borrow,\n  handle_borrow_click,\n  handle_borrow_change,\n  handle_repay_change,\n  handle_repay_click,\n  handle_borrow_max,\n  handle_repay_max,\n  handle_approve\n} from '../../util.js';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nimport Web3 from 'web3';\n// tokens ABIs\nlet USDx_abi = require('../../ABIs/USDX_ABI.json');\nlet WETH_abi = require('../../ABIs/WETH_ABI.json');\nlet imBTC_abi = require('../../ABIs/imBTC_ABI.json');\nlet USDT_abi = require('../../ABIs/USDT_ABI.json');\nlet mMarket_abi = require('../../ABIs/moneyMarket.json');\n// tokens address\nlet address = require('../../ABIs/address_map.json');\n// 常量\nlet constant = require('../../ABIs/constant.json');\n\n\nconst WithMarketInfoEnhanced = withMarketInfo(Header);\n\nclass Borrow_usdt extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      is_borrow_enable: true,\n      is_repay_enable: true\n    };\n\n\n    this.new_web3 = window.new_web3 = new Web3(Web3.givenProvider || null);\n    this.bn = this.new_web3.utils.toBN;\n    this.decimal_precision = constant.decimal_precision;\n    this.gas_limit_coefficient = constant.gas_limit_coefficient;\n    this.collateral_rate = constant.collateral_rate;\n\n    this.originationFee = constant.originationFee;\n\n    this.placeholder = 'Amount in USDT';\n    this.img_src = 'USDT';\n    this.token_name = 'USDT';\n\n\n    this.new_web3.eth.net.getNetworkType().then(\n      (net_type) => {\n        let USDx = new this.new_web3.eth.Contract(USDx_abi, address[net_type]['address_USDx']);\n        let WETH = new this.new_web3.eth.Contract(WETH_abi, address[net_type]['address_WETH']);\n        let imBTC = new this.new_web3.eth.Contract(imBTC_abi, address[net_type]['address_imBTC']);\n        let USDT = new this.new_web3.eth.Contract(USDT_abi, address[net_type]['address_USDT']);\n        let mMarket = new this.new_web3.eth.Contract(mMarket_abi, address[net_type]['address_mMarket']);\n\n        console.log(' *** init contract finished *** ');\n\n        this.setState({ net_type: net_type, USDx: USDx, WETH: WETH, imBTC: imBTC, USDT: USDT, mMarket: mMarket }, () => {\n          get_tokens_decimals(this.state.USDx, this.state.WETH, this.state.imBTC, this.state.USDT, this);\n          this.new_web3.givenProvider.enable().then(res_accounts => {\n            this.setState({ my_account: res_accounts[0] }, async () => {\n              console.log('connected: ', this.state.my_account)\n              let is_approved = await get_allowance(this.state.USDT, this.state.my_account, address[net_type]['address_mMarket'], this.bn);\n              console.log('is_approved: ', is_approved)\n              this.setState({ is_approved: is_approved })\n\n              let timer_Next = setInterval(() => {\n                if (!(this.state.USDx_decimals && this.state.WETH_decimals && this.state.imBTC_decimals && this.state.USDT_decimals)) {\n                  console.log('111111111: not get yet...');\n                } else {\n                  console.log('2222222222: i got it...');\n                  clearInterval(timer_Next);\n                  this.setState({ i_am_ready: true })\n\n                  // to do something...\n\n\n\n                }\n              }, 100)\n            })\n          })\n        })\n      }\n    )\n\n  }\n\n\n  componentDidMount = () => {\n    this.timer_get_data = setInterval(() => {\n      if (!this.state.my_account) {\n        console.log('account not available.')\n        return false;\n      }\n      console.log('update new data.')\n      get_available_to_borrow(this.state.mMarket, this.state.USDT, address[this.state.net_type]['address_mMarket'], address[this.state.net_type]['address_USDT'], this.state.my_account, this.collateral_rate, this.originationFee, this);\n      get_borrow_balance(this.state.mMarket, this.state.my_account, address[this.state.net_type]['address_USDT'], this);\n      get_my_balance(this.state.USDT, this.state.my_account, this);\n    }, 3000)\n  }\n\n\n  componentWillUnmount() {\n    clearInterval(this.accountInterval);\n    clearInterval(this.timer_get_data);\n  }\n\n\n  render() {\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <MediaQuery maxWidth={768}>\n          {(match) =>\n            <div className={'borrow-page ' + (match ? 'CM XS ' : 'CM LG ') + ('without-banner')}>\n\n              {/* <WithMarketInfoEnhanced networkName={findNetwork(this.state.NetworkName)} account={window.web3.eth.accounts[0]} login={window.web3.eth.accounts[0]} /> */}\n\n              <div className='redirect-button'>\n                <div className='go-back-button'>\n                  <Link to={'/'}>\n                    <img src={'images/icon_home@2x.png'} alt=\"HOME\" />\n                    <span>\n                      <FormattedMessage id='Home' />\n                    </span>\n                  </Link>\n                </div>\n              </div>\n\n              {/* <AccountInfo networkName={NetworkName} currentPage={'borrow'} account={currentAccount} login={window.web3.eth.accounts[0] ? true : false} /> */}\n\n              {\n                // match && <label className='input-unit-switch'>\n                //   <input type='checkbox' checked={this.state.borrowgroup} onChange={() => this.setState({ borrowgroup: !this.state.borrowgroup })} />\n                //   <span className=\"slider round\"></span>\n                //   <span className=\"supply\">\n                //     <FormattedMessage id='Supply' />\n                //   </span>\n                //   <span className=\"borrow\">\n                //     <FormattedMessage id='Borrow' />\n                //   </span>\n                // </label>\n              }\n\n              <div className='lend-page-wrapper'>\n                {\n                  // (!this.state.borrowgroup || !match) && <div className='supply-group'>\n                  //   <div className='supply-title'>\n                  //     <span className='title-font'>\n                  //       <FormattedMessage id='SUPPLY' />\n                  //     </span>\n                  //   </div>\n                  //   <div className='supply-content' style={{ display: (this.state.isApproved_WETH === 1) || (this.state.not_approve_atfirst_WETH === 1) ? 'block' : 'none' }}>\n                  //     {/* <Borrow_left {...wethProps} father_approve_WETH={this.state.isApproved_WETH} /> */}\n                  //     {/* <RecordBoard coinType={'WETH'} account={currentAccount} page={'borrow'} /> */}\n                  //   </div>\n                  // </div>\n                }\n\n                {\n\n                  <div className='borrow-group'>\n                    <div className='borrow-title-borrow'>\n                      <span className='title-font'>\n                        <FormattedMessage id='BORROW' />\n                      </span>\n                    </div>\n\n                    <div className='borrow-content'>\n                      {/* <Borrow_right {...borrowProps} father_approve_USDx={this.state.isApproved_USDx} /> */}\n\n\n\n\n\n\n\n                      <div className='borrow-input'>\n                        {/* <BalanceInfoWithIcon coin={'USDx'} action={'Borrowed'} login={this.props.login} /> */}\n\n                        <div className='info-wrapper'>\n                          <span className='balance-type'>\n                            <img style={{ width: '16px', height: '16px', margin: 'auto', marginTop: '-4px' }} src={`images/USDx@2x.png`} alt=\"\" />\n                            &nbsp;\n                          <FormattedMessage id='USDx_Borrowed_borrow' />\n                          </span>\n                          <span className='balance-amount'>\n                            {this.state.my_borrowed ? format_bn(this.state.my_borrowed, this.state.USDT_decimals, this.decimal_precision) : '-'}\n                          </span>\n                        </div>\n\n\n                        <Tabs className='tab-wrapper' animated={true} size='large' onChange={this.changePane}>\n                          <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '借款' : 'BORROW'} key=\"1\" className='tab-content'>\n                            {\n                              (this.state.i_am_ready && this.state.is_approved) &&\n                              <React.Fragment>\n                                <div className='balance-info'>\n                                  <span className='balance-desc'>\n                                    <FormattedMessage id='USDx_Available_borrow' />\n                                  </span>\n                                  <span className='balance-amount'>\n                                    {this.state.available_to_borrow ? format_bn(this.state.available_to_borrow, this.state.USDT_decimals, this.decimal_precision) : '-'}\n                                    &nbsp;\n                                    {'USDx'}\n                                  </span>\n                                </div>\n                                <div className='input-unit-wrapper'>\n                                  {\n                                    <div className='input-wrapper'>\n                                      <Input\n                                        type='number'\n                                        placeholder={this.placeholder}\n                                        min={0}\n                                        onChange={(e) => handle_borrow_change(e.target.value, this, this.state.USDT_decimals, this.state.available_to_borrow)}\n                                        className='input-number'\n                                        value={this.state.borrow_amount}\n                                      />\n                                      <span className={'max-amount-button-borrow'} onClick={() => { handle_borrow_max(this, this.state.available_to_borrow, this.state.USDT_decimals) }}>\n                                        {'SAFE MAX'}\n                                      </span>\n                                    </div>\n                                  }\n                                  <div className='button-wrapper-borrow'>\n                                    <Button\n                                      size='large'\n                                      className={this.state.is_borrow_enable ? null : 'disable-button'}\n                                      disabled={false}\n                                      onClick={() => { handle_borrow_click(this, this.state.USDT_decimals, address[this.state.net_type]['address_USDT']) }}\n                                    >\n                                      {'borrow'}\n                                    </Button>\n                                  </div>\n                                </div>\n                              </React.Fragment>\n                            }\n                            {\n                              (this.state.i_am_ready && !this.state.is_approved) &&\n                              <div className='approve-section'>\n                                <div className='enable-message'>\n                                  {'Before supplying USDT for the first time, you must enable USDT.'}\n                                </div>\n                                <div className={'button-wrapper'}>\n                                  <Button\n                                    size='large'\n                                    className={''}\n                                    disabled={false}\n                                    onClick={() => { handle_approve(this.state.USDT, this, address[this.state.net_type]['address_mMarket']) }}\n                                  >\n                                    {'ENABLE'}\n                                  </Button>\n                                </div>\n                              </div>\n                            }\n                          </Tabs.TabPane>\n\n\n\n\n\n\n                          <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '偿还' : 'REPAY'} key=\"2\" className='tab-content'>\n                            {\n                              (this.state.i_am_ready && this.state.is_approved) &&\n                              <React.Fragment>\n                                <div className='balance-info'>\n                                  <span className='balance-desc'>\n                                    <FormattedMessage id='USDx_Balance' />\n                                  </span>\n                                  <span className='balance-amount'>\n                                    {this.state.my_balance ? format_bn(this.state.my_balance, this.state.USDT_decimals, this.decimal_precision) : '-'}\n                                    &nbsp;\n                                {'USDx'}\n                                  </span>\n                                </div>\n\n                                <div className='input-unit-wrapper'>\n                                  <div className='input-wrapper'>\n                                    <Input\n                                      type='number'\n                                      placeholder={this.placeholder}\n                                      min={0}\n                                      onChange={(e) => handle_repay_change(e.target.value, this, this.state.USDT_decimals, this.state.my_balance)}\n                                      className='input-number'\n                                      value={this.state.repay_amount}\n                                    />\n                                    <span className={'max-amount-button-borrow'} onClick={() => { handle_repay_max(this, this.state.my_balance, this.state.my_borrowed, this.state.USDT_decimals) }}>\n                                      {'MAX'}\n                                    </span>\n                                  </div>\n\n                                  <div className={'button-wrapper-borrow'}>\n                                    <Button\n                                      size='large'\n                                      className={this.state.is_repay_enable ? null : 'disable-button'}\n                                      disabled={false}\n                                      onClick={() => { handle_repay_click(this, this.state.USDT_decimals, address[this.state.net_type]['address_USDT']) }}\n                                    >\n                                      {'repay'}\n                                    </Button>\n                                  </div>\n                                </div>\n                              </React.Fragment>\n                            }\n                            {\n                              (this.state.i_am_ready && !this.state.is_approved) &&\n                              <div className='approve-section'>\n                                <div className='enable-message'>\n                                  {'Before supplying USDT for the first time, you must enable USDT.'}\n                                </div>\n                                <div className={'button-wrapper'}>\n                                  <Button\n                                    size='large'\n                                    className={''}\n                                    disabled={false}\n                                    onClick={() => { handle_approve(this.state.USDT, this, address[this.state.net_type]['address_mMarket']) }}\n                                  >\n                                    {'ENABLE'}\n                                  </Button>\n                                </div>\n                              </div>\n                            }\n                          </Tabs.TabPane>\n                        </Tabs>\n                      </div>\n\n\n\n\n\n\n\n\n                      {\n                        // <RecordBoard coinType={'USDx'} account={currentAccount} page={'borrow'} />\n                      }\n                      {/* ***** ***** ***** RecordBoard ***** ***** ***** */}\n                      {\n                        this.state.i_am_ready &&\n                        <RecordBoard\n                          account={this.state.my_account}\n                          net_type={this.state.net_type}\n                          decimal={this.state.USDT_decimals}\n                          token={this.token_name}\n                          load_new_history={this.state.load_new_history}\n                          new_web3={this.new_web3}\n                        />\n                      }\n                    </div>\n                  </div>\n                }\n              </div>\n            </div>\n          }\n        </MediaQuery>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default Borrow_usdt;","import React, { Component } from 'react';\nimport Header from '../../component/header/header';\nimport RecordBoard from '../../container/recordBoard/recordBoard';\nimport { withMarketInfo } from '../../HOC/withMarketInfo';\nimport AccountInfo from '../../container/accountInfo/accountInfo_borrow';\nimport { Link } from \"react-router-dom\";\nimport Network from '../../constant.json';\nimport MediaQuery from 'react-responsive';\nimport './borrow.scss';\n\n\nimport {\n  findNetwork,\n  getLoginStatusKey,\n  get_tokens_decimals,\n  format_bn,\n  get_available_to_borrow,\n  get_borrow_balance,\n  get_allowance,\n  handle_approve,\n  handle_borrow_change,\n  handle_borrow_click,\n  handle_repay_click,\n  handle_repay_change,\n  handle_repay_max\n} from '../../util.js';\n\nimport {\n  get_my_ETH,\n  get_my_WETH,\n  handle_wrap_change,\n  handle_wrap_click,\n  handle_unwrap_change,\n  handle_unwrap_click\n} from '../../util-weth';\n\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nimport { Tabs, Button, InputNumber, Input } from 'antd';\n\n\nimport Web3 from 'web3';\n\n\n// tokens ABIs\nlet USDx_abi = require('../../ABIs/USDX_ABI.json');\nlet WETH_abi = require('../../ABIs/WETH_ABI.json');\nlet imBTC_abi = require('../../ABIs/imBTC_ABI.json');\nlet USDT_abi = require('../../ABIs/USDT_ABI.json');\nlet mMarket_abi = require('../../ABIs/moneyMarket.json');\n// tokens address\nlet address = require('../../ABIs/address_map.json');\n// 常量\nlet constant = require('../../ABIs/constant.json');\n\n\nclass Borrow_weth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      is_borrow_enable: true,\n      is_repay_enable: true,\n      is_wrap_enable: true,\n      is_unwrap_enable: true\n    };\n\n    this.new_web3 = window.new_web3 = new Web3(Web3.givenProvider || null);\n    this.bn = this.new_web3.utils.toBN;\n\n    this.decimal_precision = constant.decimal_precision;\n    this.gas_limit_coefficient = constant.gas_limit_coefficient;\n    this.collateral_rate = constant.collateral_rate;\n    this.originationFee = constant.originationFee;\n\n    this.placeholder = 'Amount in WETH';\n    this.img_src = 'WETH';\n    this.token_name = 'WETH';\n\n    this.new_web3.eth.net.getNetworkType().then(\n      (net_type) => {\n        let USDx = new this.new_web3.eth.Contract(USDx_abi, address[net_type]['address_USDx']);\n        let WETH = new this.new_web3.eth.Contract(WETH_abi, address[net_type]['address_WETH']);\n        let imBTC = new this.new_web3.eth.Contract(imBTC_abi, address[net_type]['address_imBTC']);\n        let USDT = new this.new_web3.eth.Contract(USDT_abi, address[net_type]['address_USDT']);\n        let mMarket = new this.new_web3.eth.Contract(mMarket_abi, address[net_type]['address_mMarket']);\n\n        console.log(' *** init contract finished *** ');\n\n        this.setState({\n          net_type: net_type, USDx: USDx, WETH: WETH, imBTC: imBTC, USDT: USDT, mMarket: mMarket\n        }, () => {\n          get_tokens_decimals(this.state.USDx, this.state.WETH, this.state.imBTC, this.state.USDT, this);\n          this.new_web3.givenProvider.enable().then(res_accounts => {\n            this.setState({ my_account: res_accounts[0] }, async () => {\n\n              console.log('connected: ', this.state.my_account)\n              let is_approved = await get_allowance(this.state.WETH, this.state.my_account, address[net_type]['address_mMarket'], this.bn);\n              console.log('is_approved: ', is_approved)\n\n              this.setState({ is_approved: is_approved })\n\n              let timer_Next = setInterval(() => {\n                if (!(this.state.USDx_decimals && this.state.WETH_decimals && this.state.imBTC_decimals && this.state.USDT_decimals)) {\n                  console.log('111111111: not get yet...');\n                } else {\n                  console.log('2222222222: i got it...');\n                  clearInterval(timer_Next);\n                  this.setState({ i_am_ready: true })\n\n                  // to do something...\n\n\n\n                }\n              }, 100)\n            })\n          })\n        })\n      }\n    )\n  }\n\n\n\n  componentDidMount = () => {\n    this.timer_get_data = setInterval(() => {\n      if (!this.state.my_account) {\n        console.log('account not ailableav')\n        return false;\n      }\n\n\n      get_my_ETH(this);\n      get_my_WETH(this);\n      get_available_to_borrow(this.state.mMarket, this.state.WETH, address[this.state.net_type]['address_mMarket'], address[this.state.net_type]['address_WETH'], this.state.my_account, this.collateral_rate, this.originationFee, this);\n      get_borrow_balance(this.state.mMarket, this.state.my_account, address[this.state.net_type]['address_WETH'], this);\n    }, 3000)\n\n  }\n\n  componentWillUnmount = () => {\n    if (this.timer_Next) {\n      clearInterval(this.timer_Next)\n    }\n    clearInterval(this.timer_get_data)\n  }\n\n\n  render() {\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <MediaQuery maxWidth={768}>\n          {(match) =>\n            <div className={'borrow-page ' + (match ? 'CM XS ' : 'CM LG ') + ('without-banner')}>\n\n\n              <div className='redirect-button'>\n                <div className='go-back-button'>\n                  <Link to={'/'}>\n                    <img src={'images/icon_home@2x.png'} alt=\"HOME\" />\n                    <FormattedMessage id='Home' />\n                  </Link>\n                </div>\n              </div>\n\n              {/* <AccountInfo networkName={NetworkName} currentPage={'borrow'} account={currentAccount} login={window.web3.eth.accounts[0] ? true : false} /> */}\n\n              <div className='lend-page-wrapper'>\n\n                <div className='borrow-group'>\n                  <div className='borrow-title-borrow'>\n                    <span className='title-font'>\n                      <FormattedMessage id='BORROW' />\n                    </span>\n                  </div>\n                  <div className='borrow-content' style={{}}>\n                    <div className='borrow-input'>\n                      {/* <BalanceInfoWithIcon coin={'WETH'} action={'Supplied'} login={window.web3.eth.accounts[0] ? true : false} /> */}\n                      <div className='info-wrapper'>\n                        <span className='balance-type'>\n                          <img style={{ width: '16px', height: '16px', margin: 'auto', marginTop: '-4px' }} src={`images/WETH@2x.png`} alt=\"\" />\n                          &nbsp;\n                            {/* <FormattedMessage id='WETH_Supplied' /> */}\n                          已经借款\n                          </span>\n                        <span className='balance-amount'>\n                          {this.state.my_borrowed ? format_bn(this.state.my_borrowed, this.state.WETH_decimals, 2) : '-'}\n                        </span>\n                      </div>\n\n\n                      <Tabs className='tab-wrapper' animated={true} size='large' onChange={this.changePane}>\n                        <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '借款' : 'BORROW'} key=\"1\" className='tab-content'>\n                          {\n                            (this.state.i_am_ready && this.state.is_approved) &&\n                            <React.Fragment>\n                              <div className='balance-info'>\n                                <span className='balance-desc'>\n                                  <FormattedMessage id='ETH_Balance' />\n                                </span>\n                                <span className='balance-amount'>\n                                  {this.state.my_ETH ? format_bn(this.state.my_ETH, 18, 2) : '-'}\n                                  &nbsp;ETH\n                                  </span>\n                              </div>\n                              <div className='input-wrap-unit-wrapper'>\n                                <div className='wrap-input-wrapper'>\n                                  <div className='input-wrapper'>\n                                    <Input\n                                      type='number'\n                                      placeholder={'Ether to Wrap'}\n                                      min={0}\n                                      value={this.state.wrap_amount}\n                                      onChange={(e) => handle_wrap_change(this, e.target.value, this.state.my_ETH)}\n                                      className='input-number'\n                                    />\n                                  </div>\n                                  <div className='button-wrapper'>\n                                    <Button\n                                      size='large'\n                                      className={this.state.is_wrap_enable ? null : 'disable-button'}\n                                      onClick={() => handle_wrap_click(this)}\n                                    >\n                                      wrap\n                                      </Button>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className='input-unwrap-unit-wrapper'>\n                                <div className='input-wrapper'>\n                                  <Input\n                                    type='number'\n                                    placeholder={'WETH to Unwrap'}\n                                    min={0}\n                                    value={this.state.unwrap_amount}\n                                    onChange={(e) => handle_unwrap_change(this, e.target.value, this.state.my_balance)}\n                                    className='input-number'\n                                  />\n                                  {/* <span className={this.state.unwrapMaxClassName} onClick={this.state.unwrapInputDisabled ? '' : this.handleunwrapMax}>MAX</span> */}\n                                </div>\n                                <div className='button-wrapper'>\n                                  <Button\n                                    size='large'\n                                    className={this.state.is_unwrap_enable ? null : 'disable-button'}\n                                    disabled={false}\n                                    onClick={() => handle_unwrap_click(this)}\n                                  >\n                                    unwrap\n                                    </Button>\n                                </div>\n                              </div>\n                              <div className='balance-info'>\n                                <span className='balance-desc'>\n                                  {/* <FormattedMessage id='WETH_Balance' /> */}\n                                  weth 可借数量\n                                  </span>\n                                <span className='balance-amount'>\n                                  {this.state.available_to_borrow ? format_bn(this.state.available_to_borrow, 18, 2) : '-'}\n                                  &nbsp;WETH\n                                  </span>\n                              </div>\n                              <div className='input-unit-wrapper'>\n                                <div className='input-wrapper'>\n                                  <Input\n                                    type='number'\n                                    placeholder={'Amount in WETH'}\n                                    min={0}\n                                    value={this.state.borrow_amount}\n                                    onChange={(e) => handle_borrow_change(e.target.value, this, this.state.WETH_decimals, this.state.available_to_borrow)}\n                                    className='input-number'\n                                    disabled={false}\n                                  />\n                                  {/* <span className={this.state.maxClassName} onClick={this.state.supplyInputDisabled ? '' : this.handleSupplyMax}>MAX</span> */}\n                                </div>\n                                <div className={'button-wrapper-borrow'}>\n                                  <Button\n                                    size='large'\n                                    className={this.state.is_borrow_enable ? null : 'disable-button'}\n                                    disabled={false}\n                                    onClick={() => { handle_borrow_click(this, this.state.WETH_decimals, address[this.state.net_type]['address_WETH']) }}\n                                  >\n                                    {'borrow'}\n                                  </Button>\n                                </div>\n                              </div>\n                            </React.Fragment>\n                          }\n                          {\n                            (this.state.i_am_ready && !this.state.is_approved) &&\n                            <div className='approve-section'>\n                              <div className='enable-message'>\n                                {'Before supplying USDT for the first time, you must enable USDT.'}\n                              </div>\n                              <div className={'button-wrapper'}>\n                                <Button\n                                  size='large'\n                                  className={''}\n                                  disabled={false}\n                                  onClick={() => { handle_approve(this.state.WETH, this, address[this.state.net_type]['address_mMarket']) }}\n                                >\n                                  {'ENABLE'}\n                                </Button>\n                              </div>\n                            </div>\n                          }\n                        </Tabs.TabPane>\n\n\n\n\n\n\n                        <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '偿还' : 'REPAY'} key=\"2\" className='tab-content'>\n                          {\n                            (this.state.i_am_ready && this.state.is_approved) &&\n                            <React.Fragment>\n                              <div className='balance-info'>\n                                <span className='balance-desc'>\n                                  {/* <FormattedMessage id='WETH_Available' /> */}\n                                  weth 余额\n                              </span>\n                                <span className='balance-amount'>\n                                  {this.state.my_balance ? format_bn(this.state.my_balance, this.state.WETH_decimals, 2) : '-'}\n                                  &nbsp;WETH\n                              </span>\n                              </div>\n                              <div className='input-unit-wrapper'>\n                                <div className='input-wrapper'>\n                                  <Input\n                                    type='number'\n                                    placeholder={'Amount in WETH'}\n                                    min={0}\n                                    value={this.state.repay_amount}\n                                    onChange={(e) => handle_repay_change(e.target.value, this, this.state.WETH_decimals, this.state.my_balance)}\n                                    className='input-number'\n                                    disabled={false}\n                                  />\n                                  <span className={'max-amount-button-borrow'} onClick={() => { handle_repay_max(this, this.state.my_balance, this.state.my_borrowed, this.state.WETH_decimals) }}>\n                                    {'MAX'}\n                                  </span>\n                                </div>\n                                <div className={'button-wrapper-borrow'}>\n                                  <Button\n                                    size='large'\n                                    className={this.state.is_repay_enable ? null : 'disable-button'}\n                                    disabled={false}\n                                    onClick={() => { handle_repay_click(this, this.state.WETH_decimals, address[this.state.net_type]['address_WETH']) }}\n                                  >\n                                    {'repay'}\n                                  </Button>\n                                </div>\n                              </div>\n                            </React.Fragment>\n                          }\n                          {\n                            (this.state.i_am_ready && !this.state.is_approved) &&\n                            <div className='approve-section'>\n                              <div className='enable-message'>\n                                {'Before supplying USDT for the first time, you must enable USDT.'}\n                              </div>\n                              <div className={'button-wrapper'}>\n                                <Button\n                                  size='large'\n                                  className={''}\n                                  disabled={false}\n                                  onClick={() => { handle_approve(this.state.WETH, this, address[this.state.net_type]['address_mMarket']) }}\n                                >\n                                  {'ENABLE'}\n                                </Button>\n                              </div>\n                            </div>\n                          }\n                        </Tabs.TabPane>\n                      </Tabs>\n                    </div>\n\n                    {/* ***** ***** ***** RecordBoard ***** ***** ***** */}\n                    {\n                      this.state.i_am_ready &&\n                      <RecordBoard\n                        account={this.state.my_account}\n                        net_type={this.state.net_type}\n                        decimal={18}\n                        token={this.token_name}\n                        load_new_history={this.state.load_new_history}\n                        new_web3={this.new_web3}\n                      />\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n        </MediaQuery>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default Borrow_weth;","import React, { Component } from 'react';\nimport Header from '../../component/header/header';\nimport RecordBoard from '../../container/recordBoard/recordBoard';\nimport { withMarketInfo } from '../../HOC/withMarketInfo';\nimport AccountInfo from '../../container/accountInfo/accountInfo_borrow';\nimport { Link } from \"react-router-dom\";\nimport MediaQuery from 'react-responsive';\n\nimport './borrow.scss';\n\nimport { Tabs, Input, Button } from 'antd';\nimport {\n  get_tokens_decimals,\n  get_allowance,\n  get_borrow_balance,\n  format_bn,\n  get_my_balance,\n  get_available_to_borrow,\n  handle_borrow_click,\n  handle_borrow_change,\n  handle_repay_change,\n  handle_repay_click,\n  handle_borrow_max,\n  handle_repay_max,\n  handle_approve\n} from '../../util.js';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nimport Web3 from 'web3';\n// tokens ABIs\nlet USDx_abi = require('../../ABIs/USDX_ABI.json');\nlet WETH_abi = require('../../ABIs/WETH_ABI.json');\nlet imBTC_abi = require('../../ABIs/imBTC_ABI.json');\nlet USDT_abi = require('../../ABIs/USDT_ABI.json');\nlet mMarket_abi = require('../../ABIs/moneyMarket.json');\n// tokens address\nlet address = require('../../ABIs/address_map.json');\n// 常量\nlet constant = require('../../ABIs/constant.json');\n\n\nconst WithMarketInfoEnhanced = withMarketInfo(Header);\n\nclass Borrow_imbtc extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      is_borrow_enable: true,\n      is_repay_enable: true\n    };\n\n\n    this.new_web3 = window.new_web3 = new Web3(Web3.givenProvider || null);\n    this.bn = this.new_web3.utils.toBN;\n    this.decimal_precision = constant.decimal_precision;\n    this.gas_limit_coefficient = constant.gas_limit_coefficient;\n    this.collateral_rate = constant.collateral_rate;\n\n    this.originationFee = constant.originationFee;\n\n    this.placeholder = 'Amount in imBTC';\n    this.img_src = 'imBTC';\n    this.token_name = 'imBTC';\n\n\n    this.new_web3.eth.net.getNetworkType().then(\n      (net_type) => {\n        let USDx = new this.new_web3.eth.Contract(USDx_abi, address[net_type]['address_USDx']);\n        let WETH = new this.new_web3.eth.Contract(WETH_abi, address[net_type]['address_WETH']);\n        let imBTC = new this.new_web3.eth.Contract(imBTC_abi, address[net_type]['address_imBTC']);\n        let USDT = new this.new_web3.eth.Contract(USDT_abi, address[net_type]['address_USDT']);\n        let mMarket = new this.new_web3.eth.Contract(mMarket_abi, address[net_type]['address_mMarket']);\n\n        console.log(' *** init contract finished *** ');\n\n        this.setState({ net_type: net_type, USDx: USDx, WETH: WETH, imBTC: imBTC, USDT: USDT, mMarket: mMarket }, () => {\n          get_tokens_decimals(this.state.USDx, this.state.WETH, this.state.imBTC, this.state.USDT, this);\n          this.new_web3.givenProvider.enable().then(res_accounts => {\n            this.setState({ my_account: res_accounts[0] }, async () => {\n              console.log('connected: ', this.state.my_account)\n              let is_approved = await get_allowance(this.state.imBTC, this.state.my_account, address[net_type]['address_mMarket'], this.bn);\n              console.log('is_approved: ', is_approved)\n              this.setState({ is_approved: is_approved })\n\n              let timer_Next = setInterval(() => {\n                if (!(this.state.USDx_decimals && this.state.WETH_decimals && this.state.imBTC_decimals && this.state.USDT_decimals)) {\n                  console.log('111111111: not get yet...');\n                } else {\n                  console.log('2222222222: i got it...');\n                  clearInterval(timer_Next);\n                  this.setState({ i_am_ready: true })\n\n                  // to do something...\n\n\n\n                }\n              }, 100)\n            })\n          })\n        })\n      }\n    )\n\n  }\n\n\n  componentDidMount = () => {\n    this.timer_get_data = setInterval(() => {\n      if (!this.state.my_account) {\n        console.log('account not available.')\n        return false;\n      }\n      console.log('update new data.')\n      get_available_to_borrow(this.state.mMarket, this.state.imBTC, address[this.state.net_type]['address_mMarket'], address[this.state.net_type]['address_imBTC'], this.state.my_account, this.collateral_rate, this.originationFee, this);\n      get_borrow_balance(this.state.mMarket, this.state.my_account, address[this.state.net_type]['address_imBTC'], this);\n      get_my_balance(this.state.imBTC, this.state.my_account, this);\n    }, 3000)\n  }\n\n\n  componentWillUnmount() {\n    clearInterval(this.accountInterval);\n    clearInterval(this.timer_get_data);\n  }\n\n\n  render() {\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <MediaQuery maxWidth={768}>\n          {(match) =>\n            <div className={'borrow-page ' + (match ? 'CM XS ' : 'CM LG ') + ('without-banner')}>\n\n              {/* <WithMarketInfoEnhanced networkName={findNetwork(this.state.NetworkName)} account={window.web3.eth.accounts[0]} login={window.web3.eth.accounts[0]} /> */}\n\n              <div className='redirect-button'>\n                <div className='go-back-button'>\n                  <Link to={'/'}>\n                    <img src={'images/icon_home@2x.png'} alt=\"HOME\" />\n                    <span>\n                      <FormattedMessage id='Home' />\n                    </span>\n                  </Link>\n                </div>\n              </div>\n\n              {/* <AccountInfo networkName={NetworkName} currentPage={'borrow'} account={currentAccount} login={window.web3.eth.accounts[0] ? true : false} /> */}\n\n              {\n                // match && <label className='input-unit-switch'>\n                //   <input type='checkbox' checked={this.state.borrowgroup} onChange={() => this.setState({ borrowgroup: !this.state.borrowgroup })} />\n                //   <span className=\"slider round\"></span>\n                //   <span className=\"supply\">\n                //     <FormattedMessage id='Supply' />\n                //   </span>\n                //   <span className=\"borrow\">\n                //     <FormattedMessage id='Borrow' />\n                //   </span>\n                // </label>\n              }\n\n              <div className='lend-page-wrapper'>\n                {\n                  // (!this.state.borrowgroup || !match) && <div className='supply-group'>\n                  //   <div className='supply-title'>\n                  //     <span className='title-font'>\n                  //       <FormattedMessage id='SUPPLY' />\n                  //     </span>\n                  //   </div>\n                  //   <div className='supply-content' style={{ display: (this.state.isApproved_WETH === 1) || (this.state.not_approve_atfirst_WETH === 1) ? 'block' : 'none' }}>\n                  //     {/* <Borrow_left {...wethProps} father_approve_WETH={this.state.isApproved_WETH} /> */}\n                  //     {/* <RecordBoard coinType={'WETH'} account={currentAccount} page={'borrow'} /> */}\n                  //   </div>\n                  // </div>\n                }\n\n                {\n\n                  <div className='borrow-group'>\n                    <div className='borrow-title-borrow'>\n                      <span className='title-font'>\n                        <FormattedMessage id='BORROW' />\n                      </span>\n                    </div>\n\n                    <div className='borrow-content'>\n                      {/* <Borrow_right {...borrowProps} father_approve_USDx={this.state.isApproved_USDx} /> */}\n\n\n\n\n\n\n\n                      <div className='borrow-input'>\n                        {/* <BalanceInfoWithIcon coin={'USDx'} action={'Borrowed'} login={this.props.login} /> */}\n\n                        <div className='info-wrapper'>\n                          <span className='balance-type'>\n                            <img style={{ width: '16px', height: '16px', margin: 'auto', marginTop: '-4px' }} src={`images/USDx@2x.png`} alt=\"\" />\n                            &nbsp;\n                          <FormattedMessage id='USDx_Borrowed_borrow' />\n                          </span>\n                          <span className='balance-amount'>\n                            {this.state.my_borrowed ? format_bn(this.state.my_borrowed, this.state.imBTC_decimals, this.decimal_precision) : '-'}\n                          </span>\n                        </div>\n\n\n                        <Tabs className='tab-wrapper' animated={true} size='large' onChange={this.changePane}>\n                          <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '借款' : 'BORROW'} key=\"1\" className='tab-content'>\n                            {\n                              (this.state.i_am_ready && this.state.is_approved) &&\n                              <React.Fragment>\n                                <div className='balance-info'>\n                                  <span className='balance-desc'>\n                                    <FormattedMessage id='USDx_Available_borrow' />\n                                  </span>\n                                  <span className='balance-amount'>\n                                    {this.state.available_to_borrow ? format_bn(this.state.available_to_borrow, this.state.imBTC_decimals, this.decimal_precision) : '-'}\n                                    &nbsp;\n                                    {'USDx'}\n                                  </span>\n                                </div>\n                                <div className='input-unit-wrapper'>\n                                  {\n                                    <div className='input-wrapper'>\n                                      <Input\n                                        type='number'\n                                        placeholder={this.placeholder}\n                                        min={0}\n                                        onChange={(e) => handle_borrow_change(e.target.value, this, this.state.imBTC_decimals, this.state.available_to_borrow)}\n                                        className='input-number'\n                                        value={this.state.borrow_amount}\n                                      />\n                                      <span className={'max-amount-button-borrow'} onClick={() => { handle_borrow_max(this, this.state.available_to_borrow, this.state.imBTC_decimals) }}>\n                                        {'SAFE MAX'}\n                                      </span>\n                                    </div>\n                                  }\n                                  <div className='button-wrapper-borrow'>\n                                    <Button\n                                      size='large'\n                                      className={this.state.is_borrow_enable ? null : 'disable-button'}\n                                      disabled={false}\n                                      onClick={() => { handle_borrow_click(this, this.state.imBTC_decimals, address[this.state.net_type]['address_imBTC']) }}\n                                    >\n                                      {'borrow'}\n                                    </Button>\n                                  </div>\n                                </div>\n                              </React.Fragment>\n                            }\n                            {\n                              (this.state.i_am_ready && !this.state.is_approved) &&\n                              <div className='approve-section'>\n                                <div className='enable-message'>\n                                  {'Before supplying USDT for the first time, you must enable USDT.'}\n                                </div>\n                                <div className={'button-wrapper'}>\n                                  <Button\n                                    size='large'\n                                    className={''}\n                                    disabled={false}\n                                    onClick={() => { handle_approve(this.state.imBTC, this, address[this.state.net_type]['address_mMarket']) }}\n                                  >\n                                    {'ENABLE'}\n                                  </Button>\n                                </div>\n                              </div>\n                            }\n                          </Tabs.TabPane>\n\n\n\n\n\n\n                          <Tabs.TabPane tab={navigator.language === 'zh-CN' ? '偿还' : 'REPAY'} key=\"2\" className='tab-content'>\n                            {\n                              (this.state.i_am_ready && this.state.is_approved) &&\n                              <React.Fragment>\n                                <div className='balance-info'>\n                                  <span className='balance-desc'>\n                                    <FormattedMessage id='USDx_Balance' />\n                                  </span>\n                                  <span className='balance-amount'>\n                                    {this.state.my_balance ? format_bn(this.state.my_balance, this.state.imBTC_decimals, this.decimal_precision) : '-'}\n                                    &nbsp;\n                                {'USDx'}\n                                  </span>\n                                </div>\n\n                                <div className='input-unit-wrapper'>\n                                  <div className='input-wrapper'>\n                                    <Input\n                                      type='number'\n                                      placeholder={this.placeholder}\n                                      min={0}\n                                      onChange={(e) => handle_repay_change(e.target.value, this, this.state.imBTC_decimals, this.state.my_balance)}\n                                      className='input-number'\n                                      value={this.state.repay_amount}\n                                    />\n                                    <span className={'max-amount-button-borrow'} onClick={() => { handle_repay_max(this, this.state.my_balance, this.state.my_borrowed, this.state.imBTC_decimals) }}>\n                                      {'MAX'}\n                                    </span>\n                                  </div>\n\n                                  <div className={'button-wrapper-borrow'}>\n                                    <Button\n                                      size='large'\n                                      className={this.state.is_repay_enable ? null : 'disable-button'}\n                                      disabled={false}\n                                      onClick={() => { handle_repay_click(this, this.state.imBTC_decimals, address[this.state.net_type]['address_imBTC']) }}\n                                    >\n                                      {'repay'}\n                                    </Button>\n                                  </div>\n                                </div>\n                              </React.Fragment>\n                            }\n                            {\n                              (this.state.i_am_ready && !this.state.is_approved) &&\n                              <div className='approve-section'>\n                                <div className='enable-message'>\n                                  {'Before supplying USDT for the first time, you must enable USDT.'}\n                                </div>\n                                <div className={'button-wrapper'}>\n                                  <Button\n                                    size='large'\n                                    className={''}\n                                    disabled={false}\n                                    onClick={() => { handle_approve(this.state.imBTC, this, address[this.state.net_type]['address_mMarket']) }}\n                                  >\n                                    {'ENABLE'}\n                                  </Button>\n                                </div>\n                              </div>\n                            }\n                          </Tabs.TabPane>\n                        </Tabs>\n                      </div>\n\n\n\n\n\n\n\n\n                      {\n                        // <RecordBoard coinType={'USDx'} account={currentAccount} page={'borrow'} />\n                      }\n                      {/* ***** ***** ***** RecordBoard ***** ***** ***** */}\n                      {\n                        this.state.i_am_ready &&\n                        <RecordBoard\n                          account={this.state.my_account}\n                          net_type={this.state.net_type}\n                          decimal={this.state.imBTC_decimals}\n                          token={this.token_name}\n                          load_new_history={this.state.load_new_history}\n                          new_web3={this.new_web3}\n                        />\n                      }\n                    </div>\n                  </div>\n                }\n              </div>\n            </div>\n          }\n        </MediaQuery>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default Borrow_imbtc;","import React, { Component } from 'react';\nimport './App.scss';\nimport { Alert } from 'antd';\nimport { Route, Switch } from \"react-router-dom\";\nimport Main from './pages/main/main';\nimport MediaQuery from 'react-responsive';\n\n\nimport Home from './pages/home/home';\nimport Web3 from 'web3';\n\n\nimport Supply_usdx from './pages/supply/supply-usdx';\nimport Supply_usdt from './pages/supply/supply-usdt';\nimport Supply_imbtc from './pages/supply/supply-imbtc';\nimport Supply_weth from './pages/supply/supply-weth';\n\nimport Borrow_usdx from './pages/borrow/borrow-usdx';\nimport Borrow_usdt from './pages/borrow/borrow-usdt';\nimport Borrow_weth from './pages/borrow/borrow-weth';\nimport Borrow_imbtc from './pages/borrow/borrow-imbtc';\n\nimport { findNetwork, saveLoginStatus, getLoginStatusKey, getPercentageFormat, get_tokens_decimals, format_bn } from './util.js';\n\nconst mainnetOrRinkebyIconAlert = <img style={{ margin: 'auto' }} src={`images/alert_icon.png`} alt=\"\" />;\nconst noteIconAlert = <img style={{ margin: 'auto' }} src={`images/note_alert.png`} alt=\"\" />;\n\n// tokens ABIs\nlet USDx_abi = require('./ABIs/USDX_ABI.json');\nlet WETH_abi = require('./ABIs/WETH_ABI.json');\nlet imBTC_abi = require('./ABIs/imBTC_ABI.json');\nlet USDT_abi = require('./ABIs/USDT_ABI.json');\nlet mMarket_abi = require('./ABIs/moneyMarket.json');\n// tokens address\nlet address = require('./ABIs/address_map.json');\n// 常量\nlet constant = require('./ABIs/constant.json');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      my_supply: null,\n      my_borrow: null\n    }\n\n    this.new_web3 = window.new_web3 = new Web3(Web3.givenProvider || null);\n    this.bn = this.new_web3.utils.toBN;\n\n    this.decimal_precision = constant.decimal_precision;\n    this.gas_limit_coefficient = constant.gas_limit_coefficient;\n    this.collateral_rate = constant.collateral_rate;\n    this.originationFee = constant.originationFee;\n\n    this.new_web3.eth.net.getNetworkType().then(\n      (net_type) => {\n        let USDx = new this.new_web3.eth.Contract(USDx_abi, address[net_type]['address_USDx']);\n        let WETH = new this.new_web3.eth.Contract(WETH_abi, address[net_type]['address_WETH']);\n        let imBTC = new this.new_web3.eth.Contract(imBTC_abi, address[net_type]['address_imBTC']);\n        let USDT = new this.new_web3.eth.Contract(USDT_abi, address[net_type]['address_USDT']);\n        let mMarket = new this.new_web3.eth.Contract(mMarket_abi, address[net_type]['address_mMarket']);\n\n        console.log(' *** init contract finished *** ');\n\n        this.setState({\n          net_type: net_type, USDx: USDx, WETH: WETH, imBTC: imBTC, USDT: USDT, mMarket: mMarket\n        }, () => {\n          get_tokens_decimals(this.state.USDx, this.state.WETH, this.state.imBTC, this.state.USDT, this);\n          this.new_web3.givenProvider.enable().then(res_accounts => {\n            this.setState({ my_account: res_accounts[0] }, async () => {\n              console.log('connected: ', this.state.my_account)\n\n              let timer_Next = setInterval(() => {\n                if (!(this.state.USDx_decimals && this.state.WETH_decimals && this.state.imBTC_decimals && this.state.USDT_decimals)) {\n                  console.log('111111111: not get yet...');\n                } else {\n                  console.log('2222222222: i got it...');\n                  clearInterval(timer_Next);\n                  this.setState({ i_am_ready: true })\n\n                  // to do something...\n\n\n\n                }\n              }, 100)\n            })\n          })\n        })\n      }\n    )\n\n  }\n\n\n\n\n\n  get_my_status = () => {\n    this.state.mMarket.methods.calculateAccountValues(this.state.my_account).call().then(res_account => {\n      this.state.mMarket.methods.assetPrices(address[this.state.net_type]['address_USDx']).call().then(res_usdx_price => {\n        // res_account[1] supply\n        // res_account[2] borrow\n        let supply = this.bn(res_account[1]).div(this.bn(res_usdx_price))\n        let borrow = this.bn(res_account[2]).div(this.bn(res_usdx_price))\n\n        // console.log(num.toString())\n\n        supply = format_bn(supply, 18, 2);\n        borrow = format_bn(borrow, 18, 2);\n\n        this.setState({\n          my_supply: supply,\n          my_borrow: borrow\n        })\n      })\n    })\n  }\n\n\n\n  get_4_tokens_status = () => {\n    // get usdx_price first.\n    this.state.mMarket.methods.assetPrices(address[this.state.net_type]['address_USDx']).call().then(res_usdx_price => {\n      this.setState({ usdx_price: res_usdx_price }, () => {\n        console.log('res_usdx_price: ', this.state.usdx_price);\n\n\n        // get_usdx_status\n        this.state.mMarket.methods.markets(address[this.state.net_type]['address_USDx']).call().then(res_usdx_markets => {\n          console.log(res_usdx_markets);\n          this.setState({\n            usdx_total_supply: format_bn(this.bn(res_usdx_markets.totalSupply).toString(), this.state.USDx_decimals, this.decimal_precision),\n            usdx_supply_APR: format_bn(this.bn(res_usdx_markets.supplyRateMantissa).mul(this.bn(2102400)).toString(), this.state.USDx_decimals - 2, this.decimal_precision),\n            usdx_borrow_APR: format_bn(this.bn(res_usdx_markets.borrowRateMantissa).mul(this.bn(2102400)).toString(), this.state.USDx_decimals - 2, this.decimal_precision),\n            usdx_u_rate: format_bn(this.bn(res_usdx_markets.totalBorrows).mul(this.bn(10 ** this.state.USDx_decimals)).div(this.bn(res_usdx_markets.totalSupply)).toString(), this.state.USDx_decimals - 2, this.decimal_precision)\n          });\n\n          this.state.mMarket.methods.getSupplyBalance(this.state.my_account, address[this.state.net_type]['address_USDx']).call().then(res_my_supply_usdx => {\n            console.log(res_my_supply_usdx);\n            if (this.bn(res_my_supply_usdx).gt(this.bn('0'))) {\n              this.setState({ i_have_supply_usdx: true });\n              return false;\n            } else {\n              this.setState({ i_have_supply_usdx: false });\n            }\n\n            this.state.mMarket.methods.getBorrowBalance(this.state.my_account, address[this.state.net_type]['address_USDx']).call().then(res_my_borrow_usdx => {\n              console.log(res_my_borrow_usdx);\n              if (this.bn(res_my_borrow_usdx).gt(this.bn('0'))) {\n                this.setState({ i_have_borrow_usdx: true });\n                return false;\n              } else {\n                this.setState({ i_have_borrow_usdx: false });\n              }\n            })\n          })\n        })\n\n\n\n\n\n        // get_usdt_status\n        this.state.mMarket.methods.markets(address[this.state.net_type]['address_USDT']).call().then(res_usdt_markets => {\n          console.log(res_usdt_markets);\n          this.setState({\n            usdt_total_supply: format_bn(this.bn(res_usdt_markets.totalSupply).toString(), this.state.USDT_decimals, this.decimal_precision),\n            usdt_supply_APR: format_bn(this.bn(res_usdt_markets.supplyRateMantissa).mul(this.bn(2102400)).toString(), this.state.USDT_decimals - 2, this.decimal_precision),\n            usdt_borrow_APR: format_bn(this.bn(res_usdt_markets.borrowRateMantissa).mul(this.bn(2102400)).toString(), this.state.USDT_decimals - 2, this.decimal_precision),\n            usdt_u_rate: format_bn(this.bn(res_usdt_markets.totalBorrows).mul(this.bn(10 ** this.state.USDT_decimals)).div(this.bn(res_usdt_markets.totalSupply)).toString(), this.state.USDT_decimals - 2, this.decimal_precision)\n          });\n\n          this.state.mMarket.methods.getSupplyBalance(this.state.my_account, address[this.state.net_type]['address_USDT']).call().then(res_my_supply_usdt => {\n            console.log(res_my_supply_usdt);\n            if (this.bn(res_my_supply_usdt).gt(this.bn('0'))) {\n              this.setState({ i_have_supply_usdt: true });\n              return false;\n            } else {\n              this.setState({ i_have_supply_usdt: false });\n            }\n\n            this.state.mMarket.methods.getBorrowBalance(this.state.my_account, address[this.state.net_type]['address_USDT']).call().then(res_my_borrow_usdt => {\n              console.log(res_my_borrow_usdt);\n              if (this.bn(res_my_borrow_usdt).gt(this.bn('0'))) {\n                this.setState({ i_have_borrow_usdt: true });\n                return false;\n              } else {\n                this.setState({ i_have_borrow_usdt: false });\n              }\n            })\n          })\n        })\n\n\n\n\n\n\n        // get_imbtc_status\n        this.state.mMarket.methods.markets(address[this.state.net_type]['address_imBTC']).call().then(res_imbtc_markets => {\n          console.log(res_imbtc_markets);\n          this.setState({\n            imbtc_total_supply: format_bn(this.bn(res_imbtc_markets.totalSupply).toString(), this.state.imBTC_decimals, this.decimal_precision),\n            imbtc_supply_APR: format_bn(this.bn(res_imbtc_markets.supplyRateMantissa).mul(this.bn(2102400)).toString(), this.state.imBTC_decimals - 2, this.decimal_precision),\n            imbtc_borrow_APR: format_bn(this.bn(res_imbtc_markets.borrowRateMantissa).mul(this.bn(2102400)).toString(), this.state.imBTC_decimals - 2, this.decimal_precision),\n            imbtc_u_rate: format_bn(this.bn(res_imbtc_markets.totalBorrows).mul(this.bn(10 ** this.state.imBTC_decimals)).div(this.bn(res_imbtc_markets.totalSupply)).toString(), this.state.imBTC_decimals - 2, this.decimal_precision)\n          });\n\n          this.state.mMarket.methods.getSupplyBalance(this.state.my_account, address[this.state.net_type]['address_imBTC']).call().then(res_my_supply_imbtc => {\n            console.log(res_my_supply_imbtc);\n            if (this.bn(res_my_supply_imbtc).gt(this.bn('0'))) {\n              this.setState({ i_have_supply_imbtc: true });\n              return false;\n            } else {\n              this.setState({ i_have_supply_imbtc: false });\n            }\n\n            this.state.mMarket.methods.getBorrowBalance(this.state.my_account, address[this.state.net_type]['address_imBTC']).call().then(res_my_borrow_imbtc => {\n              console.log(res_my_borrow_imbtc);\n              if (this.bn(res_my_borrow_imbtc).gt(this.bn('0'))) {\n                this.setState({ i_have_borrow_imbtc: true });\n                return false;\n              } else {\n                this.setState({ i_have_borrow_imbtc: false });\n              }\n            })\n          })\n        })\n\n\n\n\n        // get_weth_status\n        this.state.mMarket.methods.markets(address[this.state.net_type]['address_WETH']).call().then(res_weth_markets => {\n          console.log(res_weth_markets);\n          this.setState({\n            weth_total_supply: format_bn(this.bn(res_weth_markets.totalSupply).toString(), this.state.WETH_decimals, this.decimal_precision),\n            weth_supply_APR: format_bn(this.bn(res_weth_markets.supplyRateMantissa).mul(this.bn(2102400)).toString(), this.state.WETH_decimals - 2, this.decimal_precision),\n            weth_borrow_APR: format_bn(this.bn(res_weth_markets.borrowRateMantissa).mul(this.bn(2102400)).toString(), this.state.WETH_decimals - 2, this.decimal_precision),\n            weth_u_rate: format_bn(this.bn(res_weth_markets.totalBorrows).mul(this.bn(10 ** this.state.WETH_decimals)).div(this.bn(res_weth_markets.totalSupply)).toString(), this.state.WETH_decimals - 2, this.decimal_precision)\n          });\n\n          this.state.mMarket.methods.getSupplyBalance(this.state.my_account, address[this.state.net_type]['address_WETH']).call().then(res_my_supply_weth => {\n            console.log(res_my_supply_weth);\n            if (this.bn(res_my_supply_weth).gt(this.bn('0'))) {\n              this.setState({ i_have_supply_weth: true });\n              return false;\n            } else {\n              this.setState({ i_have_supply_weth: false });\n            }\n\n            this.state.mMarket.methods.getBorrowBalance(this.state.my_account, address[this.state.net_type]['address_WETH']).call().then(res_my_borrow_weth => {\n              console.log(res_my_borrow_weth);\n              if (this.bn(res_my_borrow_weth).gt(this.bn('0'))) {\n                this.setState({ i_have_borrow_weth: true });\n                return false;\n              } else {\n                this.setState({ i_have_borrow_weth: false });\n              }\n            })\n          })\n        })\n\n\n\n      })\n    })\n  }\n\n\n\n\n  // 0x08F12aabc699bBaf57d135BA56F44D00e9663951 0xaf21bb8ae7b7a5eec37964e478583cd486fd12e2\n  get_usdx_status = () => {\n    this.state.mMarket.methods.markets('0xaf21bb8ae7b7a5eec37964e478583cd486fd12e2').call().then(res_markets => {\n      console.log(res_markets)\n\n      console.log(res_markets.totalSupply)\n      console.log(res_markets.totalBorrows)\n\n      // supply APR\n      console.log(format_bn(this.bn(res_markets.supplyRateMantissa).mul(this.bn(2102400)).toString(), 16, 2))\n\n      // borrow APR\n      console.log(format_bn(this.bn(res_markets.borrowRateMantissa).mul(this.bn(2102400)).toString(), 16, 2))\n\n\n\n      // U rate\n      console.log(format_bn(this.bn(res_markets.totalBorrows).mul(this.bn(10 ** 18)).div(this.bn(res_markets.totalSupply)).toString(), 16, 2))\n      // console.log(getPercentageFormat(this.new_web3.utils.fromWei(res_markets[4].toNumber(), \"ether\") * 86400 * 365 / 15))\n\n\n\n      // 获取USDx价格\n\n\n\n\n    })\n  }\n\n\n\n\n  // address-usdt: 0xA1e525F7d24D7cCB78A070BBd12C0BF21Fb4a848\n  get_usdt_status = () => {\n    this.state.mMarket.methods.markets('0xA1e525F7d24D7cCB78A070BBd12C0BF21Fb4a848').call().then(res_markets => {\n      console.log('usdt: ', res_markets)\n      console.log(res_markets.totalSupply)\n      console.log(res_markets.totalBorrows)\n\n      // supply APR\n      console.log(format_bn(this.new_web3.utils.toBN(res_markets.supplyRateMantissa).mul(this.new_web3.utils.toBN(2102400)).toString(), 16, 2))\n\n      // borrow APR\n      console.log(format_bn(this.new_web3.utils.toBN(res_markets.borrowRateMantissa).mul(this.new_web3.utils.toBN(2102400)).toString(), 16, 2))\n      // U rate\n      // console.log(format_bn(this.new_web3.utils.toBN(res_markets.totalBorrows).mul(this.new_web3.utils.toBN(10 ** 18)).div(this.new_web3.utils.toBN(res_markets.totalSupply)).toString(), 16,2))\n      // console.log(getPercentageFormat(this.new_web3.utils.fromWei(res_markets[4].toNumber(), \"ether\") * 86400 * 365 / 15))\n      // 获取USDT价格\n      this.state.mMarket.methods.assetPrices('0xA1e525F7d24D7cCB78A070BBd12C0BF21Fb4a848').call().then(res_usdt_price => {\n\n\n        console.log(res_usdt_price);\n\n        // let totalS = this.new_web3.utils.toBN(res_markets.totalSupply).mul(this.new_web3.utils.toBN((10 ** ((18 - this.state.USDT_decimals) * 2)).toLocaleString().replace(/,/g, ''))).div(this.new_web3.utils.toBN(res_usdt_price))\n\n        this.state.mMarket.methods.assetPrices('0xaf21bb8ae7b7a5eec37964e478583cd486fd12e2').call().then(res_usdx_price => {\n\n\n          console.log('res_usdx_price: ', res_usdx_price);\n          let totalS = this.bn(res_markets.totalSupply).mul(this.bn(res_usdt_price)).div(this.bn(res_usdx_price)).div(this.bn(10 ** 18))\n          console.log(totalS);\n          console.log(totalS.toString());\n        })\n      })\n    })\n  }\n\n\n\n  // address-imbtc: 0x7b054ebe1d7e003afda8e717daeab05d56d5836a\n  get_imbtc_status = () => {\n    this.state.mMarket.methods.markets('0x7b054ebe1d7e003afda8e717daeab05d56d5836a').call().then(res_markets => {\n      console.log('imbtc: ', res_markets)\n      console.log(res_markets.totalSupply)\n      console.log(res_markets.totalBorrows)\n\n      // supply APR\n      console.log(format_bn(this.new_web3.utils.toBN(res_markets.supplyRateMantissa).mul(this.new_web3.utils.toBN(2102400)).toString(), 16, 2))\n\n      // borrow APR\n      console.log(format_bn(this.new_web3.utils.toBN(res_markets.borrowRateMantissa).mul(this.new_web3.utils.toBN(2102400)).toString(), 16, 2))\n      // U rate\n      // console.log(format_bn(this.new_web3.utils.toBN(res_markets.totalBorrows).mul(this.new_web3.utils.toBN(10 ** 18)).div(this.new_web3.utils.toBN(res_markets.totalSupply)).toString(), 16,2))\n      // console.log(getPercentageFormat(this.new_web3.utils.fromWei(res_markets[4].toNumber(), \"ether\") * 86400 * 365 / 15))\n      // 获取USDT价格\n      this.state.mMarket.methods.assetPrices('0x7b054ebe1d7e003afda8e717daeab05d56d5836a').call().then(res_imbtc_price => {\n\n\n        console.log('res_imbtc_price: ', res_imbtc_price);\n\n        // let totalS = this.new_web3.utils.toBN(res_markets.totalSupply).mul(this.new_web3.utils.toBN((10 ** ((18 - this.state.USDT_decimals) * 2)).toLocaleString().replace(/,/g, ''))).div(this.new_web3.utils.toBN(res_usdt_price))\n\n        this.state.mMarket.methods.assetPrices('0xaf21bb8ae7b7a5eec37964e478583cd486fd12e2').call().then(res_usdx_price => {\n\n\n          console.log('res_usdx_price: ', res_usdx_price);\n          let totalS = this.bn(res_markets.totalSupply).mul(this.bn(res_imbtc_price)).div(this.bn(res_usdx_price)).div(this.bn(10 ** 18))\n          console.log(totalS);\n          console.log(totalS.toString());\n        })\n      })\n    })\n  }\n\n\n\n\n  // address-weth: 0xC8b1a5ef2e19937dd6c0f804DF2e3efE9F093B1e\n  get_weth_status = () => {\n    this.state.mMarket.methods.markets('0xC8b1a5ef2e19937dd6c0f804DF2e3efE9F093B1e').call().then(res_markets => {\n      console.log('weth: ', res_markets)\n      console.log(res_markets.totalSupply)\n      console.log(res_markets.totalBorrows)\n\n      // supply APR\n      console.log(format_bn(this.new_web3.utils.toBN(res_markets.supplyRateMantissa).mul(this.new_web3.utils.toBN(2102400)).toString(), 16, 2))\n\n      // borrow APR\n      console.log(format_bn(this.new_web3.utils.toBN(res_markets.borrowRateMantissa).mul(this.new_web3.utils.toBN(2102400)).toString(), 16, 2))\n      // U rate\n      // console.log(format_bn(this.new_web3.utils.toBN(res_markets.totalBorrows).mul(this.new_web3.utils.toBN(10 ** 18)).div(this.new_web3.utils.toBN(res_markets.totalSupply)).toString(), 16,2))\n      // console.log(getPercentageFormat(this.new_web3.utils.fromWei(res_markets[4].toNumber(), \"ether\") * 86400 * 365 / 15))\n      // 获取USDT价格\n      this.state.mMarket.methods.assetPrices('0xC8b1a5ef2e19937dd6c0f804DF2e3efE9F093B1e').call().then(res_weth_price => {\n\n\n        console.log('res_weth_price: ', res_weth_price);\n\n        // let totalS = this.new_web3.utils.toBN(res_markets.totalSupply).mul(this.new_web3.utils.toBN((10 ** ((18 - this.state.USDT_decimals) * 2)).toLocaleString().replace(/,/g, ''))).div(this.new_web3.utils.toBN(res_usdt_price))\n\n        this.state.mMarket.methods.assetPrices('0xaf21bb8ae7b7a5eec37964e478583cd486fd12e2').call().then(res_usdx_price => {\n\n\n          console.log('res_usdx_price: ', res_usdx_price);\n          let totalS = this.bn(res_markets.totalSupply).mul(this.bn(res_weth_price)).div(this.bn(res_usdx_price)).div(this.bn(10 ** 18))\n          console.log(totalS);\n          console.log(totalS.toString());\n        })\n      })\n    })\n  }\n\n\n\n\n\n\n\n\n  componentDidMount = () => {\n    this.timer_get_data = setInterval(() => {\n      if (!this.state.my_account) {\n        console.log('account not ailableav')\n        return false;\n      }\n      this.get_my_status();\n      this.get_4_tokens_status();\n    }, 3000)\n  }\n\n\n\n\n  render() {\n    return (\n      <MediaQuery maxWidth={736}>\n        {(match) => (\n          <Switch>\n            <React.Fragment>\n              <div className=\"App\">\n                <div className=\"App-header\">\n                  {/* <Alert message=\"Lendf.me is currently only available on Mainnet or the Rinkeby Testnet.\" type=\"error\" onClose='' icon={mainnetOrRinkebyIconAlert} showIcon /> */}\n                  {/* <Alert message=\"Note: You are currently connected to the Rinkeby Testnet\" type=\"informational\" onClose='' className='informational-banner' icon={noteIconAlert} showIcon /> */}\n\n                  <Route exact path=\"/\" render={() => <Home data={this.state} />} />\n\n\n                  <Route path=\"/supply-usdx\" render={() => <Supply_usdx />} />\n                  <Route path=\"/supply-usdt\" render={() => <Supply_usdt />} />\n                  <Route path=\"/supply-imbtc\" render={() => <Supply_imbtc />} />\n                  <Route path=\"/supply-weth\" render={() => <Supply_weth />} />\n\n\n                  <Route path=\"/borrow-usdx\" render={() => <Borrow_usdx />} />\n                  <Route path=\"/borrow-usdt\" render={() => <Borrow_usdt />} />\n                  <Route path=\"/borrow-imbtc\" render={() => <Borrow_imbtc />} />\n                  <Route path=\"/borrow-weth\" render={() => <Borrow_weth />} />\n\n                  {/* <div>\n                    <button onClick={this.get_market_status}>get balance</button>\n\n                    <hr style={{ margin: '20px' }}></hr>\n\n                    <span>supply: </span>\n                    <input value={this.state.my_supply_balance ? this.state.my_supply_balance : ''} style={{ width: '300px' }} readOnly={true} />\n\n                    <hr style={{ margin: '20px' }}></hr>\n\n                    <span>borrow: </span>\n                    <input value={this.state.my_borrow_balance ? this.state.my_borrow_balance : ''} style={{ width: '300px' }} readOnly={true} />\n\n                    <hr style={{ margin: '20px' }}></hr>\n\n                    <button onClick={this.get_usdx_status}>get usdx status</button>\n\n                    <hr style={{ margin: '20px' }}></hr>\n                    <button onClick={this.get_usdt_status}>get usdt status</button>\n\n                    <hr style={{ margin: '20px' }}></hr>\n                    <button onClick={this.get_imbtc_status}>get imbtc status</button>\n\n                    <hr style={{ margin: '20px' }}></hr>\n                    <button onClick={this.get_weth_status}>get weth status</button>\n\n                    <hr style={{ margin: '20px' }}></hr>\n                    <button onClick={this.get_tokens_status}>get_tokens_status</button>\n\n\n                  </div> */}\n                  {/* <Route exact path=\"/\" render={() => <Main checkLogIn={this.checkLogIn} isSMView={!!match} />} /> */}\n                  {/* <Route path=\"/supply\" render={() => <Lend checkLogIn={this.checkLogIn} isSMView={!!match} />} /> */}\n                  {/* <Route path=\"/borrow\" render={() => <Borrow checkLogIn={this.checkLogIn} isSMView={!!match} />} /> */}\n                </div>\n              </div>\n            </React.Fragment>\n          </Switch>\n        )}\n      </MediaQuery>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}