{"version":3,"sources":["language/en_US.js","language/zh_CN.js","component/approve/approve.js","component/inputUnit/inputUnit.js","util.js","ABIs/WETH.js","ABIs/USDX.js","ABIs/MoneyMarket.js","component/coinInfo/coinInfo.js","container/coinAvailable/coinAvailable_2_1.js","container/coinBalance/coinBalance.js","component/coinInfoWithIcon/coinInfoWithIcon.js","container/balanceInfoWithIcon/balanceInfoWithIcon_borrow.js","container/supplyInput/Borrow_left.js","container/coinAvailable/coinAvailable_borrow.js","container/balanceInfoWithIcon/balanceInfoWithIcon_borrow_right.js","container/borrowInput/Borrow_right.js","component/header/header.js","component/record/record.js","container/recordBoard/recordBoard.js","HOC/withMarketInfo.js","component/infoSection/infoSection.js","container/accountInfo/accountInfo_borrow.js","pages/borrow/borrow.js","container/supplyInput/SupplyContent.js","container/accountInfo/accountInfo_supply.js","pages/lend/lend.js","container/accountInfo/accountInfo_main.js","pages/home/home.js","pages/main/main.js","App.js","serviceWorker.js","index.js"],"names":["en_US","Decentralized","USDx_Supplied","USDx_Supplied_home","USDx_Borrowed","Utilization_Rate","Collateralization_ratio","USDx_Supply_APR","USDx_Borrow_APR","Supply_USDx","Borrow_USDx","Supply_your","Pledge_WETH","Account_Portfolio","Supplied_Balance","Borrowed_Balance","Available_to_Borrow","Borrow_APR","Supply","WETH_Supplied","ETH_Balance","WETH_Balance","Withdraw","WETH_Available","Before_borrowing","Borrowing_exceeds","Already_supplied","USDx_Market","Total_Supplied","Total_Borrowed","Supply_APR","Before_supplying","Already_borrowed","INSUFFICIENT_LIQUIDITY","INSUFFICIENT_BALANCE","SUBMITTING","Before_supplying_WETH","ENABLE_WETH","Borrow","USDx_Borrowed_borrow","USDx_Available_borrow","USDx_Available_supply","Repay","USDx_Balance","Home","SUPPLY","BORROW","REPAY","Balance","zh_CN","Approve","props","locale","messages","navigator","language","className","enableMessage","id","page","size","isEnable","onClick","handleClick","disabled","buttonInfo","InputUnit","hasBorrowedUSDx","hasLendUSDx","placeholder","placeholderHint","min","minAmount","step","value","amount","onChange","handleChange","inputDisabled","maxClassName","handleMax","safeMax","exceedsSafeMax","buttonClassName","validNumber","number","test","toFormatShowNumber","String","replace","toFormat4Number","val","undefined","split","length","toFormat10Number","getPercentageFormat","toFixed","toDoubleThousands","s","l","reverse","r","t","i","join","getTransactionHistoryKey","account","coinType","networkId","Asset","saveTransaction","icon","transactionType","transactionAmount","coinType2","txnHashHref","txId","status","realAmount","failed","failedInfo","window","localStorage","storage","dateTime","moment","format","key","contractData","JSON","parse","getItem","push","transactionDetail","transactionTime","timestamp","valueOf","timeOutFlag","setItem","stringify","txIdKey","getTxnHashHref","findNetwork","networkName","getLoginStatusKey","saveLoginStatus","isLogin","diffMin","eTime","date1","date2","diff","formatBigNumber","bigNumber","NumStr","Number","toLocaleString","str","slice","WETH","web3","weth","NetworkName","version","network","require","WETHSpec","eth","contract","at","usdx","USDX","usdxSpec","moneyMarket","MoneyMarket","contractSpec","CoinInfo","balanceType","balanceUnit","login","balanceAmount","CoinAvailable","render","balanceDescription","fa_maxWithdrawAmount","Component","CoinBalance","getAccountUSDXBalanceByAddress","accounts","balanceOf","err","res","usdxBalance","fromWei","toNumber","state","usdxAccountBalance","setState","getAccountETHBalance","getBalance","balance","ethAccountBalance","getMyAddressWETHBalance","wethBalanceAmount","wethAccountBalance","componentDidMount_temp","setTimeout","timerID","setInterval","currentProvider","isMetaMask","ethereum","on","clearInterval","this","coin","father_max_Unwrap_Amount","CoinInfoWithIcon","style","width","height","margin","src","alt","action","coinBalance","TabPane","Tabs","SupplyInput","ethAccountBalance_BN","maxUnwrapAmount","maxUnwrapAmount_BN","getAccountBalance","AccountBalance","MaxSupplyAmount","accountBalance","isSupplyEnable","supplyAmount","maxSupplyAmount","maxSupplyAmount_BN","getAllowance","mmAddress","Network","allowance","allowanceVal","coinAllowance","isApproved","pendingApproval","buttonText","approveButtonInfo","console","log","get_My_WETH_Supplied_max_Withdraw_WETH_Amount","wethAddress","Main","Rinkeby","getAccountLiquidity","error","res_Account_Liquidity_BN","assetPrices","res_usdx_price_BN","mul","toBigNumber","div","getSupplyBalance","res_supplied_BN","res_cash_BN","moreSmallNum","sub","mostSmallNum","gt","maxWithdrawAmount","maxWithdrawAmount_BN","handleApprove","i_clicked_approve_btn","approve","estimateGas","from","gasLimit","getGasPrice","gasPrice","sendTransaction","gas","getHash","hashNumber","wethCoin","usdxCoin","USDx","handleSupplyClick","supplyButtonText","supplyInputDisabled","supplyAddress","amount_num","i_will_supply_max","supply","recordSupplyAmount","toWei","handleSupplyChange","supplyButtonInfo","handleSupplyMax","withdraw_to_show","substring","handleWithdrawChange","withdrawMax","withdrawAmount","isWithdrawEnable","withdrawButtonText","withdrawButtonInfo","handleWithdrawMax","handleWithdrawClick","withdrawInputDisabled","withdrawMaxClassName","withdrawAddress","withdraw","recordWithdrawAmount","handleWrapChange","wrapAmount","isWrapEnable","handleWrapClick","wrapInputDisabled","deposit","handleunwrapChange","i_will_unwrap_max","unwrapAmount","isunwrapEnable","handleunwrapMax","handleunwrapClick","unwrapInputDisabled","unwrapMaxClassName","num_amount","usdxEventMonitor","that","Approval","watch","result","results","transactionHash","removeItem","map","item","wethEventMonitor","Deposit","resultObj","refreshData","argsObj","args","wad","Withdrawal","checkWaitingUpdateTransactionRecords","supplyWrapWaitUpdateForSuccessMap","get","isImToken","supplyWrapWaitUpdateForFailedMap","supplyWrapWaitTimeOutMap","supplyUnwrapWaitUpdateForSuccessMap","supplyUnwrapWaitUpdateForFailedMap","supplyWETHWaitUpdateForSuccessMap","supplyWETHWaitUpdateForFailedMap","supplyWETHWaitTimeOutMap","withdrawWETHWaitUpdateForSuccessMap","withdrawWETHWaitUpdateForFailedMap","withdrawWETHWaitTimeOutMap","supplyUSDxWaitUpdateForSuccessMap","supplyUSDxWaitUpdateForFailedMap","supplyUSDxWaitTimeOutMap","withdrawUSDxWaitUpdateForSuccessMap","withdrawUSDxWaitUpdateForFailedMap","withdrawUSDxWaitTimeOutMap","enableWETHWaitUpdateForSuccessMap","enableWETHWaitUpdateForFailedMap","enableWETHWaitTimeOutMap","enableUSDxWaitUpdateForSuccessMap","enableUSDxWaitUpdateForFailedMap","enableUSDxWaitTimeOutMap","checkTransactionsStatus","timeOutTimes","flag","getTransactionReceipt","data","set","supplyUnwrapWaitTimeOutMap","mmMonitor","SupplyReceived","SupplyWithdrawn","Failure","errorArgs","ErrorCode","refreshDataEventMonitor","allEvents","toBlock","event","checkTransactionsStatusTimer","checkWaitingUpdateTimer","get_Supplied_WETH","get_my_ETH","get_my_WETH","refreshInterval","res_supplied_WETH_BN","supplied_weth_Balance","ETH_balance_BN","my_eth_Balance","WETH_balance_BN","my_weth_Balance","currentUser","supplyAccountBalance","supplyWETHBalance","collateralRatio","assetBalance","supplyAssetPrice","calcWETHPrice","Map","enable","then","isLogIn","getNetwork","e","accountInterval","approveProps","marginTop","animated","changePane","tab","tabLeftName","father_approve_WETH","type","target","wrapButtonInfo","unwrapButtonInfo","tabRightName","get_Account_Balance","usdxAddress","getBorrowBalance","res1","res33","usdxAssetPrice","res2","sumofSupplies","sumofBorrow","res5","usdxAvailableAmount","res66","cash","originationFee","res_orin","availableBorrowAmount","Math","wethAssetPrice","wethAssetBalance","usdxAssetBalance","maxWithdrawWETHAmount","maxWithdrawUSDXAmount","BalanceInfoWithIcon","get_Borrow_Balance","borrowedusdxBalance","suppliedwethBalance","suppliedusdxBalance","BorrowInput","getCollateralRatio","getMaxBorrowAmount","calculateAccountValues","res3","res6","maxBorrowAmount","getBorrowMarketInfo","asset","markets","call","borrowInfo","getUSDxAllowance","usdxAllowance","USDx_isApproved","getMyAddressUSDxBalance","myAddressUSDxBalance","repayBorrowMax","isRepayBorrowEnable","repayBorrowAmount","repayButtonText","repayButtonInfo","pendingUSDxApproval","handleBorrowClick","borrowAmount","isBorrowEnable","borrowButtonText","borrowInputDisabled","borrowMaxClassName","borrow","recordBorrowAmount","borrowtxhash","handleBorrowChange","borrowButtonInfo","borrowMax","toString","indexOf","handleBorrowMax","handleRepayClick","isRepayEnable","repayBorrowInputDisabled","repayBorrowMaxClassName","repayBorrow","recordRepayBorrowAmount","handleRepayChange","maxRepayBorrowAmount","isNaN","handleRepayMax","borrowBalance","borrowedUSDxBalance","getUSDxBalance","USDXPersonalBalance","getOriginationFee","originationFeeRes","availableToBorrow","supplyWETHAmount","WETHAssetPrice","getCurrentSupplyWETHAmount","getWETHAssetPrice","getUSDxAssetPrice","getCash","mmEventMonitor","BorrowTaken","BorrowRepaid","borrowUSDxWaitUpdateForSuccessMap","borrowUSDxWaitUpdateForFailedMap","borrowUSDxWaitUpdateTimeOutMap","repayUSDxWaitUpdateForSuccessMap","repayUSDxWaitUpdateForFailedMap","repayUSDxWaitUpdateTimeOutMap","enableUSDxWaitUpdateTimeOutMap","refreshMaxData","res_borrowed_BN","my_borrowed_usdx","supplyType","web3NoExist","myAddress","USDxBorrowMarketInfo","WETHBorrowMarketInfo","USDxApproval","maxRepayBorrowAmountShow","balanceAmountShow","availableTimer","getAddressIntervalBorrow","borrowProps","maxAmount","repayProps","father_approve_USDx","Header","checkLogIn","connectMetamask","unConnectMetamask","allocateUSDx","allocateTo","allocateWETH","USDxBalance","ETHBalance","WETHBalance","ETHToUSD","display","alignItems","fontWeight","paddingLeft","color","Record","placement","content","trigger","goTxnHashHref","marginLeft","time","substr","RecordBoard","getRecentTransactions","RecentTransactions","open","renderRecord","record","withMarketInfo","getAccountETHBalanceByAddress","ETHPersonalBalance","getAccountWETHBalanceByAddress","wethBalance","WETHPersonalBalance","new_getETHAssetPrices","err1","err2","ETHToUSDBalance","USDxToUSD","USDxToUSDUnFormat","usdxMarketBalance","assets","marketInfo","banner","InfoSection","accountInfo","filter","info","currentPage","index","marginRight","title","AccountInfo","totalSupply","calculateAccountValuesByAddress","res_format","res_ratio","collateralRatioShow","res_cash","res_originFee","borrowBalanceShow","getBorrowInterestRate","borrowInterestRate","supplyInterestRate","totalBorrowInMoneyMarket","totalBorrowInMoneyMarketUnformat","totalSupplyUSDxInMoneyMarket","totalSupplyWETHInMoneyMarket","usdxBalanceOf","utilizationRate","tatol_Supplied","WithMarketInfoEnhanced","SupplyContent","getCurrentSupplyAssetAmount","withdrawType","getAssetBalance","getCalcWETHPrice","get_My_USDx_Supplied_max_Withdraw_USDx_Amount","Get_My_USDx_Balance","My_USDx_Balance","My_USDx_Balance_BN","My_USDx_Supplied","maxWithdrawUSDXAmount_BN","handle_Supply_Max","supply_to_show","handle_Supply_Change","handle_Supply_Click","to_supply_amount_BN","handle_Withdraw_Max","handle_Withdraw_Change","handle_Withdraw_Click","refresh_status","isApproved_USDx","not_approve_atfirst_USDX","get_USDx_supply_borrow","USDx_supply","USDx_borrow","USDx_supply_APR","USDx_borrow_APR","componentDidMount","timer_supply","componentWillUnmount","USDx_borrow_supply_rate","timer_main","getCurentAccount","getCurentAccountTimer","mainnetOrRinkebyIconAlert","noteIconAlert","USDx_abi","WETH_abi","imBTC_abi","USDT_abi","mMarket_abi","address","App","get_tokens_decimals","methods","decimals","res_usdx_decimals","USDx_decimals","res_weth_decimals","WETH_decimals","imBTC","res_imBTC_decimals","imBTC_decimals","USDT","res_usdt_decimals","USDT_decimals","get_market_status","mMarket","res_account","res_usdx_price","new_web3","utils","toBN","toStringDecimals","my_supply_balance","my_borrow_balance","get_usdx_status","res_markets","totalBorrows","toStringDecimals_new","supplyRateMantissa","borrowRateMantissa","contractMethodCall","methodName","param","Object","constructor","Array","Promise","resolve","a","numStr","decimalPlace","Web3","givenProvider","net","getNetworkType","net_type","Contract","timer_Next","maxWidth","match","Fragment","message","onClose","showIcon","exact","path","readOnly","Boolean","location","hostname","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3aca6bfa.chunk.js","sourcesContent":["const en_US = {\n    Decentralized: \"Earn Interest and Borrow Money at Ease with Lendf.Me\",\n    USDx_Supplied: \"USDx Supplied\",\n    USDx_Supplied_home: \"USDx Supplied\",\n    USDx_Borrowed: \"USDx Borrowed\",\n    Utilization_Rate: \"Utilization Rate\",\n    Collateralization_ratio: \"Collateralization ratio\",\n    USDx_Supply_APR: \"USDx Supply APR\",\n    USDx_Borrow_APR: \"USDx Borrow APR\",\n    Supply_USDx: \"Supply USDx\",\n    Borrow_USDx: \"Borrow USDx\",\n    Supply_your: \"Supply your USDx assets to earn interest on your holdings.\",\n    Pledge_WETH: \"Pledge WETH assets to borrow USDx instantly, at competitive interest rate.\",\n    Account_Portfolio: \"Account Portfolio\",\n    Supplied_Balance: \"Supplied Balance\",\n    Borrowed_Balance: \"Borrowed Balance\",\n    Available_to_Borrow: \"Available to Borrow\",\n    Borrow_APR: \"Borrow APR\",\n    Supply: \"Supply\",\n    WETH_Supplied: \"WETH Supplied\",\n    ETH_Balance: \"ETH Balance\",\n    WETH_Balance: \"WETH Balance\",\n    Withdraw: \"Withdraw\",\n    WETH_Available: \"WETH Available\",\n    Before_borrowing: \"Before borrowing USDx for the first time, you must enable USDx.\",\n    Borrowing_exceeds: \"Borrowing exceeds SAFE value makes your supply in risk.\",\n    Already_supplied: \"Already supplied USDx, please withdraw all of them in Lend Page before borrowing any.\",\n    USDx_Market: \"USDx Market\",\n    Total_Supplied: \"Total Supplied\",\n    Total_Borrowed: \"Total Borrowed\",\n    Supply_APR: \"Supply APR\",\n    Before_supplying: \"Before supplying USDx for the first time, you must enable USDx.\",\n    Already_borrowed: \"Already borrowed USDx, please repay all of them in Borrow Page before supplying any.\",\n    INSUFFICIENT_LIQUIDITY: \"INSUFFICIENT LIQUIDITY\",\n    INSUFFICIENT_BALANCE: \"INSUFFICIENT BALANCE\",\n    SUBMITTING: \"SUBMITTING…\",\n    Before_supplying_WETH: \"Before supplying WETH for the first time, you must enable WETH.\",\n    ENABLE_WETH: \"ENABLE WETH\",\n    Borrow: \"Borrow\",\n    USDx_Borrowed_borrow: \"USDx Borrowed\",\n    USDx_Available_borrow: \"USDx Available\",\n    USDx_Available_supply: \"USDx Available\",\n    Repay: \"Repay\",\n    USDx_Balance: \"USDx Balance\",\n    Home: \"Home\",\n    SUPPLY: \"SUPPLY\",\n    BORROW: \"BORROW\",\n    REPAY: \"REPAY\",\n    Balance: \" Balance\"\n}\nexport default en_US;","const zh_CN = {\n    Decentralized: \"随存随贷，你自己的银行\",\n    USDx_Supplied: \"USDx已存数量\",\n    USDx_Supplied_home: \"USDx存款总额\",\n    USDx_Borrowed: \"USDx借款总额\",\n    Utilization_Rate: \"USDx借存比率\",\n    Collateralization_ratio: \"抵押率\",\n    USDx_Supply_APR: \"USDx存款利率\",\n    USDx_Borrow_APR: \"USDx借款利率\",\n    Supply_USDx: \"存USDx\",\n    Borrow_USDx: \"借USDx\",\n    Supply_your: \"随存随取USDx，即时获得高额利息\",\n    Pledge_WETH: \"抵押Ether获得低利率的USDx即时借款\",\n    Account_Portfolio: \"账户信息\",\n    Supplied_Balance: \"存款总额\",\n    Borrowed_Balance: \"借款总额\",\n    Available_to_Borrow: \"可借款上限\",\n    Borrow_APR: \"借款利率\",\n    Supply: \"存款\",\n    WETH_Supplied: \"WETH已存数量\",\n    ETH_Balance: \"ETH余额\",\n    WETH_Balance: \"WETH余额\",\n    Withdraw: \"取出\",\n    WETH_Available: \"WETH可取数量\",\n    Before_borrowing: \"授权首次USDx借款\",\n    Borrowing_exceeds: \"避免使用过低抵押率导致抵押资产被清算\",\n    Already_supplied: \"借款前需取出所有USDx存款\",\n    USDx_Market: \"USDx市场\",\n    Total_Supplied: \"存款总额\",\n    Total_Borrowed: \"借款总额\",\n    Supply_APR: \"存款利率\",\n    Before_supplying: \"授权首次USDx存款\",\n    Already_borrowed: \"存款前需还清所有USDx借款\",\n    INSUFFICIENT_LIQUIDITY: \"市场流动性不足\",\n    INSUFFICIENT_BALANCE: \"余额不足\",\n    SUBMITTING: \"提交中…\",\n    Before_supplying_WETH: \"授权首次WETH存款\",\n    ENABLE_WETH: \"授权\",\n    Borrow: \"借款\",\n    USDx_Borrowed_borrow: \"USDx已借数量\",\n    USDx_Available_borrow: \"USDx可借数量\",\n    USDx_Available_supply: \"USDx可取数量\",\n    Repay: \"偿还\",\n    USDx_Balance: \"USDx余额\",\n    Home: \"首页\",\n    SUPPLY: \"存款\",\n    BORROW: \"借款\",\n    REPAY: \"偿还\",\n    Balance: \"余额\"\n}\nexport default zh_CN;","import React from 'react';\nimport { Button } from 'antd';\nimport './approve.scss';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nconst Approve = (props) => {\n    return (\n        <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n            <div className='approve-section'>\n                <div className='enable-message'>\n                    {/* {props.enableMessage} */}\n                    {props.enableMessage === 'Before supplying USDx for the first time, you must enable USDx.' ? <FormattedMessage id='Before_supplying' /> : null}\n                    {props.enableMessage === 'Before supplying WETH for the first time, you must enable WETH.' ? <FormattedMessage id='Before_supplying_WETH' /> : null}\n                    {props.enableMessage === 'Before Borrowing USDx for the first time, you must enable USDx.' ? <FormattedMessage id='Before_borrowing' /> : null}\n                </div>\n                <div className={props.page === 'borrow' ? 'button-wrapper-borrow' : 'button-wrapper'}>\n                    <Button size='large' className={!props.isEnable ? 'disable-button' : ''} onClick={props.handleClick} disabled={!props.isEnable}>{props.buttonInfo}</Button>\n                </div>\n            </div>\n        </IntlProvider>\n    )\n}\n\nexport default Approve;","import React from 'react';\nimport { Button, InputNumber } from 'antd';\nimport './inputUnit.scss';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nconst InputUnit = (props) => {\n    // return false;\n    const { hasBorrowedUSDx, hasLendUSDx } = props;\n    const borrowAlertMsg = 'Already supplied USDx, please withdraw all of them in Lend Page before borrowing any.';\n    const supplyAlertMSG = 'Already borrowed USDx, please repay all of them in Borrow Page before supplying any.';\n\n    return (\n        <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n            <div className='input-unit-wrapper'>\n                {!(hasLendUSDx || hasBorrowedUSDx)\n                    ?\n                    <div className='input-wrapper'>\n                        <InputNumber size='large' placeholder={props.placeholderHint} min={props.minAmount} step={props.step} value={props.amount} onChange={props.handleChange} className='input-number' disabled={props.inputDisabled} />\n                        <span className={props.maxClassName} onClick={props.inputDisabled ? '' : props.handleMax}>{props.safeMax}MAX</span>\n                    </div>\n                    :\n                    <div className='alert-message'>\n                        {\n                            !!hasLendUSDx\n                                ?\n                                // borrowAlertMsg\n                                <FormattedMessage id='Already_supplied' />\n                                :\n                                // supplyAlertMSG\n                                <FormattedMessage id='Already_borrowed' />\n                        }\n                    </div>\n                }\n\n                {\n                    props.exceedsSafeMax\n                        ?\n                        <div className='safe-max-alert-message'>\n                            {/* Borrowing exceeds SAFE value makes your supply in risk. */}\n                            <FormattedMessage id='Borrowing_exceeds' />\n                        </div>\n                        :\n                        ''\n                }\n\n                <div className={props.buttonClassName}>\n                    <Button size='large' className={!!(hasBorrowedUSDx || hasLendUSDx || !props.isEnable) ? 'disable-button' : ''} onClick={props.handleClick} disabled={!props.isEnable || !!(hasBorrowedUSDx || hasLendUSDx)}>\n                        {props.buttonInfo}\n                    </Button>\n                </div>\n            </div>\n        </IntlProvider>\n    )\n}\n\nexport default InputUnit;","import moment from 'moment';\nimport Asset from './constant.json';\n\nexport const validNumber = (number) => {\n  let reg = /^(\\+)?\\d+(\\.\\d+)?$/;\n  return reg.test(number);\n}\n\nexport const toFormatShowNumber = (value) => {\n  return String(value).replace(/^(.*\\..{2}).*$/, \"$1\");\n  // let val = String(value).replace(/^(.*\\..{2}).*$/, \"$1\");\n  // if (val.split(\".\")[1] === undefined) {\n  //   val = val + '.00'\n  // } else if (val.split(\".\")[1].length < 2) {\n  //   val = val + '0'\n  // }\n  // return val;\n}\n\nexport const toFormat4Number = (value) => {\n  // console.log(value)\n  let val = String(value).replace(/^(.*\\..{4}).*$/, \"$1\");\n  if (val.split(\".\")[1] === undefined) {\n    val = val + '.00'\n  } else if (val.split(\".\")[1].length < 4) {\n    val = val + '0'\n  }\n  // console.log(val)\n  return val;\n}\n\nexport const toFormat10Number = (value) => {\n  // console.log(value)\n  let val = String(value).replace(/^(.*\\..{10}).*$/, \"$1\");\n  if (val.split(\".\")[1] === undefined) {\n    val = val + '.00'\n  } else if (val.split(\".\")[1].length < 4) {\n    val = val + '0'\n  }\n  // console.log(val)\n  return val;\n}\n\nexport const getPercentageFormat = (value) => {\n  return (value * 100).toFixed(2);\n}\n\nexport const toNonExponential = (num) => {\n  var m = num.toExponential().match(/\\d(?:\\.(\\d*))?e([+-]\\d+)/);\n  return num.toFixed(Math.max(0, (m[1] || '').length - m[2]));\n}\n\nexport const toDoubleThousands = (s) => {\n  if (s == null || s === '') {\n    return '0.00';\n  }\n  s = toFormatShowNumber(s);\n  let l = s.split(\".\")[0].split(\"\").reverse(),\n    r = s.split(\".\")[1];\n  // console.log('s:' + s + ' / l:' +l + ' / r:' + r)\n  if (r === undefined) {\n    r = '00';\n  } else if (r.length < 2) {\n    r = r + '0';\n  }\n  let t = \"\";\n  for (let i = 0; i < l.length; i++) {\n    t += l[i] + ((i + 1) % 3 == 0 && (i + 1) != l.length ? \",\" : \"\");\n  }\n  return t.split(\"\").reverse().join(\"\") + \".\" + r;\n}\n\nexport const getTransactionHistoryKey = (account, coinType, page, networkId) => {\n  return account + '-' + Asset['Asset'][coinType] + '-' + page + '-' + networkId;\n}\n\nexport const saveTransaction = (icon, account, coinType, page, networkId, transactionType,\n  transactionAmount, coinType2, txnHashHref, txId, status, realAmount, failed, failedInfo) => {\n  if (status === undefined || status === null || status === '') {\n    status = 0;// 0:pending 1:done\n  }\n  if (transactionAmount === null) {\n    transactionAmount = ' ';\n  } else {\n    transactionAmount = ' ' + transactionAmount + ' ';\n  }\n  if (window.localStorage) {\n    let storage = window.localStorage;\n    // storage.clear();\n    // let dateTime = moment().format('MMMM Do, h:mm a');\n    let dateTime = moment().format('MMM. DD,HH:mm');\n    let key = getTransactionHistoryKey(account, coinType, page, networkId);\n    let contractData = JSON.parse(storage.getItem(key)) || [];\n    contractData.push({\n      icon: icon,\n      transactionDetail: transactionType + transactionAmount + coinType2,\n      transactionTime: dateTime,\n      txnHashHref: txnHashHref,\n      txId: txId,\n      status: status,\n      transactionType: transactionType,\n      realAmount: realAmount,\n      failed: failed,\n      failedInfo: failedInfo,\n      //超时则取消控件限制\n      timestamp: moment().valueOf(),\n      timeOutFlag: -1\n    });\n    storage.setItem(key, JSON.stringify(contractData));\n    // save txId key\n    let txIdKey = 'txId-' + txId;\n    storage.setItem(txIdKey, txId)\n    // console.log('========>key:' + key + ' / value:' + storage.getItem(key));\n  }\n}\nexport const txIdExist = (txId) => {\n  if (window.localStorage) {\n    let key = 'txId-' + txId;\n    let storage = window.localStorage;\n    return storage.getItem(key) !== null;\n  }\n}\n\nexport const blockHashExist = (blockHash) => {\n  if (window.localStorage) {\n    let key = 'blockHash-' + blockHash;\n    let storage = window.localStorage;\n    if (storage.getItem(key) !== null) {\n      return true;\n    } else {\n      storage.setItem(key, blockHash);\n      return false;\n    }\n  }\n}\n\nexport const getTxnHashHref = (networkId) => {\n  let txnHashHref;\n  switch (networkId) {\n    case \"1\":\n      txnHashHref = \"https://etherscan.io/tx/\";\n      break;\n    case \"2\"://Morden(不再使用的网络)\n      txnHashHref = \"https://etherscan.io/tx/\";\n      break;\n    case \"3\":\n      txnHashHref = \"https://ropsten.etherscan.io/tx/\";\n      break;\n    case \"4\":\n      txnHashHref = \"https://rinkeby.etherscan.io/tx/\";\n      break;\n    case \"42\":\n      txnHashHref = \"https://kovan.etherscan.io/tx/\";\n      break;\n    default:\n      txnHashHref = \"\";\n  }\n  return txnHashHref;\n}\n\nexport const findNetwork = (networkId) => {\n  let networkName;\n  switch (networkId) {\n    case \"1\":\n      networkName = \"Main\";\n      break;\n    case \"2\":\n      networkName = \"Morden\";\n      break;\n    case \"3\":\n      networkName = \"Ropsten\";\n      break;\n    case \"4\":\n      networkName = \"Rinkeby\";\n      break;\n    case \"42\":\n      networkName = \"Kovan\";\n      break;\n    default:\n      networkName = \"Unknown\";\n  }\n  return networkName;\n}\n\nexport const getLoginStatusKey = (account) => {\n  return account + '-LoginStatus';\n}\n\nexport const saveLoginStatus = (account, isLogin) => {\n  if (account === undefined || isLogin === null) {\n    return;\n  }\n  if (window.localStorage) {\n    let storage = window.localStorage;\n    let key = getLoginStatusKey(account);\n    let contractData = JSON.parse(storage.getItem(key)) || [];\n    contractData.push({\n      account: account,\n      isLogin: isLogin\n    });\n    storage.setItem(key, JSON.stringify(contractData));\n  }\n}\n\nexport const formatTransactionTime = (time) => {\n  return time.substr(0, time.indexOf(' ')).substr(0, 3) + '.' + ' ' + time.substr(time.indexOf(' ') + 1);\n}\n\n//超时则取消控件限制\nexport const diffMin = (eTime) => {\n  let date1 = moment(moment().valueOf());\n  let date2 = moment(eTime);\n  let minutes = date1.diff(date2, 'minute');\n  return minutes;\n}\n\n//bignumber\nexport const formatBigNumber = (bigNumber) => {\n  let NumStr = Number(bigNumber).toLocaleString().replace(/,/g, '')\n  const str = '000000000000000000';\n  if (NumStr.length < 18) {\n    bigNumber = '0.' + str.slice(0, str.length - NumStr.length) + NumStr.replace(/(0+)$/g, \"\");\n  } else {\n    bigNumber = (NumStr.slice(0, NumStr.length - 18) === '' ? 0 : NumStr.slice(0, NumStr.length - 18)) + '.' + NumStr.slice(NumStr.length - 18, NumStr.length - 10);\n  }\n  return bigNumber;\n}","import { findNetwork } from '../util.js';\n// let weth = require('./WETH_FAUCET_ABI.json');//测试用weth_faucet weth测试网修改的地方\n// let weth = require('./WETH_ABI.json');\n\nexport default function WETH() {\n    if (typeof web3 === 'undefined') {\n        return;\n    }\n    let NetworkName = findNetwork(window.web3.version.network);\n    let weth;\n    weth = require('./WETH_ABI.json')\n    //测试用weth_faucet weth测试网修改的地方\n    // if(NetworkName === 'Rinkeby') {\n    //     weth = require('./WETH_ABI.json')\n    // } else if (NetworkName === 'Main') {\n    //     weth = require('./WETH_FAUCET_ABI.json');\n    // }\n    const WETHSpec = window.web3.eth.contract(weth);\n    \n    var WETH;\n    if (NetworkName === 'Main') {\n        WETH = WETHSpec.at(\"0x06a1cd567e61b7edda49c30d3d32e60f607fd646\");////测试用weth_faucet\n    } else if (NetworkName === 'Rinkeby') {\n        WETH = WETHSpec.at(\"0xC8b1a5ef2e19937dd6c0f804DF2e3efE9F093B1e\");\n    }\n    return WETH;\n}","import { findNetwork } from '../util.js';\nlet usdx = require('./USDX_FAUCET_ABI.json');\n\nexport default function USDX() {\n    if (typeof web3 === 'undefined') {\n        return;\n    }\n    const usdxSpec = window.web3.eth.contract(usdx);\n    let NetworkName = findNetwork(window.web3.version.network);\n    // window.web3.version.getNetwork((e, r) => {\n    //     if (r) {\n    //         let NetworkName = findNetwork(r);\n    //         var USDX;\n    //         if (NetworkName === 'Main') {\n    //             USDX = usdxSpec.at(\"0x3a9e75afcffcd89613037989ea0ed6cec44a4353\");\n    //         } else if (NetworkName === 'Rinkeby') {\n    //             USDX = usdxSpec.at(\"0xaf21bb8ae7b7a5eec37964e478583cd486fd12e2\");\n    //         }\n    //         return USDX;\n    //     }\n    // })\n    // let NetworkName = findNetwork(r);\n    var USDX;\n    if (NetworkName === 'Main') {\n        USDX = usdxSpec.at(\"0x3a9e75afcffcd89613037989ea0ed6cec44a4353\");\n    } else if (NetworkName === 'Rinkeby') {\n        USDX = usdxSpec.at(\"0xaf21bb8ae7b7a5eec37964e478583cd486fd12e2\");\n    }\n    return USDX;\n}","import { findNetwork } from '../util.js';\nlet moneyMarket = require('./moneyMarket.json');\n\nexport default function MoneyMarket() {\n    if (typeof web3 === 'undefined') {\n        return;\n    }\n    const contractSpec = window.web3.eth.contract(moneyMarket);\n    // window.web3.version.getNetwork((e, r) => {\n    //     if (r) {\n    //         let NetworkName = findNetwork(r);\n    //         var MoneyMarket;\n    //         if (NetworkName === 'Main') {\n    //             MoneyMarket = contractSpec.at(\"0xeda3849869fd560b49dab8c110be3a020f46c79e\");\n    //         } else if (NetworkName === 'Rinkeby') {\n    //             MoneyMarket = contractSpec.at(\"0x5759F246E6b66B654c61Fec7427dc69E693E98fA\");\n    //         }\n    //     }\n    // })\n    let NetworkName = findNetwork(window.web3.version.network);\n    var MoneyMarket;\n    if (NetworkName === 'Main') {\n        MoneyMarket = contractSpec.at(\"0xeda3849869fd560b49dab8c110be3a020f46c79e\");\n    } else if (NetworkName === 'Rinkeby') {\n        MoneyMarket = contractSpec.at(\"0x5759F246E6b66B654c61Fec7427dc69E693E98fA\");\n    }\n    return MoneyMarket;\n}","import React from 'react';\nimport { toDoubleThousands } from './../../util.js';\nimport './coinInfo.scss'\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nconst CoinInfo = (props) => {\n  return (\n    <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n      <div className='balance-info'>\n        {/* <span className='balance-desc'>{props.balanceDescription || props.balanceType + ' ' + props.balanceUnit}</span> */}\n\n        <span className='balance-desc'>\n          {(props.balanceType + ' ' + props.balanceUnit) === 'USDx Balance' ? <FormattedMessage id='USDx_Balance' /> : null}\n          {(props.balanceType + ' ' + props.balanceUnit) === 'USDx Available' ? <FormattedMessage id='USDx_Available_borrow' /> : null}\n          {(props.balanceType + ' ' + props.balanceUnit) === 'ETH Balance' ? <FormattedMessage id='ETH_Balance' /> : null}\n          {(props.balanceType + ' ' + props.balanceUnit) === 'WETH Balance' ? <FormattedMessage id='WETH_Balance' /> : null}\n          {(props.balanceType + ' ' + props.balanceUnit) === 'WETH Available' ? <FormattedMessage id='WETH_Available' /> : null}\n        </span>\n\n        <span className='balance-amount'>{props.login ? toDoubleThousands(props.balanceAmount) : '-'}&nbsp;{props.balanceType || 'Ether'}</span>\n      </div>\n    </IntlProvider>\n  )\n}\n\nexport default CoinInfo;","import React, { Component } from 'react';\nimport CoinInfo from '../../component/coinInfo/coinInfo';\nimport './coinAvailable.scss';\n\nclass CoinAvailable extends Component {\n\n  render = () => {\n    const props = {\n      balanceDescription: '',\n      balanceAmount: this.props.fa_maxWithdrawAmount,\n      balanceType: 'WETH',\n      balanceUnit: 'Available',\n    }\n    return (\n      <CoinInfo {...props} login={this.props.login} />\n    )\n  }\n}\n\nexport default CoinAvailable;","import React, { Component } from 'react';\nimport CoinInfo from '../../component/coinInfo/coinInfo';\nimport WETH from '../../ABIs/WETH';\nimport USDX from \"./../../ABIs/USDX.js\";\nimport { toFormatShowNumber, toDoubleThousands } from '../../util.js';\n\n\nimport './coinBalance.scss';\n\nclass CoinBalance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usdxAccountBalance: 0,\n      ethAccountBalance: 0,\n      wethAccountBalance: 0\n    }\n    this.web3 = window.web3;\n\n    this.componentDidMount_temp();\n\n    if (window.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', () => {\n        this.componentDidMount_temp();\n      });\n    }\n  }\n\n  getAccountUSDXBalanceByAddress = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || USDX() === undefined) {\n      return;\n    }\n    USDX().balanceOf(this.web3.eth.accounts[0],\n      (err, res) => {\n        let usdxBalance = 0;\n        if (res !== undefined && res !== null) {\n          usdxBalance = this.web3.fromWei(res.toNumber(), \"ether\");\n        }\n        if (this.state.usdxAccountBalance !== usdxBalance) {\n          this.setState({ usdxAccountBalance: usdxBalance })\n        }\n      }\n    );\n  }\n\n  getAccountETHBalance = () => {\n    if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined) {\n      this.web3.eth.getBalance(this.web3.eth.accounts[0], (err, balance) => {\n        if (balance !== undefined && balance !== null) {\n          this.setState({ ethAccountBalance: toFormatShowNumber(this.web3.fromWei(balance.toNumber(), \"ether\")) });\n          this.getMyAddressWETHBalance();\n        }\n      });\n    }\n  }\n\n  getMyAddressWETHBalance = () => {\n    // console.log('getMyAddressWETHBalance');\n    if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined) {\n      WETH().balanceOf(this.web3.eth.accounts[0], (err, res) => {\n        let wethBalanceAmount = 0;\n        if (res !== undefined && res !== null) {\n          wethBalanceAmount = res.toNumber();\n          this.setState({ wethAccountBalance: toFormatShowNumber(this.web3.fromWei(wethBalanceAmount, \"ether\")) }, () => {\n            // console.log(this.state.wethAccountBalance);\n          });\n        }\n      });\n    }\n  }\n  componentDidMount_temp = () => {\n    // this.getAccountUSDXBalanceByAddress();\n    // this.getAccountETHBalance();\n    // this.getMyAddressWETHBalance();  \n\n    setTimeout(() => {\n      this.getAccountUSDXBalanceByAddress();\n      this.getAccountETHBalance();\n      this.getMyAddressWETHBalance();\n    }, 700);\n\n    this.timerID = setInterval(() => {\n      if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined) {\n        this.getAccountUSDXBalanceByAddress();\n        this.getAccountETHBalance();\n        this.getMyAddressWETHBalance();\n      }\n    }, 1000 * 15);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    const props = {\n      balanceDescription: '',\n      // balanceAmount: this.props.coin === 'eth' ? this.state.ethAccountBalance : this.props.coin === 'weth' ? this.state.wethAccountBalance : this.state.usdxAccountBalance,\n      balanceAmount: this.props.coin === 'eth' ? this.state.ethAccountBalance : this.props.coin === 'weth' ? this.props.father_max_Unwrap_Amount : this.state.usdxAccountBalance,\n      balanceType: this.props.coin === 'eth' ? 'ETH' : this.props.coin === 'weth' ? 'WETH' : 'USDx',\n      balanceUnit: 'Balance',\n    }\n\n    return <CoinInfo {...props} login={window.web3.eth.accounts[0]} />\n\n\n    // <div className='balance-info'>\n    //   <span className='balance-desc'>{props.balanceDescription || props.balanceType + ' ' + props.balanceUnit}</span>\n    //   <span className='balance-amount'>{window.web3.eth.accounts[0] ? toDoubleThousands(props.balanceAmount) : '-'}&nbsp;{props.balanceType || 'Ether'}</span>\n    // </div>\n\n    // <CoinInfo {...props} login={this.props.login} />\n  }\n}\n\nexport default CoinBalance;","import React from 'react';\nimport { toDoubleThousands } from '../../util.js';\n\nimport './coinInfoWithIcon.scss'\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nconst CoinInfoWithIcon = (props) => {\n  const web3 = window.web3;\n  return (\n    <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n      <div className='info-wrapper'>\n        <span className='balance-type'>\n          <img style={{ width: '16px', height: '16px', margin: 'auto' }} src={`images/${props.coin}@2x.png`} alt=\"\" />\n          &nbsp;\n          {/* {props.coin}&nbsp;{props.action} */}\n          {/* {(props.coin + ' ' + props.action) === 'USDx Supplied' ? <FormattedMessage id='USDx_Supplied' /> : null} */}\n          {(props.coin + ' ' + props.action) === 'WETH Supplied' ? <FormattedMessage id='WETH_Supplied' /> : null}\n          {(props.coin + ' ' + props.action) === 'USDx Borrowed' ? <FormattedMessage id='USDx_Borrowed_borrow' /> : null}\n        </span>\n\n        <span className='balance-amount'>\n          {(typeof web3 === 'undefined' || web3.eth.accounts[0] === undefined || web3.eth.accounts[0] === '' || !props.login)\n            ?\n            '-' : toDoubleThousands(props.coinBalance)}\n        </span>\n      </div>\n    </IntlProvider>\n  )\n}\n\nexport default CoinInfoWithIcon;","import React, { Component } from 'react';\nimport MoneyMarket from '../../ABIs/MoneyMarket.js';\nimport Network from '../../constant.json';\nimport './balanceInfoWithIcon.scss';\nimport { findNetwork } from '../../util.js';\nimport CoinInfoWithIcon from '../../component/coinInfoWithIcon/coinInfoWithIcon';\n\nclass BalanceInfoWithIcon extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      suppliedwethBalance: 0,\n      suppliedusdxBalance: 0,\n      borrowedusdxBalance: 0\n    }\n    this.web3 = window.web3;\n\n    // this.componentDidMount_temp();\n    window.web3.version.getNetwork((e, r) => {\n      if (r) {\n        this.setState({\n          NetworkName: r\n        }, () => {\n          this.componentDidMount_temp();\n        })\n      }\n    })\n\n    if (window.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', () => {\n        this.componentDidMount_temp();\n      });\n    }\n  }\n\n  get_Supply_WETH_Amount = () => {\n    if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined && MoneyMarket() !== undefined) {\n      let wethAddress = '';\n      let NetworkName = findNetwork(this.state.NetworkName);\n      if (NetworkName === 'Main') {\n        wethAddress = Network.Main.WETH;\n      } else if (NetworkName === 'Rinkeby') {\n        wethAddress = Network.Rinkeby.WETH;\n      }\n      MoneyMarket().getSupplyBalance(this.web3.eth.accounts[0],\n        wethAddress,\n        (err, res) => {\n          if (res !== undefined && res !== null) {\n            this.setState({ suppliedwethBalance: this.web3.fromWei(res.toNumber(), \"ether\") });\n          }\n        }\n      );\n    }\n  }\n\n  componentDidMount_temp = () => {\n    setTimeout(() => {\n      this.get_Supply_WETH_Amount();\n    }, 700);\n    this.timerID = setInterval(() => {\n      if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined) {\n        this.get_Supply_WETH_Amount();\n      }\n    }, 1000 * 15);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    const props = {\n      coin: this.props.coin,\n      action: this.props.action,\n      coinBalance: this.state.suppliedwethBalance,\n      login: this.web3.eth.accounts[0]\n    }\n    return <CoinInfoWithIcon {...props} />\n  }\n}\n\nexport default BalanceInfoWithIcon;","import React, { Component } from 'react';\nimport { Tabs, Input, Button, InputNumber } from 'antd'\nimport Approve from '../../component/approve/approve';\nimport InputUnit from '../../component/inputUnit/inputUnit';\nimport WrapInputUnit from '../../component/inputUnit/wrapInputUnit';\nimport UnWrapInputUnit from '../../component/inputUnit/unWrapInputUnit';\nimport WETH from '../../ABIs/WETH'\nimport USDX from \"../../ABIs/USDX.js\";\nimport MoneyMarket from './../../ABIs/MoneyMarket.js';\nimport { saveTransaction, getTxnHashHref, toDoubleThousands, validNumber, toFormatShowNumber, toFormat10Number, getTransactionHistoryKey, findNetwork, diffMin, formatBigNumber } from '../../util.js'\nimport Asset from '../../constant.json';\nimport Network from '../../constant.json';\nimport './supplyInput.scss';\nimport CoinAvailable from './../coinAvailable/coinAvailable_2_1';\nimport CoinBalance from './../coinBalance/coinBalance';\nimport BalanceInfoWithIcon from './../balanceInfoWithIcon/balanceInfoWithIcon_borrow';\nimport ErrorCode from '../../error_code.json';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nconst { TabPane } = Tabs;\n\nclass SupplyInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: '',\n      pendingApproval: false,\n      isApproved: false,\n      isSupplyEnable: true,\n      isWithdrawEnable: true,\n      isWrapEnable: true,\n      isunwrapEnable: true,\n      supplyAmount: '',\n      withdrawAmount: '',\n      withdrawMax: false,\n      maxWithdrawAmount: 0,\n      maxUnwrapAmount: 0,\n      wrapAmount: '',\n      unwrapAmount: '',\n      coinAllowance: 0,\n      accountBalance: 0,\n      ethAccountBalance: 0,\n      wethAccountBalance: 0,\n      supplyAccountBalance: 0,\n      supplyWETHBalance: 0,\n      buttonText: '',\n      supplyButtonText: '',\n      withdrawButtonText: '',\n      collateralRatio: 0,\n      assetBalance: 0,\n      gasPrice: 0,\n      gasLimit: 0,\n      supplyAssetPrice: 0,\n      calcWETHPrice: 0,\n      supplyInputDisabled: false,\n      withdrawInputDisabled: false,\n      wrapInputDisabled: false,\n      unwrapInputDisabled: false,\n      maxClassName: 'max-amount-button',\n      withdrawMaxClassName: 'max-amount-button',\n      unwrapMaxClassName: 'max-amount-button',\n      //check\n      supplyUSDxWaitUpdateForSuccessMap: new Map(),\n      supplyUSDxWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      supplyUSDxWaitTimeOutMap: new Map(),\n      withdrawUSDxWaitUpdateForSuccessMap: new Map(),\n      withdrawUSDxWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      withdrawUSDxWaitTimeOutMap: new Map(),\n      supplyWrapWaitUpdateForSuccessMap: new Map(),\n      supplyWrapWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      supplyWrapWaitTimeOutMap: new Map(),\n      supplyUnwrapWaitUpdateForSuccessMap: new Map(),\n      supplyUnwrapWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      supplyUnwrapWaitTimeOutMap: new Map(),\n      supplyWETHWaitUpdateForSuccessMap: new Map(),\n      supplyWETHWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      supplyWETHWaitTimeOutMap: new Map(),\n      withdrawWETHWaitUpdateForSuccessMap: new Map(),\n      withdrawWETHWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      withdrawWETHWaitTimeOutMap: new Map(),\n      enableUSDxWaitUpdateForSuccessMap: new Map(),\n      enableUSDxWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      enableUSDxWaitTimeOutMap: new Map(),\n      enableWETHWaitUpdateForSuccessMap: new Map(),\n      enableWETHWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      enableWETHWaitTimeOutMap: new Map(),\n      //超时则取消控件限制\n      timeOutTimes: 5,\n      i_clicked_approve_btn: 0\n    }\n    this.web3 = window.web3;\n\n    if (window.ethereum === undefined) {\n      return;\n    }\n\n    if (window.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', (accounts) => {\n        setTimeout(this.refreshData(), 500);\n        this.getAllowance();\n        this.get_My_WETH_Supplied_max_Withdraw_WETH_Amount();\n        this.getAccountBalance();\n        this.getMyAddressWETHBalance();\n        this.setState({ supplyAmount: '', withdrawAmount: '', wrapAmount: '', unwrapAmount: '' });\n        // reset button&inputText status\n        this.setState({ isWrapEnable: true, wrapInputDisabled: false });\n        this.setState({ isunwrapEnable: true, unwrapInputDisabled: false });\n        this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n        this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n        this.setState({ pendingApproval: false });\n      });\n    }\n\n\n\n    // this.componentDidMount_temp();\n    window.web3.currentProvider.enable().then(\n      res => {\n        this.setState({ isLogIn: true }, () => {\n          window.web3.version.getNetwork((e, r) => {\n            if (r) {\n              this.setState({\n                NetworkName: r\n              }, () => {\n                setTimeout(() => {\n                  this.componentDidMount_temp();\n                }, 2000)\n              })\n            }\n          })\n\n        });\n      }\n    )\n\n    if (window.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', () => {\n        this.componentDidMount_temp();\n      });\n    }\n\n  };\n\n  // get_Account_ETH_Balance\n  getAccountETHBalance = () => {\n    if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined) {\n      this.web3.eth.getBalance(this.web3.eth.accounts[0], (err, balance) => {\n        if (balance !== undefined && balance !== null) {\n          this.setState({ ethAccountBalance: toFormatShowNumber(this.web3.fromWei(balance.toNumber(), \"ether\")), ethAccountBalance_BN: balance });\n        }\n      });\n    }\n  }\n\n  // get_MyAddress_WETH_Balance\n  getMyAddressWETHBalance = () => {\n    // console.log('wethBalanceAmount');\n    if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined && WETH() !== undefined) {\n      WETH().balanceOf(this.web3.eth.accounts[0], (err, res) => {\n        let wethBalanceAmount = 0;\n        if (res !== undefined && res !== null) {\n          wethBalanceAmount = res.toNumber();\n          this.setState({\n            wethAccountBalance: toFormatShowNumber(this.web3.fromWei(wethBalanceAmount, \"ether\")),\n            maxUnwrapAmount: toFormat10Number(this.web3.fromWei(wethBalanceAmount, \"ether\")),\n            maxUnwrapAmount_BN: res\n          }, () => {\n            // console.log(this.state.wethAccountBalance);\n          });\n        }\n      });\n    }\n  }\n\n  getAccountBalance = () => {\n    if (window.web3 !== undefined && this.web3.eth.accounts[0] !== undefined && this.props.coin !== undefined) {\n      this.props.coin.balanceOf(this.web3.eth.accounts[0], (err, res) => {\n        let balance = 0;\n        //SupplyMax\n        if (res !== undefined && res !== null) {\n          balance = formatBigNumber(res);\n        }\n        // let AccountBalance = toFormatShowNumber(this.web3.fromWei(balance, \"ether\"))\n        let AccountBalance = toFormatShowNumber(balance)\n        // let MaxSupplyAmount = this.web3.fromWei(balance, \"ether\");\n        let MaxSupplyAmount = balance;\n        if (this.state.accountBalance !== AccountBalance) {\n          this.setState({ accountBalance: AccountBalance });\n          this.setState({ isSupplyEnable: true });\n          // this.setState({ buttonText: this.props.supplyButtonInfo });\n          this.setState({ supplyAmount: '' });\n        }\n        if (this.state.maxSupplyAmount !== MaxSupplyAmount) {\n          // this.setState({ maxSupplyAmount: this.web3.fromWei(balance, \"ether\") });\n          this.setState({ maxSupplyAmount: balance, maxSupplyAmount_BN: res });\n        }\n      });\n    }\n  }\n\n\n  getAllowance = () => {\n    // console.log('---------------------------')\n    // console.log('into Allowance.. this.web3.eth.accounts[0]:' + this.web3.eth.accounts[0] + ' / this.props.coin:' + this.props.coin)\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || this.props.coin === undefined) {\n      console.log('---------ka zai zhe li le')\n      return;\n    }\n    let mmAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    mmAddress = Network[NetworkName].MoneyMarket;\n    this.props.coin.allowance(\n      this.web3.eth.accounts[0],\n      mmAddress,\n      (err, res) => {\n        let allowanceVal = -1;\n        if (res !== undefined && res !== null) {\n          allowanceVal = res.toNumber();\n        }\n        // console.log('===>' + this.web3.eth.accounts[0] + ' / allowanceVal:' + allowanceVal + ' / isApproved:' + this.state.isApproved)\n\n        if (allowanceVal > 0) {\n          this.setState({ coinAllowance: allowanceVal, isApproved: true }, () => {\n            // console.log(this.state.isApproved);\n          });\n        } else {\n          this.setState({ isApproved: false, pendingApproval: false, buttonText: this.props.approveButtonInfo });\n        }\n      });\n  }\n\n\n\n  get_My_WETH_Supplied_max_Withdraw_WETH_Amount = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || WETH() === undefined || MoneyMarket() === undefined) {\n      return;\n    }\n    let wethAddress = '';\n    let mmAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      wethAddress = Network.Main.WETH;\n      mmAddress = Network.Main.MoneyMarket;\n    } else if (NetworkName === 'Rinkeby') {\n      wethAddress = Network.Rinkeby.WETH;\n      mmAddress = Network.Rinkeby.MoneyMarket;\n    }\n    MoneyMarket().getAccountLiquidity(this.web3.eth.accounts[0], (error, res_Account_Liquidity_BN) => {\n      if (res_Account_Liquidity_BN) {\n        MoneyMarket().assetPrices(wethAddress, (err, res_usdx_price_BN) => {\n          if (res_usdx_price_BN) {\n            res_Account_Liquidity_BN = res_Account_Liquidity_BN.mul(this.web3.toBigNumber(10 ** 18)).div(res_usdx_price_BN);\n            // console.log(res_Account_Liquidity_BN)\n            MoneyMarket().getSupplyBalance(this.web3.eth.accounts[0], wethAddress, (err, res_supplied_BN) => {\n              if (res_supplied_BN) {\n                WETH().balanceOf(mmAddress, (err, res_cash_BN) => {\n                  if (res_cash_BN) {\n                    // console.log(res_Account_Liquidity_BN.toLocaleString())\n                    // console.log(res_supplied_BN.toLocaleString())\n                    // console.log(res_cash_BN.toLocaleString())\n                    let moreSmallNum = res_Account_Liquidity_BN.sub(res_supplied_BN).toNumber() < 0 ? res_Account_Liquidity_BN : res_supplied_BN;\n                    let mostSmallNum = moreSmallNum.sub(res_cash_BN).toNumber() < 0 ? moreSmallNum : res_cash_BN;\n                    // console.log(mostSmallNum.toLocaleString())\n                    if (!(mostSmallNum.gt(this.web3.toBigNumber(0)))) {\n                      this.setState({ maxWithdrawAmount: 0 });\n                      return;\n                    }\n                    this.setState({\n                      maxWithdrawAmount: this.web3.fromWei(mostSmallNum.toNumber(), \"ether\"),\n                      maxWithdrawAmount_BN: mostSmallNum\n                    });\n                  }\n                })\n\n              }\n            })\n          }\n        })\n      }\n    })\n  }\n\n\n\n\n\n  // approve weth\n  handleApprove = () => {\n    this.setState({ isApproved: false, buttonText: 'ENABLEING WETH...', pendingApproval: true, i_clicked_approve_btn: 1 });\n    let mmAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      mmAddress = Network.Main.MoneyMarket;\n    } else if (NetworkName === 'Rinkeby') {\n      mmAddress = Network.Rinkeby.MoneyMarket;\n    }\n    this.props.coin.approve.estimateGas(mmAddress, -1, { from: this.web3.eth.accounts[0] }, (err, gasLimit) => {\n      this.web3.eth.getGasPrice((err, gasPrice) => {\n        console.log('gasLimit:' + gasLimit);\n        console.log('gasPrice:' + gasPrice);\n        this.props.coin.approve.sendTransaction(\n          mmAddress,\n          -1,\n          {\n            from: this.web3.eth.accounts[0],\n            gas: gasLimit,\n            gasPrice: gasPrice\n          },\n          (err, res) => {\n            if (res !== undefined) {\n              let txId = res;\n              let txnHashHref = getTxnHashHref(this.state.NetworkName) + res;\n              this.setState({ getHash: true, hashNumber: res, i_clicked_approve_btn: 0 });\n              if (this.props.wethCoin === true) {\n                saveTransaction('loading-supply-weth-approve', this.web3.eth.accounts[0], Asset['Asset'].WETH, this.props.page,\n                  this.state.NetworkName, 'Enable', null, 'WETH', txnHashHref, txId, 0, null, false, null);\n              } else if (this.props.usdxCoin === true) {\n                saveTransaction('loading-supply-usdx-approve', this.web3.eth.accounts[0], Asset['Asset'].USDx, this.props.page,\n                  this.state.NetworkName, 'Enable', null, 'USDx', txnHashHref, txId, 0, null, false, null);\n              }\n            } else {\n              this.setState({ isApproved: false, pendingApproval: false, i_clicked_approve_btn: 0, buttonText: this.props.approveButtonInfo });\n            }\n          }\n        )\n      }\n      )\n    }\n    );\n  };\n\n  // supply_weth\n  handleSupplyClick = () => {\n    if (this.state.supplyAmount === '' || this.state.supplyAmount === 0 || this.state.supplyAmount === null) {\n      return;\n    }\n    this.setState({ isSupplyEnable: false, supplyButtonText: 'SUBMITTING…', supplyInputDisabled: true, maxClassName: 'max-amount-button-disable' });\n    let supplyAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      supplyAddress = Network.Main.WETH;\n    } else if (NetworkName === 'Rinkeby') {\n      supplyAddress = Network.Rinkeby.WETH;\n    }\n\n    let amount_num = this.web3.toBigNumber(this.state.supplyAmount).mul(this.web3.toBigNumber(10 ** 18));\n    if (this.state.i_will_supply_max) {\n      amount_num = this.state.maxSupplyAmount_BN;\n    }\n\n    MoneyMarket().supply.estimateGas(supplyAddress, amount_num, { from: this.web3.eth.accounts[0] }, (err, gasLimit) => {\n      this.web3.eth.getGasPrice((err, gasPrice) => {\n        MoneyMarket().supply.sendTransaction(\n          supplyAddress,\n          amount_num,\n          {\n            from: this.web3.eth.accounts[0],\n            gas: gasLimit,\n            gasPrice: gasPrice\n          },\n          (err, res) => {\n            if (res !== undefined && res !== null) {\n              let txId = res;\n              let txnHashHref = getTxnHashHref(this.state.NetworkName) + res;\n              let recordSupplyAmount = toDoubleThousands(this.state.supplyAmount);\n              if (this.props.wethCoin === true) {\n                saveTransaction('loading-supply-weth', this.web3.eth.accounts[0], Asset['Asset'].WETH, this.props.page,\n                  this.state.NetworkName, 'Supply', recordSupplyAmount, 'WETH', txnHashHref, txId, 0, this.web3.toWei(this.state.supplyAmount, \"ether\"), false, null);\n              } else if (this.props.usdxCoin === true) {\n                saveTransaction('loading-supply-usdx', this.web3.eth.accounts[0], Asset['Asset'].USDx, this.props.page,\n                  this.state.NetworkName, 'Supply', recordSupplyAmount, 'USDx', txnHashHref, txId, 0, this.web3.toWei(this.state.supplyAmount, \"ether\"), false, null);\n              }\n            } else {\n              this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n            }\n          }\n        )\n      })\n    });\n  }\n\n\n\n  handleSupplyChange = (value) => {\n    if (value.length > 18) {\n      return;\n    }\n    this.setState({\n      i_will_supply_max: false\n    });\n    // console.log(value);\n    if (value === null || value === '') {\n      console.log(\"value === null || value === ''\")\n      this.setState({\n        isSupplyEnable: true,\n        supplyButtonText: this.props.supplyButtonInfo,\n        supplyAmount: ''\n      });\n      return;\n    } else if (this.web3.toBigNumber(value).mul(this.web3.toBigNumber(10 ** 18)).sub(this.state.maxSupplyAmount_BN) > 0) {\n      let supplyButtonText = 'INSUFFICIENT BALANCE';\n      this.setState({\n        supplyAmount: value,\n        isSupplyEnable: false,\n        supplyButtonText: supplyButtonText\n      });\n      return;\n    }\n\n    this.setState({ supplyAmount: value });\n\n    if ((Number(value)) === 0) {\n      this.setState({ isSupplyEnable: false, supplyButtonText: this.props.supplyButtonInfo });\n    } else {\n      this.setState({ isSupplyEnable: true });\n    }\n  }\n\n  handleSupplyMax = () => {\n    console.log(this.state.maxSupplyAmount_BN)\n    let withdraw_to_show = this.state.maxSupplyAmount_BN.div(this.web3.toBigNumber(10 ** 18)).toLocaleString().substring(0, 18);\n    this.setState({\n      supplyAmount: withdraw_to_show,\n      i_will_supply_max: true\n    }, () => {\n      if (Number(this.state.maxSupplyAmount) === 0) {\n        this.setState({ isSupplyEnable: false, supplyButtonText: this.props.supplyButtonInfo });\n      } else {\n        this.setState({ isSupplyEnable: true });\n      }\n    });\n  }\n\n  handleWithdrawChange = (value) => {\n    if (value.length > 18) {\n      return;\n    }\n    this.setState({\n      withdrawMax: false\n    });\n    console.log(value)\n    if (value === null || value === '') {\n      this.setState({\n        isWithdrawEnable: true,\n        withdrawButtonText: this.state.withdrawButtonInfo,\n        withdrawAmount: '',\n        withdrawMax: false\n      });\n      return;\n    } else if (this.web3.toBigNumber(value).mul(this.web3.toBigNumber(10 ** 18)).sub(this.state.maxWithdrawAmount_BN) > 0) {\n      this.setState({\n        withdrawAmount: value,\n        isWithdrawEnable: false,\n        withdrawButtonText: 'INSUFFICIENT LIQUIDITY'\n      });\n      return;\n    }\n\n    this.setState({ withdrawAmount: value });\n\n    if ((Number(value)) === 0) {\n      this.setState({ isWithdrawEnable: false, withdrawButtonText: 'INSUFFICIENT LIQUIDITY' });\n    } else {\n      this.setState({ isWithdrawEnable: true });\n    }\n  }\n\n  handleWithdrawMax = () => {\n    let withdraw_to_show = this.state.maxWithdrawAmount_BN.div(this.web3.toBigNumber(10 ** 18)).toLocaleString().substring(0, 18);\n    this.setState({\n      withdrawAmount: withdraw_to_show,\n      withdrawMax: true\n    });\n\n    if (Number(this.state.maxWithdrawAmount) === 0) {\n      this.setState({ isWithdrawEnable: false, withdrawButtonText: 'INSUFFICIENT LIQUIDITY' });\n    } else {\n      this.setState({ isWithdrawEnable: true });\n    }\n  }\n\n  handleWithdrawClick = () => {\n    if (this.state.withdrawAmount === '' || Number(this.state.withdrawAmount) === 0 || this.state.withdrawAmount === null) {\n      return;\n    }\n    if (this.state.withdrawAmount > this.state.maxWithdrawAmount) {\n      this.setState({ withdrawAmount: this.state.maxWithdrawAmount })\n    }\n    let amount = this.web3.toBigNumber(this.state.withdrawAmount).mul(this.web3.toBigNumber(10 ** 18));\n    if (this.state.withdrawMax) {\n      amount = -1;\n    }\n    this.setState({ isWithdrawEnable: false, withdrawButtonText: 'SUBMITTING…', withdrawInputDisabled: true, withdrawMaxClassName: 'max-amount-button-disable' });\n    let withdrawAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      withdrawAddress = Network.Main.WETH;\n    } else if (NetworkName === 'Rinkeby') {\n      withdrawAddress = Network.Rinkeby.WETH;\n    }\n    MoneyMarket().withdraw.estimateGas(withdrawAddress, amount, { from: this.web3.eth.accounts[0] }, (err, gasLimit) => {\n      this.web3.eth.getGasPrice((err, gasPrice) => {\n        MoneyMarket().withdraw.sendTransaction(\n          withdrawAddress,\n          amount,\n          {\n            from: this.web3.eth.accounts[0],\n            gas: gasLimit,\n            gasPrice: gasPrice\n          },\n          (err, res) => {\n            if (res !== undefined && res !== null) {\n              let txId = res;\n              let txnHashHref = getTxnHashHref(this.state.NetworkName) + res;\n              let recordWithdrawAmount = (amount === -1) ? toDoubleThousands(this.state.maxWithdrawAmount) : toDoubleThousands(this.state.withdrawAmount);\n              if (this.props.wethCoin === true) {\n                saveTransaction('loading-supply-withdraw-weth', this.web3.eth.accounts[0], Asset['Asset'].WETH,\n                  this.props.page, this.state.NetworkName, 'Withdraw', recordWithdrawAmount, 'WETH', txnHashHref, txId, 0, this.state.withdrawMax === true ? -1 : this.web3.toWei(this.state.withdrawAmount, \"ether\"), false, null);\n              } else if (this.props.usdxCoin === true) {\n                saveTransaction('loading-supply-withdraw-usdx', this.web3.eth.accounts[0], Asset['Asset'].USDx,\n                  this.props.page, this.state.NetworkName, 'Withdraw', recordWithdrawAmount, 'USDx', txnHashHref, txId, 0, this.state.withdrawMax === true ? -1 : this.web3.toWei(this.state.withdrawAmount, \"ether\"), false, null);\n              }\n            } else {\n              this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n            }\n          }\n        )\n      })\n    });\n  }\n\n\n  handleWrapChange = (value) => {\n    if (value.length > 18) {\n      return;\n    }\n    // console.log(value)\n    if (value === null || value === '') {\n      this.setState({ wrapAmount: '', isWrapEnable: true });\n      return;\n    } else if (this.web3.toBigNumber(value).mul(this.web3.toBigNumber(10 ** 18)).sub(this.state.ethAccountBalance_BN) > 0) {\n      this.setState({ wrapAmount: value, isWrapEnable: false });\n      return;\n    }\n\n    this.setState({ wrapAmount: value });\n\n    if ((Number(value)) === 0) {\n      this.setState({ isWrapEnable: false });\n    } else {\n      this.setState({ isWrapEnable: true });\n    }\n  }\n\n  handleWrapClick = () => {\n    if (this.state.wrapAmount === '' || this.web3.eth.accounts[0] === undefined) {\n      return;\n    }\n    this.setState({ isWrapEnable: false, wrapInputDisabled: true })\n    WETH().deposit.estimateGas(\n      {\n        from: this.web3.eth.accounts[0],\n        value: this.web3.toWei(this.state.wrapAmount, \"ether\")\n      },\n      (err, gasLimit) => {\n        console.log('gasLimit:' + gasLimit);\n        this.web3.eth.getGasPrice((err, gasPrice) => {\n          console.log('gasPrice:' + gasPrice);\n          if (gasPrice === undefined && gasPrice === null) {\n            console.err('gasPrice is ' + gasPrice)\n            return;\n          }\n          WETH().deposit.sendTransaction(\n            {\n              from: this.web3.eth.accounts[0],\n              value: this.web3.toWei(this.state.wrapAmount, \"ether\"),\n              gas: gasLimit,\n              gasPrice: gasPrice\n            },\n            (err, res) => {\n              if (res !== undefined && res !== null) {\n                let txId = res;\n                let txnHashHref = getTxnHashHref(this.state.NetworkName) + res;\n                saveTransaction('loading-supply-wrap', this.web3.eth.accounts[0], Asset['Asset'].WETH,\n                  this.props.page, this.state.NetworkName, 'Wrap', toDoubleThousands(this.state.wrapAmount), 'ETH', txnHashHref, txId, 0, this.web3.toWei(this.state.wrapAmount, \"ether\"), false, null);\n              } else {\n                this.setState({ isWrapEnable: true, wrapInputDisabled: false })\n              }\n            }\n          )\n        }\n        )\n      }\n    );\n  }\n\n\n  // unwrap\n  handleunwrapChange = (value) => {\n    if (value.length > 18) {\n      return;\n    }\n    this.setState({\n      i_will_unwrap_max: false\n    });\n    console.log(value);\n    if (value === null || value === '') {\n      this.setState({\n        unwrapAmount: '',\n        isunwrapEnable: true\n      });\n      return;\n    } else if (this.web3.toBigNumber(value).mul(this.web3.toBigNumber(10 ** 18)).sub(this.state.maxUnwrapAmount_BN) > 0) {\n      this.setState({ unwrapAmount: value, isunwrapEnable: false });\n      return;\n    }\n\n    // if (value.toString().indexOf('.') === value.toString().length - 1) {\n    //   value = value + '00'\n    // }\n\n    this.setState({ unwrapAmount: value });\n\n    if ((Number(value)) === 0) {\n      this.setState({ isunwrapEnable: false });\n    } else {\n      this.setState({ isunwrapEnable: true });\n    }\n  }\n\n  // handle_unwrap_Max\n  handleunwrapMax = () => {\n    let withdraw_to_show = this.state.maxUnwrapAmount_BN.div(this.web3.toBigNumber(10 ** 18)).toLocaleString().substring(0, 18);\n    this.setState({\n      unwrapAmount: withdraw_to_show,\n      i_will_unwrap_max: true\n    }, () => {\n      if (Number(this.state.maxUnwrapAmount) === 0) {\n        this.setState({ isunwrapEnable: false });\n      } else {\n        this.setState({ isunwrapEnable: true });\n      }\n    });\n  }\n\n  handleunwrapClick = () => {\n    if (this.state.unwrapAmount === '' || this.state.unwrapAmount === null || Number(this.state.unwrapAmount) === 0) {\n      return;\n    }\n    this.setState({ isunwrapEnable: false, unwrapInputDisabled: true, unwrapMaxClassName: 'max-amount-button-disable' });\n\n    let num_amount = this.web3.toBigNumber(this.state.unwrapAmount).mul(this.web3.toBigNumber(10 ** 18));\n    if (this.state.i_will_unwrap_max) {\n      num_amount = this.state.maxUnwrapAmount_BN;\n    }\n\n    WETH().withdraw.estimateGas(num_amount, { from: this.web3.eth.accounts[0] }, (err, gasLimit) => {\n      this.web3.eth.getGasPrice((err, gasPrice) => {\n        WETH().withdraw.sendTransaction(\n          num_amount,\n          {\n            from: this.web3.eth.accounts[0],\n            gas: gasLimit,\n            gasPrice: gasPrice\n          },\n          (err, res) => {\n            if (res !== undefined && res !== null) {\n              let txId = res;\n              let txnHashHref = getTxnHashHref(this.state.NetworkName) + res;\n              saveTransaction('loading-supply-unwrap', this.web3.eth.accounts[0], Asset['Asset'].WETH, this.props.page,\n                this.state.NetworkName, 'Unwrap', toDoubleThousands(this.state.unwrapAmount), 'ETH', txnHashHref, txId, 0, this.web3.toWei(this.state.unwrapAmount, \"ether\"), false, null);\n            } else {\n              this.setState({ isunwrapEnable: true, unwrapInputDisabled: false });\n            }\n          }\n        )\n      }\n      )\n    }\n    );\n  }\n\n\n\n  usdxEventMonitor = () => {\n    if (USDX() === undefined) {\n      return;\n    }\n    let that = this;\n    var approvalUSDXEvent = USDX().Approval();\n    approvalUSDXEvent.watch((error, result) => {\n      console.log('watch lend-> approvalUSDXEvent:' + JSON.stringify(result));\n      if (error) {\n        console.log('watch lend usdxEventMonitor approvalUSDXEvent error --> ' + JSON.stringify(error));\n        return;\n      }\n      var storage = null;\n      var results = null;\n      var key = null;\n      if (window.localStorage) {\n        if (typeof web3 === 'undefined') {\n          return;\n        }\n        storage = window.localStorage;\n        key = getTransactionHistoryKey(that.props.account, Asset['Asset'].USDx, that.props.page, that.state.NetworkName);\n        results = JSON.parse(`${storage.getItem(key)}`);\n      }\n      if (results === null) {\n        return;\n      }\n      let resultObj = JSON.parse(JSON.stringify(result));\n      var txId = resultObj.transactionHash;\n      this.getAllowance();\n      this.setState({ pendingApproval: false, isApproved: true });\n      storage.removeItem(key);\n      results = results.map(item => {\n        if (item.status === 0 && item.transactionType === 'Enable' && item.txId !== txId) {\n          let txnHashHref = getTxnHashHref(that.state.NetworkName) + txId;\n          return {\n            ...item,\n            icon: 'done',\n            status: 1,\n            txId: txId,\n            txnHashHref: txnHashHref\n          }\n        } else if (item.txId === txId) {\n          return {\n            ...item,\n            icon: 'done',\n            status: 1\n          }\n        }\n        return {\n          ...item\n        }\n      })\n      storage.setItem(key, JSON.stringify(results));\n    });\n  }\n\n  wethEventMonitor = () => {\n    if (WETH() === undefined) {\n      return;\n    }\n    let that = this;\n    var approvalWETHEvent = WETH().Approval();\n    approvalWETHEvent.watch((error, result) => {\n      console.log('watch -> approvalWETHEvent:' + JSON.stringify(result));\n      if (error) {\n        console.log('watch wethEventMonitor approvalWETHEvent error --> ' + JSON.stringify(error));\n        return;\n      }\n      var storage = null;\n      var results = null;\n      var key = null;\n      if (window.localStorage) {\n        if (typeof web3 === 'undefined') {\n          return;\n        }\n        storage = window.localStorage;\n        key = getTransactionHistoryKey(that.props.account, Asset['Asset'].WETH, that.props.page, that.state.NetworkName);\n        results = JSON.parse(`${storage.getItem(key)}`);\n      }\n      if (results === null) {\n        return;\n      }\n      let resultObj = JSON.parse(JSON.stringify(result));\n      var txId = resultObj.transactionHash;\n      this.getAllowance();\n      this.setState({ pendingApproval: false, isApproved: true });\n      // change icon and status = 1 by txId\n      storage.removeItem(key);\n      results = results.map(item => {\n        if (item.status === 0 && item.transactionType === 'Enable' && item.txId !== txId) {\n          let txnHashHref = getTxnHashHref(this.state.NetworkName) + txId;\n          return {\n            ...item,\n            icon: 'done',\n            status: 1,\n            txId: txId,\n            txnHashHref: txnHashHref\n          }\n        } else if (item.txId === txId) {\n          return {\n            ...item,\n            icon: 'done',\n            status: 1\n          }\n        }\n        return {\n          ...item\n        }\n      })\n      storage.setItem(key, JSON.stringify(results));\n    });\n    //测试用weth_faucet 暂时注释\n    // if (NetworkName === 'Rinkeby') {//测试用weth_faucet 暂时注释  主网支持后放开判断\n    var depositWETHEvent = WETH().Deposit();\n    depositWETHEvent.watch((error, result) => {\n      console.log('watch -> depositWETHEvent:' + JSON.stringify(result));\n      if (error) {\n        console.log('watch wethEventMonitor depositWETHEvent error --> ' + JSON.stringify(error));\n        return;\n      }\n      var storage = null;\n      var results = null;\n      var key = null;\n      if (window.localStorage) {\n        if (typeof web3 === 'undefined') {\n          return;\n        }\n        storage = window.localStorage;\n        key = getTransactionHistoryKey(that.props.account, Asset['Asset'].WETH, that.props.page, that.state.NetworkName);\n        results = JSON.parse(`${storage.getItem(key)}`);\n      }\n      if (results === null) {\n        return;\n      }\n      let resultObj = JSON.parse(JSON.stringify(result));\n      var txId = resultObj.transactionHash;\n      // Refresh data\n      // console.log('rrrrrrrrrrrrrrrrrrrrrrrrr')\n      this.refreshData();\n      this.getAccountETHBalance();\n      this.setState({ wrapAmount: '', isWrapEnable: true, wrapInputDisabled: false });\n      this.setState({ isSupplyEnable: true, supplyButtonText: this.props.supplyButtonInfo, supplyAmount: '' });\n      this.setState({ unwrapAmount: '', isunwrapEnable: true });\n      this.setState({ withdrawAmount: '', withdrawMax: false, isWithdrawEnable: true });\n      storage.removeItem(key);\n      let argsObj = JSON.parse(JSON.stringify(resultObj.args));\n      results = results.map(item => {\n        // check is speed up\n        if (item.status === 0 && item.transactionType === 'Wrap' && item.realAmount === argsObj.wad && item.txId !== txId) {\n          let txnHashHref = getTxnHashHref(that.state.NetworkName) + txId;\n          return {\n            ...item,\n            icon: 'done',\n            status: 1,\n            txId: txId,\n            txnHashHref: txnHashHref\n          }\n        } else if (item.txId === txId) {\n          return {\n            ...item,\n            icon: 'done',\n            status: 1\n          }\n        }\n        return {\n          ...item\n        }\n      })\n      storage.setItem(key, JSON.stringify(results));\n    });\n\n    //测试用weth_faucet 暂时注释\n    var withdrawalWETHEvent = WETH().Withdrawal();\n    withdrawalWETHEvent.watch((error, result) => {\n      console.log('watch -> withdrawalWETHEvent:' + JSON.stringify(result));\n      if (error) {\n        console.log('watch wethEventMonitor withdrawalWETHEvent error --> ' + JSON.stringify(error));\n        return;\n      }\n      var storage = null;\n      var results = null;\n      var key = null;\n      if (window.localStorage) {\n        if (typeof web3 === 'undefined') {\n          return;\n        }\n        storage = window.localStorage;\n        key = getTransactionHistoryKey(that.props.account, Asset['Asset'].WETH, that.props.page, that.state.NetworkName);\n        results = JSON.parse(`${storage.getItem(key)}`);\n      }\n      if (results === null) {\n        return;\n      }\n      let resultObj = JSON.parse(JSON.stringify(result));\n      var txId = resultObj.transactionHash;\n      // Refresh data\n      this.refreshData();\n      this.setState({ unwrapAmount: '', isunwrapEnable: true, supplyAmount: '', unwrapInputDisabled: false, maxClassName: 'max-amount-button' });\n      storage.removeItem(key);\n      let argsObj = JSON.parse(JSON.stringify(resultObj.args));\n      results = results.map(item => {\n        // check is speed up\n        if (item.status === 0 && item.transactionType === 'Unwrap' && item.realAmount === argsObj.wad && item.txId !== txId) {\n          let txnHashHref = getTxnHashHref(that.state.NetworkName) + txId;\n          return {\n            ...item,\n            icon: 'done',\n            status: 1,\n            txId: txId,\n            txnHashHref: txnHashHref\n          }\n        } else if (item.txId === txId) {\n          return {\n            ...item,\n            icon: 'done',\n            status: 1\n          }\n        }\n        return {\n          ...item\n        }\n      })\n      storage.setItem(key, JSON.stringify(results));\n    });\n    // }\n  }\n\n  refreshData = () => {\n    this.getAccountETHBalance();\n    // this.getCurrentSupplyAssetAmount();\n    this.getAccountBalance();\n    // this.getAssetBalance();\n    // this.getCalcWETHPrice();\n    // this.getWETHAssetPrice();\n    this.get_My_WETH_Supplied_max_Withdraw_WETH_Amount();\n  }\n\n  //check\n  checkWaitingUpdateTransactionRecords = () => {\n    var storage = null;\n    var results = null;\n    var key = null;\n    if (window.localStorage) {\n      if (typeof web3 === 'undefined') {\n        return;\n      }\n      storage = window.localStorage;\n      if (this.props.wethCoin === true) {\n        key = getTransactionHistoryKey(this.web3.eth.accounts[0], Asset['Asset'].WETH, this.props.page, this.state.NetworkName);\n      } else if (this.props.usdxCoin === true) {\n        key = getTransactionHistoryKey(this.web3.eth.accounts[0], Asset['Asset'].USDx, this.props.page, this.state.NetworkName);\n      }\n      results = JSON.parse(`${storage.getItem(key)}`);\n    }\n    if (results === null) {\n      return;\n    }\n    storage.removeItem(key);\n    results = results.map(item => {\n      if (item.icon === 'loading-supply-wrap') {\n        if (this.state.supplyWrapWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n          this.setState({ isWrapEnable: true, wrapInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            // Refresh data\n            this.refreshData();\n            this.getAccountETHBalance();\n            this.setState({ wrapAmount: '', isWrapEnable: true, wrapInputDisabled: false, });\n          }\n          return {\n            ...item,\n            icon: 'done',\n            status: 1\n          }\n        }\n        if (this.state.supplyWrapWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n          this.setState({ isWrapEnable: true, wrapInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            // Refresh data\n            this.refreshData();\n            this.getAccountETHBalance();\n            this.setState({ wrapAmount: '', isWrapEnable: true, wrapInputDisabled: false, });\n          }\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: 'WRAP FAILURE'\n          }\n        }\n        //超时则取消控件限制\n        if (this.state.supplyWrapWaitTimeOutMap.get(item.txId) !== undefined) {\n          return {\n            ...item,\n            timeOutFlag: 1\n          }\n        }\n      }\n\n      if (item.icon === 'loading-supply-unwrap') {\n        if (this.state.supplyUnwrapWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n          this.setState({ isunwrapEnable: true, unwrapInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            // Refresh data\n            this.refreshData();\n            this.setState({ unwrapAmount: '', isunwrapEnable: true, supplyAmount: '', unwrapInputDisabled: false, maxClassName: 'max-amount-button' });\n          }\n          return {\n            ...item,\n            icon: 'done',\n            status: 1\n          }\n        }\n        if (this.state.supplyUnwrapWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n          this.setState({ isunwrapEnable: true, unwrapInputDisabled: false });\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: 'UNWRAP FAILURE'\n          }\n        }\n        //超时则取消控件限制\n        if (this.state.supplyUnwrapWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n          return {\n            ...item,\n            timeOutFlag: 1\n          }\n        }\n      }\n\n      if (item.icon === 'loading-supply-weth') {\n        if (this.state.supplyWETHWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n          this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            // Refresh Data\n            this.refreshData();\n            this.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n            this.setState({ isWithdrawEnable: true });\n            this.setState({ withdrawAmount: null, withdrawMax: false, withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n            if (this.props.wethCoin === true) {\n              this.setState({ unwrapAmount: '' });\n            }\n          }\n          return {\n            ...item,\n            icon: 'supply',\n            status: 1\n          }\n        }\n        if (this.state.supplyWETHWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n          this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.refreshData();\n            this.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n            if (this.props.wethCoin === true) {\n              this.setState({ unwrapAmount: '' });\n            }\n            this.setState({ isWithdrawEnable: true, supplyAmount: '', withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n            this.setState({ withdrawAmount: null, withdrawMax: false });\n          }\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: 'SUPPLY WETH FAILURE'\n          }\n        }\n        //超时则取消控件限制\n        if (this.state.supplyWETHWaitTimeOutMap.get(item.txId) !== undefined) {\n          return {\n            ...item,\n            timeOutFlag: 1\n          }\n        }\n      }\n\n      if (item.icon === 'loading-supply-withdraw-weth') {\n        if (this.state.withdrawWETHWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n          this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            // Refresh data\n            this.refreshData();\n            this.setState({ isWithdrawEnable: true, supplyAmount: '' });\n            this.setState({ withdrawAmount: null, withdrawMax: false, withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n          }\n          return {\n            ...item,\n            icon: 'withdraw',\n            status: 1\n          }\n        }\n        if (this.state.withdrawWETHWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n          this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.refreshData();\n            this.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n            if (this.props.wethCoin === true) {\n              this.setState({ unwrapAmount: '' });\n            }\n            this.setState({ isWithdrawEnable: true, supplyAmount: '', withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n            this.setState({ withdrawAmount: null, withdrawMax: false });\n          }\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: 'WITHDRAW WETH FAILURE'\n          }\n        }\n        //超时则取消控件限制\n        if (this.state.withdrawWETHWaitTimeOutMap.get(item.txId) !== undefined) {\n          return {\n            ...item,\n            timeOutFlag: 1\n          }\n        }\n      }\n\n      if (item.icon === 'loading-supply-usdx') {\n        if (this.state.supplyUSDxWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n          this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            // Refresh Data\n            this.refreshData();\n            this.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n            this.setState({ isWithdrawEnable: true });\n            this.setState({ withdrawAmount: null, withdrawMax: false, withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n            if (this.props.wethCoin === true) {\n              this.setState({ unwrapAmount: '' });\n            }\n          }\n          return {\n            ...item,\n            icon: 'supply',\n            status: 1\n          }\n        }\n        if (this.state.supplyUSDxWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n          this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.refreshData();\n            this.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n            if (this.props.wethCoin === true) {\n              this.setState({ unwrapAmount: '' });\n            }\n            this.setState({ isWithdrawEnable: true, supplyAmount: '', withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n            this.setState({ withdrawAmount: null, withdrawMax: false });\n          }\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: 'TRANSACTION FAILURE'\n          }\n        }\n        //超时则取消控件限制\n        if (this.state.supplyUSDxWaitTimeOutMap.get(item.txId) !== undefined) {\n          return {\n            ...item,\n            timeOutFlag: 1\n          }\n        }\n      }\n\n      if (item.icon === 'loading-supply-withdraw-usdx') {\n        if (this.state.withdrawUSDxWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n          this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            // Refresh data\n            this.refreshData();\n            this.setState({ isWithdrawEnable: true, supplyAmount: '' });\n            this.setState({ withdrawAmount: null, withdrawMax: false, withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n          }\n          return {\n            ...item,\n            icon: 'withdraw',\n            status: 1\n          }\n        }\n        if (this.state.withdrawUSDxWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n          this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.refreshData();\n            this.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n            if (this.props.wethCoin === true) {\n              this.setState({ unwrapAmount: '' });\n            }\n            this.setState({ isWithdrawEnable: true, supplyAmount: '', withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n            this.setState({ withdrawAmount: null, withdrawMax: false });\n          }\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: 'WITHDRAW USDx FAILURE'\n          }\n        }\n        //超时则取消控件限制\n        if (this.state.withdrawUSDxWaitTimeOutMap.get(item.txId) !== undefined) {\n          return {\n            ...item,\n            timeOutFlag: 1\n          }\n        }\n      }\n\n      if (item.icon === 'loading-supply-weth-approve') {\n        if (this.state.enableWETHWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n          this.setState({ pendingApproval: false, isApproved: true });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.setState({ pendingApproval: false, isApproved: true });\n          }\n          return {\n            ...item,\n            icon: 'done',\n            status: 1\n          }\n        }\n        if (this.state.enableWETHWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n          this.setState({ pendingApproval: false, isApproved: true });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.setState({ pendingApproval: false, isApproved: true });\n          }\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: 'ENABLE WETH FAILURE'\n          }\n        }\n        //超时则取消控件限制\n        if (this.state.enableWETHWaitTimeOutMap.get(item.txId) !== undefined) {\n          return {\n            ...item,\n            timeOutFlag: 1\n          }\n        }\n      }\n\n      if (item.icon === 'loading-supply-usdx-approve') {\n        if (this.state.enableUSDxWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n          this.setState({ pendingApproval: false, isApproved: true });\n\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.setState({ pendingApproval: false, isApproved: true });\n          }\n          return {\n            ...item,\n            icon: 'done',\n            status: 1\n          }\n        }\n        if (this.state.enableUSDxWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n          this.setState({ pendingApproval: false, isApproved: true });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.setState({ pendingApproval: false, isApproved: true });\n          }\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: 'ENABLE USDx FAILURE'\n          }\n        }\n        //超时则取消控件限制\n        if (this.state.enableUSDxWaitTimeOutMap.get(item.txId) !== undefined) {\n          return {\n            ...item,\n            timeOutFlag: 1\n          }\n        }\n      }\n      return {\n        ...item\n      }\n    })\n    storage.setItem(key, JSON.stringify(results));\n  }\n\n  checkTransactionsStatus = () => {\n    var storage = null;\n    var results = null;\n    var key = null;\n    if (window.localStorage) {\n      if (typeof web3 === 'undefined') {\n        return;\n      }\n      storage = window.localStorage;\n      if (this.props.wethCoin === true) {\n        key = getTransactionHistoryKey(this.web3.eth.accounts[0], Asset['Asset'].WETH, this.props.page, this.state.NetworkName);\n      } else if (this.props.usdxCoin === true) {\n        key = getTransactionHistoryKey(this.web3.eth.accounts[0], Asset['Asset'].USDx, this.props.page, this.state.NetworkName);\n      }\n      results = JSON.parse(`${storage.getItem(key)}`);\n    }\n    if (results === null) {\n      return;\n    }\n\n    results = results.map(item => {\n      // console.log('item item item item item item')\n      if (item.icon === 'loading-supply-wrap') {\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ isWrapEnable: true, wrapInputDisabled: false, wrapAmount: '' })\n          } else {\n            this.setState({ isWrapEnable: false, wrapInputDisabled: true })\n          }\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.supplyWrapWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.supplyWrapWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.supplyWrapWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.supplyWrapWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.supplyWrapWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.supplyWrapWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ isWrapEnable: true, wrapInputDisabled: false });\n        }\n      }\n      if (item.icon === 'loading-supply-unwrap') {\n        // console.log('item item item item item item')\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            // to be fixed\n            this.setState({ isunwrapEnable: true, unwrapAmount: '', unwrapInputDisabled: false, unwrapMaxClassName: 'max-amount-button' })\n          } else {\n            this.setState({ isunwrapEnable: false, unwrapInputDisabled: true, unwrapMaxClassName: 'max-amount-button-disable' })\n          }\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.supplyUnwrapWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.supplyUnwrapWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.supplyUnwrapWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.supplyUnwrapWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.supplyUnwrapWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.supplyUnwrapWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ isunwrapEnable: true, unwrapInputDisabled: false });\n        }\n      }\n      if (item.icon === 'loading-supply-weth') {\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ isSupplyEnable: true, supplyAmount: '', supplyButtonText: this.props.supplyButtonInfo, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n          } else {\n            this.setState({ isSupplyEnable: false, supplyButtonText: 'SUBMITTING…', supplyInputDisabled: true, maxClassName: 'max-amount-button-disable' });\n          }\n\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.supplyWETHWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.supplyWETHWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.supplyWETHWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.supplyWETHWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.supplyWETHWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.supplyWETHWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n        }\n      }\n      if (item.icon === 'loading-supply-withdraw-weth') {\n        if (item.status === 0) {\n          //超时则取消控件限制\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n            return 0;\n          }\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ isWithdrawEnable: true, withdrawAmount: '', withdrawMax: false, withdrawButtonText: this.state.withdrawButtonInfo, withdrawInputDisabled: true, withdrawMaxClassName: 'max-amount-button' });\n          } else {\n            this.setState({ isWithdrawEnable: false, withdrawButtonText: 'SUBMITTING…', withdrawInputDisabled: true, withdrawMaxClassName: 'max-amount-button-disable' });\n          }\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.withdrawWETHWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.withdrawWETHWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.withdrawWETHWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.withdrawWETHWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.withdrawWETHWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.withdrawWETHWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n        }\n      }\n\n      if (item.icon === 'loading-supply-usdx') {\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ isSupplyEnable: true, supplyAmount: '', supplyInputDisabled: false, supplyButtonText: this.props.supplyButtonInfo, maxClassName: 'max-amount-button' });\n          } else {\n            this.setState({ isSupplyEnable: false, supplyButtonText: 'SUBMITTING…', supplyInputDisabled: true, maxClassName: 'max-amount-button-disable' });\n          }\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.supplyUSDxWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.supplyUSDxWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.supplyUSDxWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.supplyUSDxWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.supplyUSDxWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.supplyUSDxWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n        }\n      }\n\n      if (item.icon === 'loading-supply-withdraw-usdx') {\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false, withdrawButtonText: this.props.withdrawButtonInfo, withdrawMax: false, withdrawMaxClassName: 'max-amount-button' });\n          } else {\n            this.setState({ isWithdrawEnable: false, withdrawButtonText: 'SUBMITTING…', withdrawInputDisabled: true, withdrawMaxClassName: 'max-amount-button-disable' });\n          }\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.withdrawUSDxWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.withdrawUSDxWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.withdrawUSDxWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.withdrawUSDxWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.withdrawUSDxWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.withdrawUSDxWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n        }\n      }\n      if (item.icon === 'loading-supply-weth-approve') {\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ isApproved: false, pendingApproval: false });\n            this.setState({ buttonText: this.props.approveButtonInfo });\n          } else {\n            this.setState({ buttonText: 'ENABLEING WETH...', pendingApproval: true });\n          }\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.enableWETHWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.enableWETHWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.enableWETHWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.enableWETHWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.enableWETHWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.enableWETHWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ pendingApproval: false });\n        }\n      }\n      if (item.icon === 'loading-supply-usdx-approve') {\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ isApproved: false, pendingApproval: false });\n            this.setState({ buttonText: this.props.approveButtonInfo });\n          } else {\n            this.setState({ buttonText: 'ENABLEING USDx...', pendingApproval: true });\n          }\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.enableUSDxWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.enableUSDxWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.enableUSDxWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.enableUSDxWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.enableUSDxWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.enableUSDxWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ pendingApproval: false });\n        }\n      }\n      return item.id;\n    })\n  }\n\n  mmMonitor = () => {\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    let that = this;\n    var supplyReceivedEvent = MoneyMarket().SupplyReceived();\n    supplyReceivedEvent.watch((error, result) => {\n      console.log('watch -> supplyReceivedEvent:' + JSON.stringify(result));\n      if (error) {\n        console.log('watch mmMonitor supplyReceivedEvent error --> ' + JSON.stringify(error));\n        return;\n      }\n      var storage = null;\n      var results = null;\n      var key = null;\n      if (window.localStorage) {\n        if (typeof web3 === 'undefined') {\n          return;\n        }\n        storage = window.localStorage;\n        if (that.props.wethCoin === true) {\n          key = getTransactionHistoryKey(that.props.account, Asset['Asset'].WETH, that.props.page, that.state.NetworkName);\n        } else if (that.props.usdxCoin === true) {\n          key = getTransactionHistoryKey(that.props.account, Asset['Asset'].USDx, that.props.page, that.state.NetworkName);\n        }\n        results = JSON.parse(`${storage.getItem(key)}`);\n      }\n      if (results === null) {\n        return;\n      }\n      let resultObj = JSON.parse(JSON.stringify(result));\n      var txId = resultObj.transactionHash;\n      // Refresh Data\n      that.refreshData();\n      that.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n      that.setState({ withdrawAmount: null, isWithdrawEnable: true, withdrawMax: false, withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n\n      if (that.props.wethCoin === true) {\n        that.setState({ unwrapAmount: '' });\n      }\n      storage.removeItem(key);\n      let argsObj = JSON.parse(JSON.stringify(resultObj.args));\n      results = results.map(item => {\n        // check is speed up\n        if (item.status === 0 && item.transactionType === 'Supply' && item.realAmount === argsObj.amount && item.txId !== txId) {\n          let txnHashHref = getTxnHashHref(that.state.NetworkName) + txId;\n          return {\n            ...item,\n            icon: 'supply',\n            status: 1,\n            txId: txId,\n            txnHashHref: txnHashHref\n          }\n        } else if (item.txId === txId) { // normal update\n          return {\n            ...item,\n            icon: 'supply',\n            status: 1\n          }\n        }\n        return {\n          ...item\n        }\n      })\n      storage.setItem(key, JSON.stringify(results));\n    });\n    var supplyWithdrawnEvent = MoneyMarket().SupplyWithdrawn();\n    supplyWithdrawnEvent.watch(function (error, result) {\n      console.log('watch -> supplyWithdrawnEvent:' + JSON.stringify(result));\n      if (error) {\n        console.log('watch mmMonitor supplyWithdrawnEvent error --> ' + JSON.stringify(error));\n        return;\n      }\n      var storage = null;\n      var results = null;\n      var key = null;\n      if (window.localStorage) {\n        if (typeof web3 === 'undefined') {\n          return;\n        }\n        storage = window.localStorage;\n        if (that.props.wethCoin === true) {\n          key = getTransactionHistoryKey(that.props.account, Asset['Asset'].WETH, that.props.page, that.state.NetworkName);\n        } else if (that.props.usdxCoin === true) {\n          key = getTransactionHistoryKey(that.props.account, Asset['Asset'].USDx, that.props.page, that.state.NetworkName);\n        }\n        results = JSON.parse(`${storage.getItem(key)}`);\n      }\n      if (results === null) {\n        return;\n      }\n      let resultObj = JSON.parse(JSON.stringify(result));\n      var txId = resultObj.transactionHash;\n      // Refresh data\n      that.refreshData();\n      that.setState({ isWithdrawEnable: true, supplyAmount: '' });\n      that.setState({ withdrawAmount: null, withdrawMax: false, withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n      storage.removeItem(key);\n      let argsObj = JSON.parse(JSON.stringify(resultObj.args));\n      results = results.map(item => {\n        // check is speed up\n        if (item.status === 0 && item.transactionType === 'Withdraw' && item.realAmount === argsObj.amount && item.txId !== txId) {\n          let txnHashHref = getTxnHashHref(that.state.NetworkName) + txId;\n          return {\n            ...item,\n            icon: 'withdraw',\n            status: 1,\n            txId: txId,\n            txnHashHref: txnHashHref\n          }\n        } else if (item.txId === txId) {\n          return {\n            ...item,\n            icon: 'withdraw',\n            status: 1\n          }\n        }\n        return {\n          ...item\n        }\n      })\n      storage.setItem(key, JSON.stringify(results));\n    });\n    var failureEvent = MoneyMarket().Failure();\n    failureEvent.watch(function (error, result) {\n      console.log('watch -> failureEvent:' + JSON.stringify(result));\n      if (error) {\n        console.log('watch mmMonitor failureEvent error --> ' + JSON.stringify(error));\n        return;\n      }\n      var storage = null;\n      var results = null;\n      var key = null;\n      if (window.localStorage) {\n        if (typeof web3 === 'undefined') {\n          return;\n        }\n        storage = window.localStorage;\n        if (that.props.wethCoin === true) {\n          key = getTransactionHistoryKey(that.props.account, Asset['Asset'].WETH, that.props.page, that.state.NetworkName);\n        } else if (that.props.usdxCoin === true) {\n          key = getTransactionHistoryKey(that.props.account, Asset['Asset'].USDx, that.props.page, that.state.NetworkName);\n        }\n        results = JSON.parse(`${storage.getItem(key)}`);\n      }\n      if (results === null) {\n        return;\n      }\n      let resultObj = JSON.parse(JSON.stringify(result));\n      var txId = resultObj.transactionHash;\n      that.refreshData();\n      that.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n      if (that.props.wethCoin === true) {\n        that.setState({ unwrapAmount: '' });\n      }\n      that.setState({ isWithdrawEnable: true, supplyAmount: '', withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n      that.setState({ withdrawAmount: null, withdrawMax: false });\n      // change icon and status = 1 by txId\n      storage.removeItem(key);\n      results = results.map(item => {\n        if (item.txId === txId) {\n          let errorArgs = resultObj.args;\n          let argsObj = JSON.parse(JSON.stringify(errorArgs));\n          console.log('failure info:' + ErrorCode[argsObj.error]);\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: ErrorCode[argsObj.error]\n          }\n        }\n        return {\n          ...item\n        }\n      })\n      storage.setItem(key, JSON.stringify(results));\n    });\n  }\n\n  refreshDataEventMonitor = () => {\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    MoneyMarket().allEvents({ toBlock: 'latest' }).watch((error, result) => {\n      if (error) {\n        console.log('watch error --> ' + JSON.stringify(error));\n        return;\n      }\n      let eventObj = JSON.parse(JSON.stringify(result));\n      let event = eventObj.event;\n      // console.log('refreshDataEventMonitor eventObj:' + JSON.stringify(result))\n      if (event === 'BorrowTaken' || event === 'BorrowRepaid') {\n        this.setState({ withdrawAmount: '' });\n        this.get_My_WETH_Supplied_max_Withdraw_WETH_Amount();\n        this.getAccountBalance();\n        this.getMyAddressWETHBalance();\n      }\n    });\n  }\n\n  componentDidMount_temp = () => {\n    // event monitor\n    // this.usdxEventMonitor();//imtoken测试临时注释\n    // this.wethEventMonitor();//imtoken测试临时注释\n    //非imtoken用 ，否则用imtoken测试临时注释\n    if (window.web3 !== undefined && window.ethereum.isImToken === undefined) {\n      this.usdxEventMonitor();\n      this.wethEventMonitor();\n    }\n    // Recent Transactions status = 0\n    this.checkTransactionsStatusTimer = setInterval(() => {\n      this.checkTransactionsStatus();\n    }, 1000);\n    //check\n    this.checkWaitingUpdateTimer = setInterval(() => {\n      this.checkWaitingUpdateTransactionRecords();\n    }, 1000 * 15);\n    // this.mmMonitor();//imtoken测试临时注释\n    // this.refreshDataEventMonitor();//imtoken测试临时注释\n    //非imtoken用 ，否则用imtoken测试临时注释\n    if (window.web3 !== undefined && window.ethereum.isImToken === undefined) {\n      this.mmMonitor();\n      this.refreshDataEventMonitor()\n    }\n    // Initial Component Info \n    this.getAllowance();\n    this.getAccountETHBalance();\n    // this.getCollateralRatio();\n    // this.getCurrentSupplyAssetAmount();\n    this.getAccountBalance();\n    // this.getAssetBalance();\n    this.getMyAddressWETHBalance();\n    // this.getCalcWETHPrice();\n    // this.getWETHAssetPrice();\n    this.get_My_WETH_Supplied_max_Withdraw_WETH_Amount();\n\n    this.get_Supplied_WETH();\n    this.get_my_ETH();\n    this.get_my_WETH();\n\n    this.refreshInterval = setInterval(() => {\n      // console.log('this.props.father_approve_WETH: ',this.props.father_approve_WETH)\n      // this.getCurrentSupplyAssetAmount();\n      // this.getAssetBalance();\n      this.get_My_WETH_Supplied_max_Withdraw_WETH_Amount();\n      this.getAccountBalance();\n      this.getMyAddressWETHBalance();\n      this.get_Supplied_WETH();\n      this.get_my_ETH();\n      this.get_my_WETH();\n    }, 1000 * 15)\n  }\n\n  componentWillUnmount() {\n    // clearInterval(this.gasPriceInterval);\n    clearInterval(this.refreshInterval);\n    clearInterval(this.accountInterval);\n    clearInterval(this.checkTransactionsStatusTimer);\n    clearInterval(this.checkWaitingUpdateTimer);\n  }\n\n\n  // ***** 华丽的分割线 ***** ***** 华丽的分割线 ***** ***** 华丽的分割线 ***** ***** 华丽的分割线 ***** ***** 华丽的分割线 ***** ***** 华丽的分割线 ***** ***** 华丽的分割线 *****\n\n\n  get_Supplied_WETH = () => {\n    if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined && MoneyMarket() !== undefined) {\n      let wethAddress = '';\n      let NetworkName = findNetwork(this.state.NetworkName);\n      if (NetworkName === 'Main') {\n        wethAddress = Network.Main.WETH;\n      } else if (NetworkName === 'Rinkeby') {\n        wethAddress = Network.Rinkeby.WETH;\n      }\n      MoneyMarket().getSupplyBalance(this.web3.eth.accounts[0], wethAddress, (err, res_supplied_WETH_BN) => {\n        if (res_supplied_WETH_BN) {\n          this.setState({ supplied_weth_Balance: this.web3.fromWei(res_supplied_WETH_BN.toNumber(), \"ether\") });\n        }\n      });\n    }\n  }\n\n\n  get_my_ETH = () => {\n    if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined) {\n      this.web3.eth.getBalance(this.web3.eth.accounts[0], (err, ETH_balance_BN) => {\n        if (ETH_balance_BN) {\n          this.setState({ my_eth_Balance: toFormatShowNumber(this.web3.fromWei(ETH_balance_BN.toNumber(), \"ether\")) });\n        }\n      });\n    }\n  }\n\n\n  get_my_WETH = () => {\n    if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined) {\n      WETH().balanceOf(this.web3.eth.accounts[0], (err, WETH_balance_BN) => {\n        if (WETH_balance_BN) {\n          this.setState({ my_weth_Balance: toFormatShowNumber(this.web3.fromWei(WETH_balance_BN.toNumber(), \"ether\")) });\n        }\n      });\n    }\n  }\n\n\n  render() {\n    const approveProps = {\n      enableMessage: `Before supplying ${this.props.balanceType} for the first time, you must enable ${this.props.balanceType}.`,\n      isEnable: !this.state.pendingApproval,\n      buttonInfo: this.state.isApproved ? this.props.approveButtonInfo : (this.state.buttonText === '' ? this.props.approveButtonInfo : this.state.buttonText),\n      handleClick: this.handleApprove,\n      page: this.props.page\n    };\n\n    // const supplyProps = {\n    //   balanceDescription: '',\n    //   balanceAmount: this.state.accountBalance,\n    //   balanceType: this.props.balanceType,\n    //   balanceUnit: 'Balance',\n    //   minAmount: 0,\n    //   maxAmount: this.state.maxSupplyAmount,\n    //   step: 0.01,\n    //   amount: this.state.supplyAmount,\n    //   isEnable: this.state.isSupplyEnable,\n    //   inputDisabled: this.state.supplyInputDisabled,\n    //   buttonInfo: this.state.isSupplyEnable ? this.props.supplyButtonInfo : this.state.supplyButtonText,\n    //   handleChange: this.handleSupplyChange,\n    //   handleClick: this.handleSupplyClick,\n    //   handleMax: this.handleSupplyMax,\n    //   hasBorrowedUSDx: this.props.hasBorrowedUSDx,\n    //   placeholderHint: 'Amount in ' + this.props.balanceType,\n    //   buttonClassName: 'button-wrapper',\n    //   maxClassName: this.state.maxClassName\n    // };\n\n    // const withdrawProps = {\n    //   balanceDescription: '',\n    //   balanceAmount: this.state.maxWithdrawAmount,\n    //   balanceType: this.props.balanceType,\n    //   balanceUnit: 'Available',\n    //   minAmount: 0,\n    //   maxAmount: this.state.maxWithdrawAmount,\n    //   step: 0.01,\n    //   amount: this.state.withdrawAmount,\n    //   isEnable: this.state.isWithdrawEnable,\n    //   inputDisabled: this.state.withdrawInputDisabled,\n    //   buttonInfo: this.state.isWithdrawEnable ? this.props.withdrawButtonInfo : this.state.withdrawButtonText,\n    //   handleChange: this.handleWithdrawChange,\n    //   handleMax: this.handleWithdrawMax,\n    //   handleClick: this.handleWithdrawClick,\n    //   hasBorrowedUSDx: this.props.hasBorrowedUSDx,\n    //   placeholderHint: 'Amount in ' + this.props.balanceType,\n    //   buttonClassName: 'button-wrapper',\n    //   maxClassName: this.state.withdrawMaxClassName\n    // };\n\n    // const wrapProps = {\n    //   balanceDescription: '',\n    //   balanceAmount: this.state.ethAccountBalance,\n    //   balanceType: 'ETH',\n    //   balanceUnit: 'Balance',\n    //   minAmount: 0,\n    //   step: 0.01,\n    //   amount: this.state.wrapAmount,\n    //   isEnable: this.state.isWrapEnable,\n    //   inputDisabled: this.state.wrapInputDisabled,\n    //   buttonInfo: this.props.wrapButtonInfo,\n    //   handleChange: this.handleWrapChange,\n    //   handleClick: this.handleWrapClick,\n    //   placeholderHint: 'Ether to Wrap',\n    //   buttonClassName: 'button-wrapper',\n    //   maxClassName: 'max-amount-button'\n    // };\n\n    // const unwrapProps = {\n    //   balanceDescription: '',\n    //   balanceAmount: this.state.wethAccountBalance,\n    //   balanceType: this.props.balanceType,\n    //   balanceUnit: 'Balance',\n    //   minAmount: 0,\n    //   maxAmount: this.state.maxUnwrapAmount,\n    //   step: 0.01,\n    //   amount: this.state.unwrapAmount,\n    //   isEnable: this.state.isunwrapEnable,\n    //   inputDisabled: this.state.unwrapInputDisabled,\n    //   buttonInfo: this.props.unwrapButtonInfo,\n    //   handleChange: this.handleunwrapChange,\n    //   handleClick: this.handleunwrapClick,\n    //   handleMax: this.handleunwrapMax,\n    //   placeholderHint: 'WETH to Unwrap',\n    //   buttonClassName: 'button-wrapper',\n    //   maxClassName: this.state.unwrapMaxClassName\n    // };\n\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <div className='supply-input'>\n          {/* <BalanceInfoWithIcon coin={'WETH'} action={'Supplied'} login={window.web3.eth.accounts[0] ? true : false} /> */}\n          <div className='info-wrapper'>\n            <span className='balance-type'>\n              <img style={{ width: '16px', height: '16px', margin: 'auto', marginTop: '-4px' }} src={`images/WETH@2x.png`} alt=\"\" />&nbsp;\n            <FormattedMessage id='WETH_Supplied' />\n            </span>\n            <span className='balance-amount'>\n              {this.state.supplied_weth_Balance ? toDoubleThousands(this.state.supplied_weth_Balance) : '-'}\n            </span>\n          </div>\n\n\n          <Tabs className='tab-wrapper' animated={true} size='large' onChange={this.changePane}>\n            <TabPane tab={this.props.tabLeftName === 'SUPPLY' ? navigator.language === 'zh-CN' ? '存款' : 'SUPPLY' : this.props.tabLeftName} key=\"1\" className='tab-content'>\n              {\n                this.props.father_approve_WETH == 1\n                  ?\n                  <span>\n                    {/* <CoinBalance coin={'eth'} login={this.props.login} /> */}\n                    <div className='balance-info'>\n                      <span className='balance-desc'>\n                        <FormattedMessage id='ETH_Balance' />\n                      </span>\n                      <span className='balance-amount'>\n                        {this.state.my_eth_Balance ? toDoubleThousands(this.state.my_eth_Balance) : '-'}&nbsp;ETH\n                        </span>\n                    </div>\n\n                    {/* <WrapInputUnit {...wrapProps} /> */}\n                    <div className='input-wrap-unit-wrapper'>\n                      <div className='wrap-input-wrapper'>\n                        <div className='input-wrapper'>\n                          <Input\n                            type='number'\n                            placeholder={'Ether to Wrap'}\n                            min={0}\n                            value={this.state.wrapAmount}\n                            onChange={(e) => this.handleWrapChange(e.target.value)}\n                            className='input-number'\n                            disabled={this.state.wrapInputDisabled}\n                          />\n                        </div>\n                        <div className='button-wrapper'>\n                          <Button\n                            size='large'\n                            className={!this.state.isWrapEnable ? 'disable-button' : ''}\n                            onClick={this.handleWrapClick}\n                            disabled={!this.state.isWrapEnable}>\n                            {this.props.wrapButtonInfo}\n                          </Button>\n                        </div>\n                      </div>\n                    </div>\n                    {/* <UnWrapInputUnit {...unwrapProps} /> */}\n                    <div className='input-unwrap-unit-wrapper'>\n                      <div className='input-wrapper'>\n                        <Input\n                          type='number'\n                          placeholder={'WETH to Unwrap'}\n                          min={0}\n                          value={this.state.unwrapAmount}\n                          onChange={(e) => this.handleunwrapChange(e.target.value)}\n                          className='input-number'\n                          disabled={this.state.unwrapInputDisabled} />\n                        <span className={this.state.unwrapMaxClassName} onClick={this.state.unwrapInputDisabled ? '' : this.handleunwrapMax}>MAX</span>\n                      </div>\n                      <div className='button-wrapper'>\n                        <Button\n                          size='large'\n                          className={!this.state.isunwrapEnable ? 'disable-button' : ''}\n                          onClick={this.handleunwrapClick}\n                          disabled={!this.state.isunwrapEnable}>\n                          {this.props.unwrapButtonInfo}\n                        </Button>\n                      </div>\n                    </div>\n                    {/* <CoinBalance coin={'weth'} login={this.props.login} father_max_Unwrap_Amount={this.state.maxUnwrapAmount} /> */}\n                    <div className='balance-info'>\n                      <span className='balance-desc'>\n                        <FormattedMessage id='WETH_Balance' />\n                      </span>\n                      <span className='balance-amount'>{this.state.my_weth_Balance ? toDoubleThousands(this.state.my_weth_Balance) : '-'}&nbsp;WETH</span>\n                    </div>\n                    {/* <InputUnit {...supplyProps} /> */}\n                    <div className='input-unit-wrapper'>\n                      {!(false || this.props.hasBorrowedUSDx)\n                        ?\n                        <div className='input-wrapper'>\n                          <Input\n                            type='number'\n                            placeholder={'Amount in ' + this.props.balanceType}\n                            min={0}\n                            value={this.state.supplyAmount}\n                            onChange={(e) => this.handleSupplyChange(e.target.value)}\n                            className='input-number'\n                            disabled={this.state.supplyInputDisabled}\n                          />\n                          <span className={this.state.maxClassName} onClick={this.state.supplyInputDisabled ? '' : this.handleSupplyMax}>MAX</span>\n                        </div>\n                        :\n                        <div className='alert-message'>\n                          <FormattedMessage id='Already_borrowed' />\n                        </div>\n                      }\n                      <div className={'button-wrapper'}>\n                        <Button\n                          size='large'\n                          className={!!(this.props.hasBorrowedUSDx || false || !this.state.isSupplyEnable) ? 'disable-button' : ''}\n                          onClick={this.handleSupplyClick}\n                          disabled={!this.state.isSupplyEnable || !!(this.props.hasBorrowedUSDx || false)}\n                        >\n                          {this.state.isSupplyEnable ? this.props.supplyButtonInfo : this.state.supplyButtonText}\n                        </Button>\n                      </div>\n                    </div>\n                  </span>\n                  :\n                  <Approve {...approveProps} />\n              }\n            </TabPane>\n\n            <TabPane tab={this.props.tabRightName === 'WITHDRAW' ? navigator.language === 'zh-CN' ? '取出' : 'WITHDRAW' : this.props.tabRightName} key=\"2\" className='tab-content'>\n              {\n                this.props.father_approve_WETH == 1\n                  ?\n                  <CoinAvailable coin={'weth'} action={'withdraw'} login={this.props.login} fa_maxWithdrawAmount={this.state.maxWithdrawAmount} />\n                  :\n                  null\n              }\n              {\n                this.props.father_approve_WETH == 1\n                  ?\n                  // <InputUnit {...withdrawProps} />\n                  <div className='input-unit-wrapper'>\n                    {!(false || this.props.hasBorrowedUSDx)\n                      ?\n                      <div className='input-wrapper'>\n                        <Input\n                          type='number'\n                          placeholder={'Amount in ' + this.props.balanceType}\n                          min={0}\n                          value={this.state.withdrawAmount}\n                          onChange={(e) => { this.handleWithdrawChange(e.target.value) }}\n                          className='input-number'\n                          disabled={this.state.withdrawInputDisabled}\n                        />\n                        <span className={this.state.withdrawMaxClassName} onClick={this.state.withdrawInputDisabled ? '' : this.handleWithdrawMax}>MAX</span>\n                      </div>\n                      :\n                      <div className='alert-message'>\n                        <FormattedMessage id='Already_borrowed' />\n                      </div>\n                    }\n\n                    <div className={'button-wrapper'}>\n                      <Button\n                        size='large'\n                        className={!!(this.props.hasBorrowedUSDx || false || !this.state.isWithdrawEnable) ? 'disable-button' : ''}\n                        onClick={this.handleWithdrawClick}\n                        disabled={!this.state.isWithdrawEnable || !!(this.props.hasBorrowedUSDx || false)}>\n                        {this.state.isWithdrawEnable ? this.props.withdrawButtonInfo : this.state.withdrawButtonText}\n                      </Button>\n                    </div>\n                  </div>\n                  :\n                  <Approve {...approveProps} />\n              }\n            </TabPane>\n          </Tabs>\n        </div>\n      </IntlProvider>\n    )\n  }\n}\n\nexport default SupplyInput;","import React, { Component } from 'react';\nimport MoneyMarket from '../../ABIs/MoneyMarket.js';\nimport CoinInfo from '../../component/coinInfo/coinInfo';\nimport Network from '../../constant.json';\nimport WETH from '../../ABIs/WETH';\nimport USDX from \"./../../ABIs/USDX.js\";\nimport { toFormatShowNumber, toNonExponential, findNetwork, formatBigNumber } from '../../util.js';\nimport './coinAvailable.scss';\n\nclass CoinAvailable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wethAccountBalance: 0,\n      usdxAccountBalance: 0,\n      wethAssetPrice: 0,\n      usdxAssetPrice: 0,\n      wethAssetBalance: 0,\n      usdxAssetBalance: 0,\n      collateralRatio: 0,\n      maxWithdrawWETHAmount: 0,\n      maxWithdrawUSDXAmount: 0,\n      usdxAvailableAmount: 0,\n      cash: 0,\n      originationFee: 0\n    }\n    this.web3 = window.web3;\n\n    // this.componentDidMount_temp();\n    window.web3.version.getNetwork((e, r) => {\n      if (r) {\n        this.setState({\n          NetworkName: r\n        }, () => {\n          this.componentDidMount_temp();\n        })\n      }\n    })\n\n    if (window.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', () => {\n        this.componentDidMount_temp();\n      });\n    }\n  }\n\n  // ***************88 usdx Available_Amount\n  get_Account_Balance = () => {\n    if (this.web3.eth.accounts[0] === undefined || MoneyMarket() === undefined || USDX() === undefined) {\n      return;\n    }\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    MoneyMarket().getBorrowBalance(this.web3.eth.accounts[0], usdxAddress, (err, res) => {\n      if (res === undefined || res === null) {\n        return;\n      }\n      res = formatBigNumber(res);\n      let wethAddress = '';\n      if (NetworkName === 'Main') {\n        wethAddress = Network.Main.WETH;\n      } else if (NetworkName === 'Rinkeby') {\n        wethAddress = Network.Rinkeby.WETH;\n      }\n      MoneyMarket().getSupplyBalance(this.web3.eth.accounts[0], wethAddress, (err, res1) => {\n        if (res1 !== undefined && res1 !== null) {\n          MoneyMarket().assetPrices(usdxAddress, (err, res33) => {\n            if (res33 !== undefined && res33 !== null) {\n              this.setState({ usdxAssetPrice: this.web3.fromWei(res33.toNumber(), \"ether\") }, () => {\n                MoneyMarket().assetPrices(wethAddress, (err, res2) => {\n                  if (res2 !== undefined && res2 !== null) {\n                    if (this.state.usdxAssetPrice !== 0 && res2.toNumber() !== 0) {\n                      let sumofSupplies = this.web3.fromWei(res1.toNumber(), \"ether\") * (this.web3.fromWei(res2.toNumber(), \"ether\") / this.state.usdxAssetPrice);\n                      let sumofBorrow = res;\n                      MoneyMarket().collateralRatio((err, res5) => {\n                        if (res5 !== undefined && res5 !== null) {\n                          let usdxAvailableAmount = sumofSupplies / this.web3.fromWei(res5.toNumber(), \"ether\") - sumofBorrow;\n                          let mmAddress = '';\n                          if (NetworkName === 'Main') {\n                            mmAddress = Network.Main.MoneyMarket;\n                          } else if (NetworkName === 'Rinkeby') {\n                            mmAddress = Network.Rinkeby.MoneyMarket;\n                          }\n                          USDX().balanceOf(mmAddress, (err, res66) => {\n                            if (res66 !== undefined && res66 !== null) {\n                              this.setState({ cash: toFormatShowNumber(this.web3.fromWei(res66.toNumber(), \"ether\")) }, () => {\n                                MoneyMarket().originationFee((err, res_orin) => {\n                                  if (res_orin !== undefined || res_orin !== null) {\n                                    // this.setState({ originationFee: formatBigNumber(res_orin) })\n                                    let availableBorrowAmount = Math.min(usdxAvailableAmount, this.state.cash);\n                                    if (Number(availableBorrowAmount) < 0) {\n                                      availableBorrowAmount = 0;\n                                    }\n\n                                    if (Number(availableBorrowAmount) === Number(this.state.cash)) {\n                                      availableBorrowAmount = this.state.cash;\n                                    } else if (Number(availableBorrowAmount) === Number(usdxAvailableAmount)) {\n                                      availableBorrowAmount = availableBorrowAmount / (1 + Number(formatBigNumber(res_orin)));\n                                    }\n\n                                    if (this.state.usdxAvailableAmount !== availableBorrowAmount) {\n                                      this.setState({ usdxAvailableAmount: availableBorrowAmount })\n                                    }\n                                  }\n                                });\n                              })\n                            }\n                          });\n                        }\n                      });\n                    }\n                  }\n                });\n              });\n            }\n          });\n        }\n      }\n      );\n    }\n    )\n  }\n\n  componentDidMount_temp = () => {\n    setTimeout(() => {\n      this.get_Account_Balance();\n    }, 2000);\n    this.timerID = setInterval(() => {\n      if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined) {\n        this.get_Account_Balance();\n      }\n    }, 1000 * 15);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render = () => {\n    const props = {\n      balanceDescription: '',\n      balanceAmount: this.state.usdxAvailableAmount,\n      balanceType: 'USDx',\n      balanceUnit: 'Available',\n    }\n    return (\n      <CoinInfo {...props} login={this.web3.eth.accounts[0]} />\n    )\n  }\n}\n\nexport default CoinAvailable;","import React, { Component } from 'react';\nimport MoneyMarket from '../../ABIs/MoneyMarket.js';\nimport Network from '../../constant.json';\nimport './balanceInfoWithIcon.scss';\nimport { findNetwork } from '../../util.js';\nimport CoinInfoWithIcon from '../../component/coinInfoWithIcon/coinInfoWithIcon';\n\nclass BalanceInfoWithIcon extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      suppliedwethBalance: 0,\n      suppliedusdxBalance: 0,\n      borrowedusdxBalance: 0\n    }\n    this.web3 = window.web3;\n\n    // this.componentDidMount_temp();\n    window.web3.version.getNetwork((e, r) => {\n      if (r) {\n        this.setState({\n          NetworkName: r\n        }, () => {\n          this.componentDidMount_temp();\n        })\n      }\n    })\n\n    if (window.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', () => {\n        this.componentDidMount_temp();\n      });\n    }\n  }\n\n  get_Borrow_Balance = () => {\n    if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined && MoneyMarket() !== undefined) {\n      let usdxAddress = '';\n      let NetworkName = findNetwork(this.state.NetworkName);\n      if (NetworkName === 'Main') {\n        usdxAddress = Network.Main.USDx;\n      } else if (NetworkName === 'Rinkeby') {\n        usdxAddress = Network.Rinkeby.USDx;\n      }\n      MoneyMarket().getBorrowBalance(this.web3.eth.accounts[0], usdxAddress, (err, res) => {\n        if (res !== undefined && res !== null) {\n          this.setState({ borrowedusdxBalance: this.web3.fromWei(res.toNumber(), \"ether\") }, () => {\n            // console.log(this.state.borrowedusdxBalance);\n          });\n        }\n      });\n    }\n  };\n\n  componentDidMount_temp = () => {\n    setTimeout(() => {\n      this.get_Borrow_Balance();\n    }, 2000);\n\n    this.timerID = setInterval(() => {\n      if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined) {\n        this.get_Borrow_Balance();\n      }\n    }, 1000 * 15);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    const props = {\n      coin: this.props.coin,\n      action: this.props.action,\n      coinBalance: this.state.borrowedusdxBalance,\n      login: this.web3.eth.accounts[0]\n    }\n    return <CoinInfoWithIcon {...props} />\n  }\n}\n\nexport default BalanceInfoWithIcon;","import React, { Component } from 'react';\nimport { Tabs } from 'antd'\nimport Approve from '../../component/approve/approve';\nimport InputUnit from '../../component/inputUnit/inputUnit';\nimport USDX from \"./../../ABIs/USDX.js\";\nimport MoneyMarket from './../../ABIs/MoneyMarket.js';\nimport { toFormatShowNumber, saveTransaction, getTxnHashHref, toDoubleThousands, validNumber, toFormat4Number, getTransactionHistoryKey, findNetwork, diffMin, formatBigNumber } from '../../util.js'\nimport './borrowInput.scss';\nimport Asset from '../../constant.json';\nimport Network from '../../constant.json';\n\nimport CoinAvailable from './../coinAvailable/coinAvailable_borrow';\nimport CoinBalance from './../coinBalance/coinBalance';\nimport BalanceInfoWithIcon from './../balanceInfoWithIcon/balanceInfoWithIcon_borrow_right';\nimport ErrorCode from '../../error_code.json';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\n\nconst { TabPane } = Tabs;\n\nclass BorrowInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: '',\n      supplyType: props.supplyType,\n      networkName: props.networkName,\n      web3NoExist: props.web3NoExist,\n      myAddress: props.myAddress,\n      getHash: false,\n      hashNumber: \"\",\n      // borrowType: props.borrowType,\n      borrowtxhash: \"\",\n      // borrowBalanceShow: null,\n      repayBorrowAmount: '',\n      // DFBorrowMarketInfo: [],\n      USDxBorrowMarketInfo: [],\n      WETHBorrowMarketInfo: [],\n      USDxApproval: props.USDxApproval,\n      pendingUSDxApproval: props.pendingUSDxApproval,\n      pendingApproval: false,\n      approveButtonInfo: this.props.approveButtonInfo,\n      borrowMax: false,\n      isApproved: false,\n      isBorrowEnable: true,\n      isRepayEnable: true,\n      // borrowBalance: null,\n      myAddressUSDxBalance: 0,\n      maxRepayBorrowAmount: 0,\n      maxRepayBorrowAmountShow: 0,\n      usdxAllowance: props.usdxAllowance,\n      repayBorrowMax: false,\n      // BORROW\n      accountBalance: 0,\n      balanceAmountShow: '',\n      borrowedUSDxBalance: 0,\n      maxBorrowAmount: 0,\n      borrowAmount: '',\n      isRepayBorrowEnable: true,\n      borrowButtonText: '',\n      repayButtonText: '',\n      collateralRatio: 0,\n      usdxBalance: 0,\n      usdxAvailableAmount: 0,\n      exceedsSafeMax: false,\n      supplyWETHAmount: 0,\n      WETHAssetPrice: 0,\n      usdxAssetPrice: 0,\n      cash: 0,\n      borrowInputDisabled: false,\n      repayBorrowInputDisabled: false,\n      borrowMaxClassName: 'max-amount-button-borrow',\n      repayBorrowMaxClassName: 'max-amount-button-borrow',\n      //check\n      borrowUSDxWaitUpdateForSuccessMap: new Map(),\n      borrowUSDxWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      borrowUSDxWaitUpdateTimeOutMap: new Map(),\n      repayUSDxWaitUpdateForSuccessMap: new Map(),\n      repayUSDxWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      repayUSDxWaitUpdateTimeOutMap: new Map(),\n      enableUSDxWaitUpdateForSuccessMap: new Map(),\n      enableUSDxWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      enableUSDxWaitUpdateTimeOutMap: new Map(),\n      originationFee: 0,\n      //超时则取消控件限制\n      timeOutTimes: 5,\n      USDx_isApproved: 0\n    };\n    this.web3 = window.web3;\n    if (window.ethereum === undefined) {\n      return;\n    }\n\n    if (window.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', (accounts) => {\n        setTimeout(this.refreshData(), 500);\n        this.getUSDxAllowance();\n        this.getMaxBorrowAmount();\n        this.getBorrowBalance();\n        this.setState({ borrowAmount: '', repayBorrowAmount: '', isBorrowEnable: true, isRepayBorrowEnable: true, exceedsSafeMax: false });\n      });\n    }\n\n    // this.componentDidMount_temp();\n    window.web3.version.getNetwork((e, r) => {\n      if (r) {\n        this.setState({\n          NetworkName: r\n        }, () => {\n          setTimeout(() => {\n            this.componentDidMount_temp();\n          }, 2000)\n        })\n      }\n    })\n  }\n\n  getCollateralRatio = () => {\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    MoneyMarket().collateralRatio((err, res) => {\n      if (res !== undefined && res !== null && this.state.collateralRatio !== this.web3.fromWei(res.toNumber(), \"ether\")) {\n        this.setState({ collateralRatio: this.web3.fromWei(res.toNumber(), \"ether\") })\n      }\n    }\n    );\n  }\n\n  // 获得最大 可以借的数额\n  getMaxBorrowAmount = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || MoneyMarket() === undefined) {\n      return;\n    }\n    MoneyMarket().calculateAccountValues(\n      this.web3.eth.accounts[0],\n      (err, res) => {\n        if (res === undefined || res === null) {\n          return;\n        }\n        let sumofSupplies = this.web3.fromWei(this.web3.fromWei(res[1].toNumber(), \"ether\"), \"ether\");\n        let sumofBorrow = this.web3.fromWei(this.web3.fromWei(res[2].toNumber(), \"ether\"), \"ether\");\n\n        let wethAddress = '';\n        let NetworkName = findNetwork(this.state.NetworkName);\n        if (NetworkName === 'Main') {\n          wethAddress = Network.Main.WETH;\n        } else if (NetworkName === 'Rinkeby') {\n          wethAddress = Network.Rinkeby.WETH;\n        }\n        MoneyMarket().assetPrices(\n          wethAddress,\n          (err, res1) => {\n            if (res1 !== undefined && res1 !== null) {\n              let usdxAddress = '';\n              let NetworkName = findNetwork(this.state.NetworkName);\n              if (NetworkName === 'Main') {\n                usdxAddress = Network.Main.USDx;\n              } else if (NetworkName === 'Rinkeby') {\n                usdxAddress = Network.Rinkeby.USDx;\n              }\n              MoneyMarket().assetPrices(\n                usdxAddress,\n                (err, res2) => {\n                  //weth价格修改 增加了下面两行\n                  sumofSupplies = sumofSupplies * (this.web3.fromWei(res1.toNumber(), \"ether\") / (this.web3.fromWei(res2.toNumber(), \"ether\"))) / 1;\n                  sumofBorrow = sumofBorrow * (this.web3.fromWei(res1.toNumber(), \"ether\") / (this.web3.fromWei(res2.toNumber(), \"ether\"))) / 1;\n                  MoneyMarket().collateralRatio((err, res3) => {\n                    let mmAddress = '';\n                    let NetworkName = findNetwork(this.state.NetworkName);\n                    if (NetworkName === 'Main') {\n                      mmAddress = Network.Main.MoneyMarket;\n                    } else if (NetworkName === 'Rinkeby') {\n                      mmAddress = Network.Rinkeby.MoneyMarket;\n                    }\n                    USDX().balanceOf(\n                      mmAddress,\n                      (err, res5) => {\n                        if (res5 !== undefined && res5 !== null) {\n                          MoneyMarket().originationFee((err, res6) => {\n                            if (res6 !== undefined || res6 !== null) {\n                              let safeMax = Math.min((sumofSupplies / this.web3.fromWei(res3.toNumber(), \"ether\")) * 0.8 - sumofBorrow, toFormatShowNumber(this.web3.fromWei(res5.toNumber(), \"ether\")));\n                              if (Number(safeMax) < 0) {\n                                safeMax = 0;\n                              }\n                              if (Number(safeMax) !== Number(toFormatShowNumber(this.web3.fromWei(res5.toNumber(), \"ether\")))) {\n                                safeMax = safeMax / (1 + Number(formatBigNumber(res6)));\n                              }\n                              if (this.state.maxBorrowAmount !== toFormat4Number(safeMax)) {\n                                this.setState({ maxBorrowAmount: toFormat4Number(safeMax) }, () => {\n                                  // console.log(this.state.maxBorrowAmount);\n                                });\n                              }\n                            }\n                          });\n                        }\n                      });\n                  });\n                });\n            }\n          });\n      }\n    );\n  };\n\n  getBorrowMarketInfo = (asset) => {\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    MoneyMarket().markets.call(\n      usdxAddress,\n      (err, res) => {\n        if (res === undefined || res === null) {\n          return;\n        }\n        const newRes = [res[6], res[7], res[8]];\n        const borrowInfo = newRes.map(amount => this.web3.fromWei(amount.toNumber(), \"ether\"))\n        this.setState({ [`${asset}BorrowMarketInfo`]: borrowInfo })\n      }\n    );\n  }\n\n\n  // ***************** get_USDx_Allowance\n  getUSDxAllowance = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || USDX() === undefined) {\n      return;\n    }\n    let mmAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      mmAddress = Network.Main.MoneyMarket;\n    } else if (NetworkName === 'Rinkeby') {\n      mmAddress = Network.Rinkeby.MoneyMarket;\n    }\n    USDX().allowance(this.web3.eth.accounts[0], mmAddress, (err, res) => {\n      if (res !== undefined && res !== null) {\n        if (res.toNumber() > 0) {\n          this.setState({\n            usdxAllowance: res.toNumber(),\n            isApproved: true,\n            USDx_isApproved: 1\n          }, () => {\n            console.log(this.state.isApproved);\n          });\n        } else {\n          this.setState({ isApproved: false, USDx_isApproved: 1 });\n        }\n      }\n    });\n  }\n\n  getMyAddressUSDxBalance = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || USDX() === undefined) {\n      return;\n    }\n    USDX().balanceOf(this.web3.eth.accounts[0], (err, res) => {\n      let usdxBalance = 0;\n      if (res !== undefined && res !== null) {\n        usdxBalance = res.toNumber();\n      }\n      if (this.state.myAddressUSDxBalance !== Number(this.web3.fromWei(usdxBalance, \"ether\"))) {\n        this.setState({\n          myAddressUSDxBalance: Number(this.web3.fromWei(usdxBalance, \"ether\")),\n          repayBorrowMax: false,\n          isRepayBorrowEnable: true,\n          repayBorrowAmount: '',\n          repayButtonText: this.props.repayButtonInfo\n        }, () => {\n          // repay USDx的余额\n          // console.log(this.state.myAddressUSDxBalance);\n        });\n      }\n    });\n  }\n\n  handleApprove = () => {\n    this.setState({ approveButtonInfo: 'ENABLEING USDx...', pendingApproval: true });\n    let mmAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      mmAddress = Network.Main.MoneyMarket;\n    } else if (NetworkName === 'Rinkeby') {\n      mmAddress = Network.Rinkeby.MoneyMarket;\n    }\n    USDX().approve.estimateGas(mmAddress, -1, { from: this.web3.eth.accounts[0] }, (err, gasLimit) => {\n      this.web3.eth.getGasPrice((err, gasPrice) => {\n        console.log('gasLimit:' + gasLimit);\n        console.log('gasPrice:' + gasPrice);\n        USDX().approve(\n          mmAddress,\n          -1,\n          {\n            from: this.web3.eth.accounts[0],\n            gas: gasLimit,\n            gasPrice: gasPrice\n          },\n          (err, res) => {\n            if (res !== undefined && res !== null) {\n              let txId = res;\n              let txnHashHref = getTxnHashHref(this.state.NetworkName) + res;\n              this.setState({ getHash: true, hashNumber: res, pendingUSDxApproval: true });\n              saveTransaction(\n                'loading-borrow-approve',\n                this.web3.eth.accounts[0],\n                Asset['Asset'].USDx,\n                this.props.page,\n                this.state.NetworkName,\n                'Enable',\n                null,\n                'USDx',\n                txnHashHref,\n                txId,\n                0,\n                null,\n                false,\n                null\n              );\n            } else {\n              this.setState({ pendingApproval: false, approveButtonInfo: this.props.approveButtonInfo })\n            }\n          })\n      }\n      )\n    });\n  };\n\n  handleBorrowClick = () => {\n    let borrowAmount = this.state.borrowAmount;\n    if (borrowAmount === '' || borrowAmount === null) {\n      return;\n    }\n    this.setState({ isBorrowEnable: false, borrowButtonText: 'SUBMITTING…', borrowInputDisabled: true, borrowMaxClassName: 'max-amount-button-borrow-disable' });\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    MoneyMarket().borrow.estimateGas(\n      usdxAddress,\n      this.web3.toWei(borrowAmount, \"ether\"),\n      {\n        from: this.web3.eth.accounts[0]\n      },\n      (err, gasLimit) => {\n        console.log('gasLimit:' + gasLimit);\n        this.web3.eth.getGasPrice((err, gasPrice) => {\n          console.log('gasPrice:' + gasPrice);\n          if (gasPrice === undefined && gasPrice === null) {\n            console.err('gasPrice is ' + gasPrice)\n            return;\n          }\n          MoneyMarket().borrow(\n            usdxAddress,\n            this.web3.toWei(borrowAmount, \"ether\"),\n            {\n              from: this.web3.eth.accounts[0],\n              gas: gasLimit,\n              gasPrice: gasPrice\n            },\n            (err, res) => {\n              if (res !== undefined && res !== null) {\n                let txId = res;\n                let txnHashHref = getTxnHashHref(this.state.NetworkName) + res;\n                let recordBorrowAmount = toDoubleThousands(this.state.borrowAmount);\n                this.setState({ borrowtxhash: res });\n                saveTransaction('loading-borrow', this.web3.eth.accounts[0], Asset['Asset'].USDx, this.props.page,\n                this.state.NetworkName, 'Borrow', recordBorrowAmount, 'USDx', txnHashHref, txId, 0, this.web3.toWei(borrowAmount, \"ether\"), false, null);\n              } else {\n                this.setState({ isBorrowEnable: true, borrowInputDisabled: false });\n              }\n            }\n          )\n        }\n        )\n      }\n    );\n  };\n\n  handleBorrowChange = (value) => {\n    if (value === null || value === '') {\n      this.setState({ isBorrowEnable: true });\n      this.setState({ borrowButtonText: this.props.borrowButtonInfo });\n      this.setState({ borrowAmount: '' });\n      this.setState({ borrowMax: false });\n      this.setState({ exceedsSafeMax: false });\n      return;\n    } else if (value.toString().length > 18) {\n      let borrowButtonText = 'INSUFFICIENT LIQUIDITY';\n      this.setState({ borrowAmount: value });\n      this.setState({ isBorrowEnable: false });\n      this.setState({ borrowButtonText: borrowButtonText });\n      this.setState({ exceedsSafeMax: false });\n      return;\n    } else if (value > this.state.maxBorrowAmount && value <= this.state.usdxAvailableAmount) {\n      // console.log('(value > this.state.maxBorrowAmount && value < this.state.usdxAvailableAmount) || (value === this.state.usdxAvailableAmount)')\n      // console.log('===>value:' + value + ' maxBorrowAmount:' + this.state.maxBorrowAmount + ' usdxAvailableAmount:' + this.state.usdxAvailableAmount)\n      this.setState({ isBorrowEnable: true });\n      this.setState({ exceedsSafeMax: true });\n    } else if (value > this.state.usdxAvailableAmount) {\n      let borrowButtonText = 'INSUFFICIENT LIQUIDITY';\n      this.setState({ borrowAmount: value });\n      this.setState({ isBorrowEnable: false });\n      this.setState({ borrowButtonText: borrowButtonText });\n      this.setState({ exceedsSafeMax: false });\n      return;\n    } else {\n      this.setState({ exceedsSafeMax: false });\n    }\n    if (value.toString().indexOf('.') === value.toString().length - 1) {\n      value = value + '00'\n    }\n    this.setState({ borrowAmount: value });\n    this.setState({ borrowMax: false });\n    if ((!validNumber(value) && value !== '') || value === 0) {\n      this.setState({ isBorrowEnable: false });\n      this.setState({ borrowButtonText: this.props.borrowButtonInfo });\n    } else {\n      this.setState({ isBorrowEnable: true });\n    }\n  };\n\n  handleBorrowMax = () => {\n    this.setState({ borrowAmount: this.state.maxBorrowAmount });\n    this.setState({ borrowMax: true });\n    this.setState({ exceedsSafeMax: false });\n    if (Number(this.state.maxBorrowAmount) === 0) {\n      this.setState({ isBorrowEnable: false });\n      this.setState({ borrowButtonText: this.props.borrowButtonInfo });\n    } else {\n      this.setState({ isBorrowEnable: true });\n    }\n  }\n\n  handleRepayClick = () => {\n    let repayBorrowAmount = this.state.repayBorrowAmount;\n    if (repayBorrowAmount === '' || repayBorrowAmount === null) {\n      return;\n    }\n    this.setState({ isRepayEnable: false });\n    if (this.state.repayBorrowMax) {\n      repayBorrowAmount = -1;\n    }\n    this.setState({ isRepayBorrowEnable: false, repayButtonText: 'SUBMITTING…', repayBorrowInputDisabled: true, repayBorrowMaxClassName: 'max-amount-button-borrow-disable' });\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    MoneyMarket().repayBorrow.estimateGas(\n      usdxAddress,\n      repayBorrowAmount === -1 ? -1 : this.web3.toWei(repayBorrowAmount, \"ether\"),\n      {\n        from: this.web3.eth.accounts[0]\n      },\n      (err, gasLimit) => {\n        console.log('gasLimit:' + gasLimit);\n        this.web3.eth.getGasPrice((err, gasPrice) => {\n          console.log('gasPrice:' + gasPrice);\n          if (gasPrice === undefined && gasPrice === null) {\n            console.err('gasPrice is ' + gasPrice)\n            return;\n          }\n          MoneyMarket().repayBorrow(\n            usdxAddress,\n            repayBorrowAmount === -1 ? -1 : this.web3.toWei(repayBorrowAmount, \"ether\"),\n            {\n              from: this.web3.eth.accounts[0],\n              gas: gasLimit,\n              gasPrice: gasPrice\n            },\n            (err, res) => {\n              if (res !== undefined && res !== null) {\n                let txId = res;\n                let txnHashHref = getTxnHashHref(this.state.NetworkName) + res;\n                let recordRepayBorrowAmount = toDoubleThousands(this.state.repayBorrowAmount);\n                saveTransaction('loading-borrow-repay', this.web3.eth.accounts[0], Asset['Asset'].USDx,\n                  this.props.page, this.state.NetworkName, 'Repay', recordRepayBorrowAmount, 'USDx', txnHashHref, txId, 0, repayBorrowAmount === -1 ? -1 : this.web3.toWei(repayBorrowAmount, \"ether\"), false, null);\n              } else {\n                this.setState({ isRepayBorrowEnable: true, repayBorrowInputDisabled: false });\n              }\n            }\n          )\n        }\n        )\n      }\n    );\n  }\n\n  handleRepayChange = (value) => {\n    if (value === null || value === '') {\n      this.setState({ isRepayBorrowEnable: true });\n      this.setState({ repayButtonText: this.props.repayButtonInfo });\n      this.setState({ repayBorrowAmount: '' });\n      this.setState({ repayBorrowMax: false });\n      return;\n    } else if (value.toString().length > 18 || (value > this.state.maxRepayBorrowAmount && !isNaN(value))) {\n      // let repayButtonText= 'INSUFFICIENT BALANCE';\n      this.setState({ repayBorrowAmount: value });\n      this.setState({ isRepayBorrowEnable: false });\n      this.setState({ repayButtonText: this.props.repayButtonInfo });\n      return;\n    } else if (value > this.state.myAddressUSDxBalance) {\n      let repayButtonText = 'INSUFFICIENT BALANCE';\n      this.setState({ repayBorrowAmount: value });\n      this.setState({ isRepayBorrowEnable: false });\n      this.setState({ repayButtonText: repayButtonText });\n      return;\n    }\n    if (value.toString().indexOf('.') === value.toString().length - 1) {\n      value = value + '00'\n    }\n    this.setState({ repayBorrowAmount: value });\n    this.setState({ repayBorrowMax: false });\n    if ((!validNumber(value) && value !== '') || value === 0) {\n      this.setState({ isRepayBorrowEnable: false });\n      this.setState({ repayButtonText: this.props.repayButtonInfo });\n    } else {\n      this.setState({ isRepayBorrowEnable: true });\n    }\n  }\n\n  handleRepayMax = () => {\n    this.setState({ repayBorrowAmount: this.state.maxRepayBorrowAmount, repayBorrowMax: true });\n\n    if (Number(this.state.maxRepayBorrowAmount) === 0) {\n      this.setState({ isRepayBorrowEnable: false });\n      this.setState({ repayButtonText: this.props.repayButtonInfo });\n    } else if (this.state.maxRepayBorrowAmount > this.state.myAddressUSDxBalance) {\n      this.setState({ isRepayBorrowEnable: false });\n      this.setState({ repayButtonText: 'INSUFFICIENT BALANCE' });\n    } else {\n      this.setState({ isRepayBorrowEnable: true });\n    }\n  }\n\n\n  getBorrowBalance = () => {\n    if (window.web3 !== undefined && this.web3.eth.accounts[0] !== undefined && MoneyMarket() !== undefined) {\n      let usdxAddress = '';\n      let NetworkName = findNetwork(this.state.NetworkName);\n      if (NetworkName === 'Main') {\n        usdxAddress = Network.Main.USDx;\n      } else if (NetworkName === 'Rinkeby') {\n        usdxAddress = Network.Rinkeby.USDx;\n      }\n      MoneyMarket().getBorrowBalance(this.web3.eth.accounts[0], usdxAddress, (err, res) => {\n        let borrowBalance = 0;\n        if (res !== undefined && res !== null) {\n          borrowBalance = res.toNumber();\n        }\n        if (this.state.borrowedUSDxBalance !== this.web3.fromWei(borrowBalance, \"ether\")) {\n          this.setState({ borrowedUSDxBalance: this.web3.fromWei(borrowBalance, \"ether\") });\n        }\n        if (this.state.maxRepayBorrowAmount !== this.web3.fromWei(borrowBalance, \"ether\")) {\n          this.setState({ maxRepayBorrowAmount: this.web3.fromWei(borrowBalance, \"ether\") });\n        }\n      });\n    }\n  };\n\n  // USDx Available ( cash ) \n  getUSDxBalance = () => {\n    if (USDX() === undefined) {\n      return;\n    }\n    let mmAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      mmAddress = Network.Main.MoneyMarket;\n    } else if (NetworkName === 'Rinkeby') {\n      mmAddress = Network.Rinkeby.MoneyMarket;\n    }\n    USDX().balanceOf(\n      mmAddress,\n      (err, res) => {\n        let balance = 0;\n        if (res !== undefined && res !== null) {\n          balance = res.toNumber();\n        }\n        if (this.state.usdxBalance !== toFormatShowNumber(this.web3.fromWei(balance, \"ether\"))) {\n          this.setState({ usdxBalance: toFormatShowNumber(this.web3.fromWei(balance, \"ether\")) }, () => {\n            // console.log(this.state.usdxBalance);\n          });\n        }\n      });\n  }\n\n  getAccountUSDXBalanceByAddress = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || USDX() === undefined) {\n      return;\n    }\n    USDX().balanceOf(this.web3.eth.accounts[0],\n      (err, res) => {\n        let usdxBalance = 0;\n        if (res !== undefined && res !== null) {\n          usdxBalance = this.web3.fromWei(res.toNumber(), \"ether\");\n        }\n        if (this.state.USDXPersonalBalance !== usdxBalance) {\n          this.setState({ USDXPersonalBalance: usdxBalance })\n        }\n      }\n    );\n  }\n\n  getOriginationFee = () => {\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    MoneyMarket().originationFee((err, res) => {\n      let originationFeeRes = 0;\n      if (res === undefined || res === null) {\n        return;\n      }\n      originationFeeRes = formatBigNumber(res);\n      if (this.state.originationFee !== originationFeeRes)\n        this.setState({ originationFee: originationFeeRes });\n    });\n  }\n\n  getAccountBalance = () => {\n    if (window.web3 === undefined || this.web3.eth.accounts[0] === undefined || MoneyMarket() === undefined) {\n      return;\n    }\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    MoneyMarket().getBorrowBalance(\n      this.web3.eth.accounts[0],\n      usdxAddress,\n      (err, res) => {\n        if (res === undefined || res === null) {\n          return;\n        }\n        res = formatBigNumber(res);\n        let sumofSupplies = this.state.supplyWETHAmount * this.state.WETHAssetPrice;\n        let sumofBorrow = res;\n        let availableToBorrow = sumofSupplies / this.state.collateralRatio - sumofBorrow;\n        // console.log('sumofSupplies:' + sumofSupplies + ' / sumofBorrow:' + sumofBorrow + ' / cash:' + this.state.cash)\n        let availableBorrowAmount = Math.min(availableToBorrow, this.state.cash);\n\n        if (Number(availableBorrowAmount) < 0) {\n          availableBorrowAmount = 0;\n        }\n\n        if (Number(availableBorrowAmount) === Number(this.state.cash)) {\n          availableBorrowAmount = this.state.cash;\n        } else if (Number(availableBorrowAmount) === Number(availableToBorrow)) {\n          availableBorrowAmount = availableBorrowAmount / (1 + Number(this.state.originationFee));\n        }\n\n        // console.log('borrow_input---', this.state.usdxAvailableAmount, availableToBorrow, this.state.cash);\n\n        if (this.state.usdxAvailableAmount !== availableBorrowAmount) {\n          this.setState({ usdxAvailableAmount: availableBorrowAmount }, () => {\n            // console.log('borrow_input---', this.state.usdxAvailableAmount, availableToBorrow, this.state.cash);\n          })\n        }\n      }\n    )\n  }\n\n  getCurrentSupplyWETHAmount = () => {\n    if (window.web3 !== undefined && this.web3.eth.accounts[0] !== undefined && MoneyMarket() !== undefined) {\n      let wethAddress = '';\n      let NetworkName = findNetwork(this.state.NetworkName);\n      if (NetworkName === 'Main') {\n        wethAddress = Network.Main.WETH;\n      } else if (NetworkName === 'Rinkeby') {\n        wethAddress = Network.Rinkeby.WETH;\n      }\n      MoneyMarket().getSupplyBalance(this.web3.eth.accounts[0],\n        wethAddress,\n        (err, res) => {\n          if (res !== undefined && res !== null && this.state.supplyWETHAmount !== this.web3.fromWei(res.toNumber(), \"ether\")) {\n            this.setState({ supplyWETHAmount: this.web3.fromWei(res.toNumber(), \"ether\") });\n          }\n        }\n      );\n    }\n  }\n\n  getWETHAssetPrice = () => {\n    //weth价格修改\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    let wethAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      wethAddress = Network.Main.WETH;\n    } else if (NetworkName === 'Rinkeby') {\n      wethAddress = Network.Rinkeby.WETH;\n    }\n    MoneyMarket().assetPrices(wethAddress, (err, res) => {\n      if (res !== undefined && res !== null) {\n        if (this.state.usdxAssetPrice !== 0 && res.toNumber() !== 0 && this.state.WETHAssetPrice !== this.web3.fromWei(res.toNumber(), \"ether\") / this.state.usdxAssetPrice) {\n          this.setState({\n            WETHAssetPrice: this.web3.fromWei(res.toNumber(), \"ether\") / this.state.usdxAssetPrice\n          });\n        }\n      }\n    });\n  }\n\n  getUSDxAssetPrice = () => {\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    MoneyMarket().assetPrices(usdxAddress, (err, res) => {\n      if (res !== undefined && res !== null && this.state.usdxAssetPrice !== this.web3.fromWei(res.toNumber(), \"ether\")) {\n        this.setState({\n          usdxAssetPrice: this.web3.fromWei(res.toNumber(), \"ether\")\n        });\n      }\n    });\n  }\n\n  getCash = () => {\n    if (USDX() === undefined) {\n      return;\n    }\n    let mmAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      mmAddress = Network.Main.MoneyMarket;\n    } else if (NetworkName === 'Rinkeby') {\n      mmAddress = Network.Rinkeby.MoneyMarket;\n    }\n    USDX().balanceOf(mmAddress, (err, res) => {\n      let cash = 0;\n      if (res !== undefined && res !== null) {\n        cash = res.toNumber();\n      }\n      if (this.state.cash !== toFormatShowNumber(this.web3.fromWei(cash, \"ether\"))) {\n        this.setState({ cash: toFormatShowNumber(this.web3.fromWei(cash, \"ether\")) })\n      }\n    });\n  }\n\n  refreshData = () => {\n    this.getCollateralRatio();\n    this.getWETHAssetPrice();\n    this.getCurrentSupplyWETHAmount();\n    this.getUSDxAssetPrice();\n    this.getCash();\n    this.getUSDxAllowance();\n    this.getBorrowBalance();\n    this.getMyAddressUSDxBalance();\n    this.getBorrowMarketInfo('USDx');\n    this.getBorrowMarketInfo('WETH');\n    this.getAccountBalance();\n    this.getUSDxBalance();\n    this.getMaxBorrowAmount();\n    this.getAccountUSDXBalanceByAddress();\n  }\n\n  refreshDataEventMonitor = () => {\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    MoneyMarket().allEvents({ toBlock: 'latest' }).watch((error, result) => {\n      if (error) {\n        console.log('watch error --> ' + JSON.stringify(error));\n        return;\n      }\n      let eventObj = JSON.parse(JSON.stringify(result));\n      let event = eventObj.event;\n      // console.log('refreshDataEventMonitor eventObj:' + JSON.stringify(result))\n      if (event === 'BorrowTaken' || event === 'BorrowRepaid' || event === 'SupplyReceived' || event === 'SupplyWithdrawn') {\n        this.getCurrentSupplyWETHAmount();\n        this.getWETHAssetPrice();\n        this.getUSDxAssetPrice();\n        this.getCash();\n        this.getAccountBalance();\n        this.getMaxBorrowAmount();\n        this.getBorrowBalance();\n\n        this.setState({ borrowAmount: null, borrowMax: false, exceedsSafeMax: false, isBorrowEnable: true, repayBorrowAmount: null, isRepayEnable: true, repayBorrowMax: false, isRepayBorrowEnable: true });\n      }\n    });\n  }\n\n  mmEventMonitor = () => {\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    let that = this;\n    var borrowTakenEvent = MoneyMarket().BorrowTaken();\n    borrowTakenEvent.watch((error, result) => {\n      console.log('watch -> borrowTakenEvent:' + JSON.stringify(result));\n      if (error) {\n        console.log('watch mmEventMonitor borrowTakenEvent error --> ' + JSON.stringify(error));\n        return;\n      }\n      var storage = null;\n      var results = null;\n      var key = null;\n      if (window.localStorage) {\n        if (typeof web3 === 'undefined') {\n          return;\n        }\n        storage = window.localStorage;\n        key = getTransactionHistoryKey(that.props.account, Asset['Asset'].USDx, that.props.page, that.state.NetworkName);\n        results = JSON.parse(`${storage.getItem(key)}`);\n      }\n      if (results === null) {\n        return;\n      }\n      let resultObj = JSON.parse(JSON.stringify(result));\n      var txId = resultObj.transactionHash;\n      that.setState({ borrowAmount: null, isBorrowEnable: true, borrowMax: false, exceedsSafeMax: false, borrowInputDisabled: false, borrowMaxClassName: 'max-amount-button-borrow' });\n      storage.removeItem(key);\n      let argsObj = JSON.parse(JSON.stringify(resultObj.args));\n      results = results.map(item => {\n        // check is speed up\n        if (item.status === 0 && item.transactionType === 'Borrow' && item.realAmount === argsObj.amount && item.txId !== txId) {\n          let txnHashHref = getTxnHashHref(that.state.NetworkName) + txId;\n          return {\n            ...item,\n            icon: 'borrow',\n            status: 1,\n            txId: txId,\n            txnHashHref: txnHashHref\n          }\n        } else if (item.txId === txId) {\n          return {\n            ...item,\n            icon: 'borrow',\n            status: 1\n          }\n        }\n        return {\n          ...item\n        }\n      })\n      storage.setItem(key, JSON.stringify(results));\n    });\n\n    var borrowRepaidEvent = MoneyMarket().BorrowRepaid();\n    borrowRepaidEvent.watch((error, result) => {\n      console.log('watch -> borrowRepaidEvent:' + JSON.stringify(result));\n      if (error) {\n        console.log('watch mmEventMonitor borrowRepaidEvent error --> ' + JSON.stringify(error));\n        return;\n      }\n      var storage = null;\n      var results = null;\n      var key = null;\n      if (window.localStorage) {\n        if (typeof web3 === 'undefined') {\n          return;\n        }\n        storage = window.localStorage;\n        key = getTransactionHistoryKey(that.props.account, Asset['Asset'].USDx, that.props.page, that.state.NetworkName);\n        results = JSON.parse(`${storage.getItem(key)}`);\n      }\n      if (results === null) {\n        return;\n      }\n      let resultObj = JSON.parse(JSON.stringify(result));\n      var txId = resultObj.transactionHash;\n      this.setState({ isRepayBorrowEnable: true, repayBorrowAmount: null, isBorrowEnable: true, borrowAmount: null, repayBorrowInputDisabled: false, repayBorrowMaxClassName: 'max-amount-button-borrow' });\n      this.setState({ isRepayEnable: true, repayBorrowMax: false });\n      storage.removeItem(key);\n      let argsObj = JSON.parse(JSON.stringify(resultObj.args));\n      results = results.map(item => {\n        // check is speed up\n        if (item.status === 0 && item.transactionType === 'Repay' && item.realAmount === argsObj.amount && item.txId !== txId) {\n          let txnHashHref = getTxnHashHref(that.state.NetworkName) + txId;\n          return {\n            ...item,\n            icon: 'borrow',\n            status: 1,\n            txId: txId,\n            txnHashHref: txnHashHref\n          }\n        } else if (item.txId === txId) {\n          return {\n            ...item,\n            icon: 'repay',\n            status: 1\n          }\n        }\n        return {\n          ...item\n        }\n      })\n      storage.setItem(key, JSON.stringify(results));\n    });\n\n    var failureEvent = MoneyMarket().Failure();\n    failureEvent.watch(function (error, result) {\n      console.log('watch -> failureEvent:' + JSON.stringify(result));\n      if (error) {\n        console.log('watch mmEventMonitor failureEvent error --> ' + JSON.stringify(error));\n        return;\n      }\n      var storage = null;\n      var results = null;\n      var key = null;\n      if (window.localStorage) {\n        if (typeof web3 === 'undefined') {\n          return;\n        }\n        storage = window.localStorage;\n        key = getTransactionHistoryKey(that.props.account, Asset['Asset'].USDx, that.props.page, that.state.NetworkName);\n        results = JSON.parse(`${storage.getItem(key)}`);\n      }\n      if (results === null) {\n        return;\n      }\n      let resultObj = JSON.parse(JSON.stringify(result));\n      var txId = resultObj.transactionHash;\n      that.setState({ isBorrowEnable: true, borrowAmount: null, borrowMax: false, borrowInputDisabled: false, borrowMaxClassName: 'max-amount-button-borrow' });\n      that.setState({ isRepayEnable: true, repayBorrowAmount: null, repayBorrowMax: false, repayBorrowInputDisabled: false, repayBorrowMaxClassName: 'max-amount-button-borrow' });\n      // change icon and status = 1 by txId\n      storage.removeItem(key);\n      results = results.map(item => {\n        if (item.txId === txId) {\n          let errorArgs = resultObj.args;\n          let argsObj = JSON.parse(JSON.stringify(errorArgs));\n          console.log('borrow failure info:' + ErrorCode[argsObj.error]);\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: ErrorCode[argsObj.error]\n          }\n        }\n        return {\n          ...item\n        }\n      })\n      storage.setItem(key, JSON.stringify(results));\n    });\n  }\n\n  usdxEventMonitor = () => {\n    if (USDX() === undefined) {\n      return;\n    }\n    let that = this;\n    var approvalUSDXEvent = USDX().Approval();\n    approvalUSDXEvent.watch((error, result) => {\n      console.log('watch borrow-> approvalUSDXEvent:' + JSON.stringify(result));\n      if (error) {\n        console.log('watch borrow usdxEventMonitor approvalUSDXEvent error --> ' + JSON.stringify(error));\n        return;\n      }\n      var storage = null;\n      var results = null;\n      var key = null;\n      if (window.localStorage) {\n        if (typeof web3 === 'undefined') {\n          return;\n        }\n        storage = window.localStorage;\n        key = getTransactionHistoryKey(that.props.account, Asset['Asset'].USDx, that.props.page, that.state.NetworkName);\n        results = JSON.parse(`${storage.getItem(key)}`);\n      }\n      if (results === null) {\n        return;\n      }\n      let resultObj = JSON.parse(JSON.stringify(result));\n      var txId = resultObj.transactionHash;\n      that.getUSDxAllowance();\n      that.setState({ pendingApproval: false, isApproved: true });\n      // change icon and status = 1 by txId\n      storage.removeItem(key);\n      results = results.map(item => {\n        if (item.status === 0 && item.transactionType === 'Enable' && item.txId !== txId) {\n          let txnHashHref = getTxnHashHref(that.state.NetworkName) + txId;\n          return {\n            ...item,\n            icon: 'done',\n            status: 1,\n            txId: txId,\n            txnHashHref: txnHashHref\n          }\n        } else if (item.txId === txId) {\n          return {\n            ...item,\n            icon: 'done',\n            status: 1\n          }\n        }\n        return {\n          ...item\n        }\n      })\n      storage.setItem(key, JSON.stringify(results));\n    });\n  }\n\n  //check\n  checkWaitingUpdateTransactionRecords = () => {\n    var storage = null;\n    var results = null;\n    var key = null;\n    if (window.localStorage) {\n      if (typeof web3 === 'undefined') {\n        return;\n      }\n      storage = window.localStorage;\n      key = getTransactionHistoryKey(this.web3.eth.accounts[0], Asset['Asset'].USDx, this.props.page, this.state.NetworkName);\n      results = JSON.parse(`${storage.getItem(key)}`);\n    }\n    if (results === null) {\n      return;\n    }\n    storage.removeItem(key);\n    results = results.map(item => {\n      if (item.icon === 'loading-borrow') {\n        if (this.state.borrowUSDxWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n          this.setState({ isBorrowEnable: true, borrowInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.setState({ borrowAmount: null, isBorrowEnable: true, borrowMax: false, exceedsSafeMax: false, borrowInputDisabled: false, borrowMaxClassName: 'max-amount-button-borrow' });\n          }\n          return {\n            ...item,\n            icon: 'borrow',\n            status: 1\n          }\n        }\n        if (this.state.borrowUSDxWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n          this.setState({ isBorrowEnable: true, borrowInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.setState({ borrowAmount: null, isBorrowEnable: true, borrowMax: false, exceedsSafeMax: false, borrowInputDisabled: false, borrowMaxClassName: 'max-amount-button-borrow' });\n          }\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: 'BORROW USDx FAILURE'\n          }\n        }\n        //超时则取消控件限制\n        if (this.state.borrowUSDxWaitUpdateTimeOutMap.get(item.txId) !== undefined) {\n          return {\n            ...item,\n            timeOutFlag: 1\n          }\n        }\n      }\n\n      if (item.icon === 'loading-borrow-repay') {\n        if (this.state.repayUSDxWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n          this.setState({ isRepayBorrowEnable: true, repayBorrowInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.setState({ isRepayBorrowEnable: true, repayBorrowAmount: null, isBorrowEnable: true, borrowAmount: null, repayBorrowInputDisabled: false, repayBorrowMaxClassName: 'max-amount-button-borrow' });\n            this.setState({ isRepayEnable: true, repayBorrowMax: false });\n          }\n          return {\n            ...item,\n            icon: 'borrow',\n            status: 1\n          }\n        }\n        if (this.state.repayUSDxWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n          this.setState({ isRepayBorrowEnable: true, repayBorrowInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.setState({ isRepayBorrowEnable: true, repayBorrowAmount: null, isBorrowEnable: true, borrowAmount: null, repayBorrowInputDisabled: false, repayBorrowMaxClassName: 'max-amount-button-borrow' });\n            this.setState({ isRepayEnable: true, repayBorrowMax: false });\n          }\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: 'REPAY USDx FAILURE'\n          }\n        }\n        //超时则取消控件限制\n        if (this.state.repayUSDxWaitUpdateTimeOutMap.get(item.txId) !== undefined) {\n          return {\n            ...item,\n            timeOutFlag: 1\n          }\n        }\n      }\n\n      if (item.icon === 'loading-borrow-approve') {\n        if (this.state.enableUSDxWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n          this.setState({ pendingApproval: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.getUSDxAllowance();\n            this.setState({ pendingApproval: false, isApproved: true });\n          }\n          return {\n            ...item,\n            icon: 'done',\n            status: 1\n          }\n        }\n        if (this.state.enableUSDxWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n          this.setState({ pendingApproval: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.getUSDxAllowance();\n            this.setState({ pendingApproval: false, isApproved: true });\n          }\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: 'ENABLE USDx FAILURE'\n          }\n        }\n        //超时则取消控件限制\n        if (this.state.enableUSDxWaitUpdateTimeOutMap.get(item.txId) !== undefined) {\n          return {\n            ...item,\n            timeOutFlag: 1\n          }\n        }\n      }\n\n      return {\n        ...item\n      }\n    })\n    storage.setItem(key, JSON.stringify(results));\n  }\n\n  checkTransactionsStatus = () => {\n    var storage = null;\n    var results = null;\n    var key = null;\n    if (window.localStorage) {\n      if (typeof web3 === 'undefined') {\n        return;\n      }\n      storage = window.localStorage;\n      key = getTransactionHistoryKey(this.web3.eth.accounts[0], Asset['Asset'].USDx, this.props.page, this.state.NetworkName);\n      results = JSON.parse(`${storage.getItem(key)}`);\n    }\n    if (results === null) {\n      return;\n    }\n    results.map(item => {\n      if (item.icon === 'loading-borrow') {\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ isBorrowEnable: true, borrowAmount: '', borrowMax: false, exceedsSafeMax: false, buttonText: this.props.borrowButtonInfo, borrowInputDisabled: false, borrowMaxClassName: 'max-amount-button-borrow' });\n          } else {\n            this.setState({ isBorrowEnable: false, borrowButtonText: 'SUBMITTING…', borrowInputDisabled: true, borrowMaxClassName: 'max-amount-button-borrow-disable' });\n          }\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.borrowUSDxWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.borrowUSDxWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.borrowUSDxWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.borrowUSDxWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.borrowUSDxWaitUpdateTimeOutMap.get(item.txId) === undefined) {\n                this.state.borrowUSDxWaitUpdateTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ isBorrowEnable: true, borrowInputDisabled: false });\n        }\n      }\n      if (item.icon === 'loading-borrow-repay') {\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ repayBorrowMax: false, isRepayBorrowEnable: true, repayBorrowAmount: '', buttonText: this.props.repayButtonInfo, repayBorrowInputDisabled: false, repayBorrowMaxClassName: 'max-amount-button-borrow' });\n          } else {\n            this.setState({ isRepayBorrowEnable: false, repayButtonText: 'SUBMITTING…', repayBorrowInputDisabled: true, repayBorrowMaxClassName: 'max-amount-button-borrow-disable' });\n          }\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.repayUSDxWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.repayUSDxWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.repayUSDxWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.repayUSDxWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.repayUSDxWaitUpdateTimeOutMap.get(item.txId) === undefined) {\n                this.state.repayUSDxWaitUpdateTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ isRepayBorrowEnable: true, repayBorrowInputDisabled: false });\n        }\n      }\n      if (item.icon === 'loading-borrow-approve') {\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ approveButtonInfo: this.props.approveButtonInfo, pendingApproval: false });\n          } else {\n            this.setState({ approveButtonInfo: 'ENABLEING USDx...', pendingApproval: true });\n          }\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.enableUSDxWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.enableUSDxWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.enableUSDxWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.enableUSDxWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.enableUSDxWaitUpdateTimeOutMap.get(item.txId) === undefined) {\n                this.state.enableUSDxWaitUpdateTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ pendingApproval: false });\n        }\n      }\n      return item.id;\n    })\n  }\n\n  componentDidMount_temp = () => {\n    // this.refreshDataEventMonitor();//imtoken测试临时注释\n    // this.usdxEventMonitor();//imtoken测试临时注释\n    // this.mmEventMonitor();//imtoken测试临时注释\n    //非imtoken用 ，否则用imtoken测试临时注释\n    if (window.web3 !== undefined && window.ethereum.isImToken === undefined) {\n      this.refreshDataEventMonitor();\n      this.usdxEventMonitor();\n      this.mmEventMonitor();\n    }\n\n    // Recent Transactions status = 0\n    this.checkTransactionsStatusTimer = setInterval(() => {\n      this.checkTransactionsStatus();\n    }, 1000);\n    //check\n    this.checkWaitingUpdateTimer = setInterval(() => {\n      this.checkWaitingUpdateTransactionRecords();\n    }, 1000 * 15);\n\n    this.getOriginationFee();\n    this.refreshMaxData = setInterval(() => {\n      this.getCollateralRatio();\n      this.getWETHAssetPrice();\n      this.getUSDxAssetPrice();\n      this.getCurrentSupplyWETHAmount();\n      this.getCash();\n      this.getBorrowBalance();\n      this.getMyAddressUSDxBalance();\n      this.getAccountBalance();\n      this.getUSDxBalance();\n      this.getMaxBorrowAmount();\n      this.getAccountUSDXBalanceByAddress();\n      this.getOriginationFee();\n    }, 1000 * 5)\n\n    // Initial Loading Component Info \n    this.refreshData();\n  }\n\n  // ***** 华丽的分割线 ***** ***** 华丽的分割线 ***** ***** 华丽的分割线 ***** ***** 华丽的分割线 ***** ***** 华丽的分割线 ***** ***** 华丽的分割线 ***** ***** 华丽的分割线 *****\n\n\n  get_Borrow_Balance = () => {\n    if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined && MoneyMarket() !== undefined) {\n      let usdxAddress = '';\n      let NetworkName = findNetwork(this.state.NetworkName);\n      if (NetworkName === 'Main') {\n        usdxAddress = Network.Main.USDx;\n      } else if (NetworkName === 'Rinkeby') {\n        usdxAddress = Network.Rinkeby.USDx;\n      }\n      MoneyMarket().getBorrowBalance(this.web3.eth.accounts[0], usdxAddress, (err, res_borrowed_BN) => {\n        if (res_borrowed_BN) {\n          this.setState({ my_borrowed_usdx: this.web3.fromWei(res_borrowed_BN.toNumber(), \"ether\") });\n        }\n      });\n    }\n  };\n\n\n\n\n\n  componentWillUnmount() {\n    clearInterval(this.availableTimer);\n    clearInterval(this.getAddressIntervalBorrow);\n    clearInterval(this.accountInterval);\n    clearInterval(this.refreshMaxData);\n    clearInterval(this.checkTransactionsStatusTimer);\n    clearInterval(this.checkWaitingUpdateTimer);\n  }\n\n\n  render() {\n    const approveProps = {\n      enableMessage: `Before Borrowing ${this.props.balanceType} for the first time, you must enable ${this.props.balanceType}.`,\n      isEnable: !this.state.pendingApproval,\n      buttonInfo: this.state.approveButtonInfo,\n      handleClick: this.handleApprove,\n      page: this.props.page\n    };\n    const borrowProps = {\n      balanceDescription: '',\n      // balanceAmount: this.state.accountBalance,\n      balanceAmount: this.state.usdxAvailableAmount,\n      balanceType: this.props.balanceType,\n      balanceUnit: 'Available',\n      minAmount: 0,\n      maxAmount: this.state.maxBorrowAmount,\n      step: 0.01,\n      amount: this.state.borrowAmount,\n      isEnable: this.state.isBorrowEnable,\n      inputDisabled: this.state.borrowInputDisabled,\n      // isEnable: this.state.isApproved,\n      // buttonInfo: this.props.borrowButtonInfo,\n      buttonInfo: this.state.isBorrowEnable ? this.props.borrowButtonInfo : this.state.borrowButtonText,\n      handleChange: this.handleBorrowChange,\n      handleClick: this.handleBorrowClick,\n      handleMax: this.handleBorrowMax,\n      hasLendUSDx: this.props.hasLendUSDx,\n      placeholderHint: 'Amount in ' + this.props.balanceType,\n      buttonClassName: 'button-wrapper-borrow',\n      safeMax: 'SAFE ',\n      exceedsSafeMax: this.state.exceedsSafeMax,\n      maxClassName: this.state.borrowMaxClassName\n    };\n    const repayProps = {\n      balanceDescription: '',\n      balanceAmount: this.state.USDXPersonalBalance,//////\n      balanceType: this.props.balanceType,\n      balanceUnit: 'Balance',\n      minAmount: 0,\n      maxAmount: this.state.maxRepayBorrowAmount,\n      step: 0.01,\n      amount: this.state.repayBorrowAmount,\n      isEnable: this.state.isRepayBorrowEnable,\n      inputDisabled: this.state.repayBorrowInputDisabled,\n      // isEnable: this.state.isRepayEnable,\n      // isEnable: this.state.isApproved,\n      // buttonInfo: this.props.repayButtonInfo,\n      buttonInfo: this.state.isRepayBorrowEnable ? this.props.repayButtonInfo : this.state.repayButtonText,\n      handleChange: this.handleRepayChange,\n      handleClick: this.handleRepayClick,\n      handleMax: this.handleRepayMax,\n      hasLendUSDx: this.props.hasLendUSDx,\n      placeholderHint: 'Amount in ' + this.props.balanceType,\n      buttonClassName: 'button-wrapper-borrow',\n      maxClassName: this.state.repayBorrowMaxClassName\n    };\n\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <div className='borrow-input'>\n          <BalanceInfoWithIcon coin={'USDx'} action={'Borrowed'} login={this.props.login} />\n          {/* <div className='info-wrapper'>\n            <span className='balance-type'>\n              <img style={{ width: '16px', height: '16px', margin: 'auto', marginTop: '-4px' }} src={`images/USDx@2x.png`} alt=\"\" />&nbsp;\n            <FormattedMessage id='USDx_Borrowed_borrow' />\n            </span>\n            <span className='balance-amount'>\n              {this.state.my_borrowed_usdx ? toDoubleThousands(this.state.my_borrowed_usdx) : '-'}\n            </span>\n          </div> */}\n\n\n          <Tabs className='tab-wrapper' animated={true} size='large' onChange={this.changePane}>\n            <TabPane tab={navigator.language === 'zh-CN' ? '借款' : 'BORROW'} key=\"1\" className='tab-content'>\n              {\n                this.props.father_approve_USDx == 1\n                  ?\n                  <span>\n                    <CoinAvailable coin={'usdx'} action={'repay'} login={this.web3.eth.accounts[0]} />\n                    <InputUnit {...borrowProps} />\n                  </span>\n                  :\n                  <Approve {...approveProps} />\n              }\n            </TabPane>\n\n            <TabPane tab={navigator.language === 'zh-CN' ? '偿还' : 'REPAY'} key=\"2\" className='tab-content'>\n              {this.state.isApproved && <CoinBalance coin={'usdx'} login={this.props.login} />}\n              {this.state.isApproved\n                ?\n                <InputUnit {...repayProps} />\n                :\n                <Approve {...approveProps} />\n              }\n            </TabPane>\n          </Tabs>\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default BorrowInput;","import React, { Component } from 'react';\nimport USDX from \"./../../ABIs/USDX.js\";\nimport WETH from \"./../../ABIs/WETH.js\";\nimport { findNetwork, saveLoginStatus, getLoginStatusKey } from './../../util.js';\nimport './header.scss';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLogIn: false,\n            ETHToUSD: '-',\n        }\n        this.web3 = window.web3;\n\n        // this.componentDidMount_temp();\n        window.web3.version.getNetwork((e, r) => {\n            if (r) {\n                this.setState({\n                    NetworkName: r\n                }, () => {\n                    this.componentDidMount_temp();\n                })\n            }\n        })\n\n        if (window.web3.currentProvider.isMetaMask) {\n            window.ethereum.on('accountsChanged', () => {\n                this.componentDidMount_temp();\n            });\n        }\n    }\n\n    checkLogIn = (isLogin) => {\n        // save to local storage\n        if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined) {\n            return;\n        }\n        var storage = null;\n        var results = null;\n        var key = getLoginStatusKey(this.web3.eth.accounts[0]);\n        if (window.localStorage) {\n            storage = window.localStorage;\n            results = JSON.parse(`${storage.getItem(key)}`);\n        }\n        if (results === null) {\n            saveLoginStatus(this.web3.eth.accounts[0], isLogin);\n            return;\n        }\n        storage.removeItem(key);\n        results = results.map(item => {\n            if (item.account === this.web3.eth.accounts[0]) {\n                return {\n                    ...item,\n                    isLogin: isLogin\n                }\n            }\n            return {\n                ...item\n            }\n        })\n        storage.setItem(key, JSON.stringify(results));\n    }\n\n    connectMetamask = () => {\n        if (typeof web3 === 'undefined') {\n            return;\n        }\n        window.web3.currentProvider.enable().then(\n            res => {\n                this.setState({ isLogIn: true });\n            }\n        )\n        this.checkLogIn(true);\n    }\n\n    unConnectMetamask = () => {\n        this.setState({ isLogIn: false });\n        this.checkLogIn(false);\n    }\n\n    componentDidMount_temp = () => {\n        // this.connectMetamask();\n        // this.getETHAssetPrices();\n\n        setTimeout(() => {\n            this.connectMetamask();\n            // this.getETHAssetPrices();\n        }, 2000);\n\n        this.timerID = setInterval(() => {\n            // this.getETHAssetPrices();\n            var storage = null;\n            var results = null;\n            if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined) {\n                return;\n            }\n            var key = getLoginStatusKey(this.web3.eth.accounts[0]);\n            if (window.localStorage) {\n                storage = window.localStorage;\n                results = JSON.parse(`${storage.getItem(key)}`);\n            }\n            if (results === null) {\n                return;\n            }\n            // console.log('header --- is login.');\n            results = results.map(item => {\n                if (item.account === this.web3.eth.accounts[0] && this.state.isLogIn !== item.isLogin) {\n                    this.setState({ isLogIn: item.isLogin });\n                }\n                return item.id;\n            })\n        }, 1000 * 15)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    // 领取测试币 USDx\n    allocateUSDx = () => {\n        if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined) {\n            return;\n        }\n        USDX().allocateTo(this.web3.eth.accounts[0], this.web3.toWei(100, \"ether\"), (err, res) => { });\n    }\n\n    // 测试用 weth_faucet\n    allocateWETH = () => {\n        if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined) {\n            return;\n        }\n        WETH().allocateTo(this.web3.eth.accounts[0], this.web3.toWei(100, \"ether\"), (err, res) => { });\n    }\n\n    render = () => {\n        let NetworkName = window.web3 !== undefined ? findNetwork(this.state.NetworkName) : null;\n        return (\n            <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n                <div className={'header ' + (NetworkName === 'Main' ? 'without-banner' : 'with-banner')}>\n                    <div className='header-content'>\n                        <div className='left'>\n                            <img className='header-logo' style={{ margin: 'auto' }} src={'images/h_logo@2x.svg'} alt=\"HEADER\" />\n\n                            <div className='market-info'>\n                                <span className='market-info-title'>\n                                    USDx\n                                    <FormattedMessage id='Balance' />\n                                    {window.web3 !== undefined && findNetwork(this.state.NetworkName) === 'Rinkeby' ? <a className='usdx-faucet' onClick={this.allocateUSDx}>Faucet</a> : ''}</span>\n                                <span className='market-info-digits'>{this.props.USDxBalance}</span>\n                            </div>\n\n                            <div className='market-info'>\n                                <span className='market-info-title'>\n                                    ETH\n                                    <FormattedMessage id='Balance' />\n                                </span>\n                                <span className='market-info-digits'>{this.props.ETHBalance}</span>\n                            </div>\n\n                            <div className='market-info'>\n                                <span className='market-info-title'>\n                                    WETH\n                                    <FormattedMessage id='Balance' />\n                                </span>\n                                <span className='market-info-digits'>{this.props.WETHBalance}</span>\n                            </div>\n\n                            <div className='market-info'>\n                                <span className='market-info-title'>ETH/USD</span>\n                                <span className='market-info-digits'>{this.props.ETHToUSD}</span>\n                            </div>\n                        </div>\n\n\n\n                        <div className='right'>\n                            {/* <div className='account-info'>\n                            <div className='market-info-digits'><i />  {this.props.networkName}</div>\n                            <div className='market-info-digits'>{this.props.account}</div>\n                        </div> */}\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <div className={this.props.account !== undefined && this.state.isLogIn ? 'signed-in' : 'connect-sign'}></div>\n                                <span style={{ fontWeight: 500, paddingLeft: '8px', color: '#FFF' }}>{this.props.account !== undefined && this.state.isLogIn ? `${this.props.networkName}` : 'Unconnected'}</span>\n                            </div>\n                            <div className=\"login\" style={{ fontWeight: 500, color: '#FFF' }}>\n                                {this.props.account !== undefined && this.state.isLogIn ? this.props.account.substring(0, 8) + '...' + this.props.account.substring(this.props.account.length - 6) : 'Connect to Metamask'}\n                                <div className=\"popup\">\n                                    <span><em></em></span>\n                                    <p style={{ display: this.props.account !== undefined && this.state.isLogIn ? 'none' : 'block', fontWeight: 500 }} onClick={() => this.connectMetamask()}>Connect</p>\n                                    <p className=\"out\" style={{ display: this.props.account !== undefined && this.state.isLogIn ? 'block' : 'none', fontWeight: 500 }} onClick={() => this.unConnectMetamask()}>Logout</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </IntlProvider>\n        )\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Popover } from 'antd';\nimport { formatTransactionTime } from '../../util';\nimport './record.scss';\n\nconst Record = (props) => {\n    return (\n        <Popover placement=\"top\" content={props.failedInfo} trigger={props.failed ? 'hover' : ''}>\n            <div className='transaction' onClick={() => props.goTxnHashHref(props.txnHashHref)}>\n                <div className='transaction-detail'>\n                    <img style={{ height: '16px', width: '16px' }} src={`images/${props.icon}.png`} alt=\"RECORD\"\n                        className={props.icon === 'loading-supply' || props.icon === 'loading-borrow'\n                            || props.icon === 'loading-borrow-repay' || props.icon === 'loading-borrow-approve'\n                            || props.icon === 'loading-supply-wrap' || props.icon === 'loading-supply-unwrap'\n                            || props.icon === 'loading-supply-weth' || props.icon === 'loading-supply-withdraw-weth'\n                            || props.icon === 'loading-supply-usdx' || props.icon === 'loading-supply-withdraw-usdx'\n                            || props.icon === 'loading-supply-weth-approve' || props.icon === 'loading-supply-usdx-approve' ? 'icon-loading' : 'normal'} />\n                    <span style={{ marginLeft: '5px' }}>{props.transactionDetail}</span>\n                </div>\n                <div className='transaction-time'>\n                    <span>{formatTransactionTime(props.transactionTime)}</span>\n                </div>\n            </div>\n        </Popover>\n    )\n}\n\nexport default Record;","import React, { Component } from 'react';\nimport Record from '../../component/record/record';\nimport Asset from '../../constant.json';\nimport { getTransactionHistoryKey } from '../../util.js'\n\nimport './recordBoard.scss';\n\nclass RecordBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            RecentTransactions: []\n        }\n        this.web3 = window.web3;\n\n        // this.componentDidMount_temp();\n        window.web3.version.getNetwork((e, r) => {\n            if (r) {\n                this.setState({\n                    NetworkName: r\n                }, () => {\n                    this.componentDidMount_temp();\n                })\n            }\n        })\n\n        if (window.web3.currentProvider.isMetaMask) {\n            window.ethereum.on('accountsChanged', () => {\n                this.componentDidMount_temp();\n            });\n        }\n    }\n\n    getRecentTransactions = () => {\n        if (window.localStorage) {\n            if (typeof web3 === 'undefined') {\n                return;\n            }\n            // console.log(txIdExist(0x884a4e6c34e471ec2398f4b3e71eb0b27a59844aedb8d4abfb05a85eac6e805f))\n            let storage = window.localStorage;\n            let key = getTransactionHistoryKey(this.props.account, Asset['Asset'][this.props.coinType], this.props.page, this.state.NetworkName);\n            let results = JSON.parse(`${storage.getItem(key)}`);\n            if (results !== null) {\n                results.reverse();\n            }\n            this.setState({ RecentTransactions: results });\n        }\n    }\n\n    goTxnHashHref = (txnHashHref) => {\n        window.open(txnHashHref, '_blank');\n    }\n\n    componentDidMount_temp = () => {\n        // this.getRecentTransactions();\n\n        setTimeout(() => {\n            this.getRecentTransactions();\n        }, 2000);\n\n        this.timerID = setInterval(() => {\n            if (this.props.account !== undefined) {\n                this.getRecentTransactions();\n            }\n        }, 1000 * 5);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    renderRecord() {\n        if (this.state.RecentTransactions === null) {\n            return '';\n        }\n        return (\n            <div className='record-board'>\n                <div className='board-title'>Recent Transactions</div>\n                <div className='board-content'>\n                    {this.state.RecentTransactions ? this.state.RecentTransactions.map((record, i) => <div key={i}><Record {...record} goTxnHashHref={this.goTxnHashHref} /></div>) : null}\n                </div>\n            </div>\n        );\n    }\n\n    render = () => {\n        return (\n            this.renderRecord()\n        )\n    }\n}\n\nexport default RecordBoard;","import React, { Component } from 'react';\nimport MoneyMarket from './../ABIs/MoneyMarket.js';\nimport Network from './../constant.json';\nimport { toDoubleThousands, findNetwork, formatBigNumber } from './../util';\nimport USDX from \"./../ABIs/USDX.js\";\nimport WETH from './../ABIs/WETH.js';\n\nexport function withMarketInfo(Header) {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        USDXPersonalBalance: '-',\n        WETHPersonalBalance: '-',\n        ETHPersonalBalance: '-',\n        ETHToUSD: '-',\n        USDxToUSD: 0,\n        USDxToUSDUnFormat: 0,\n        usdxMarketBalance: 0,\n        assets: ['WETH', 'USDx']\n      }\n      this.web3 = window.web3;\n\n      // this.componentDidMount_temp();\n      window.web3.version.getNetwork((e, r) => {\n        if (r) {\n          this.setState({\n            NetworkName: r\n          }, () => {\n            this.componentDidMount_temp();\n          })\n        }\n      })\n\n      if (window.web3.currentProvider.isMetaMask) {\n        window.ethereum.on('accountsChanged', () => {\n          this.componentDidMount_temp();\n        });\n      }\n    }\n\n    getAccountETHBalanceByAddress = () => {\n      if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) {\n        this.setState({ ETHPersonalBalance: '-' });\n        return;\n      }\n      this.web3.eth.getBalance(this.web3.eth.accounts[0], (err, balance) => {\n        if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n          console.log('===>ethBalance balance:' + balance + ' address:' + this.web3.eth.accounts[0])\n        }\n        if (balance === undefined || balance === null) {\n          return;\n        }\n        balance = formatBigNumber(balance);\n        this.setState({ ETHPersonalBalance: toDoubleThousands(balance) })\n      });\n    }\n\n    getAccountUSDXBalanceByAddress = () => {\n      if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || USDX() === undefined || !this.props.login) {\n        this.setState({ USDXPersonalBalance: '-' })\n        return;\n      }\n      USDX().balanceOf(this.web3.eth.accounts[0],\n        (err, res) => {\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            console.log('===>usdxBalance res:' + res + ' USDX():' + USDX())\n          }\n          if (res === undefined || res === null) {\n            return;\n          }\n          let usdxBalance = 0;\n          usdxBalance = toDoubleThousands(this.web3.fromWei(res.toNumber(), \"ether\"));\n          this.setState({ USDXPersonalBalance: usdxBalance });\n        }\n      );\n\n    }\n\n    getAccountWETHBalanceByAddress = () => {\n      if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || WETH() === undefined || !this.props.login) {\n        this.setState({ WETHPersonalBalance: '-' })\n        return;\n      }\n      WETH().balanceOf(this.web3.eth.accounts[0],\n        (err, res) => {\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            console.log('===>wethBalance res:' + res + ' WETH():' + WETH())\n          }\n          if (res === undefined || res === null) {\n            return;\n          }\n          let wethBalance = 0;\n          wethBalance = toDoubleThousands(this.web3.fromWei(res.toNumber(), \"ether\"));\n          this.setState({ WETHPersonalBalance: wethBalance })\n        }\n      );\n    }\n\n    new_getETHAssetPrices = () => {\n      if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || MoneyMarket() === undefined) {\n        this.setState({ ETHToUSD: '-' })\n        return;\n      }\n      let wethAddress = '';\n      let NetworkName = findNetwork(this.state.NetworkName);\n      if (NetworkName === 'Main') {\n        wethAddress = Network.Main.WETH;\n      } else if (NetworkName === 'Rinkeby') {\n        wethAddress = Network.Rinkeby.WETH;\n      }\n      MoneyMarket().assetPrices(wethAddress, (err1, res1) => {\n        if (res1 !== undefined || res1 !== null) {\n          MoneyMarket().assetPrices(\n            Network[NetworkName]['USDx'],\n            (err2, res2) => {\n              if (res2 !== undefined && res2 !== null) {\n                let ETHToUSDBalance = 0;\n                if (Number(this.web3.fromWei(res2.toNumber(), \"ether\")) !== 0) {\n                  ETHToUSDBalance = toDoubleThousands(this.web3.fromWei(res1.toNumber(), \"ether\") / this.web3.fromWei(res2.toNumber(), \"ether\"));\n                }\n                this.setState({ ETHToUSD: ETHToUSDBalance }, () => {\n                  // console.log(this.state.ETHToUSD);\n                });\n              }\n            }\n          );\n        }\n      });\n    }\n\n\n    componentDidMount_temp = () => {\n      setTimeout(() => {\n        this.getAccountETHBalanceByAddress();\n        this.getAccountUSDXBalanceByAddress();\n        this.getAccountWETHBalanceByAddress();\n        this.new_getETHAssetPrices();\n      }, 2000);\n\n      this.timerID = setInterval(() => {\n        let NetworkName = window.web3 !== undefined ? findNetwork(this.state.NetworkName) : null;\n        if (true && (NetworkName === 'Main' || NetworkName === 'Rinkeby')) {\n          this.getAccountETHBalanceByAddress();\n          this.getAccountUSDXBalanceByAddress();\n          this.getAccountWETHBalanceByAddress();\n          this.new_getETHAssetPrices();\n        }\n      }, 1000 * 15);\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n\n    render() {\n      let NetworkName = window.web3 !== undefined ? findNetwork(this.state.NetworkName) : null;\n      const marketInfo = {\n        USDxBalance: this.state.USDXPersonalBalance,\n        ETHBalance: this.state.ETHPersonalBalance,\n        WETHBalance: this.state.WETHPersonalBalance,\n        ETHToUSD: this.state.ETHToUSD,\n        networkName: this.props.networkName,\n        account: this.props.account,\n        banner: NetworkName === 'Main' ? true : false\n      }\n      return <Header {...marketInfo} />\n    }\n  }\n}\n","import React from 'react';\nimport './infoSection.scss';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nconst InfoSection = (props) => {\n    return (\n        <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n            <div className='info-sec-wrapper'>\n                {props.accountInfo\n                    .filter(info => info.page === props.currentPage)\n                    .map(\n                        (info, key) => (<div className='info-sec' index={key} key={key}>\n                            <div>\n                                <img src={'images/board_icon.png'} style={{ marginRight: '7px' }} alt=\"\" />\n                                {/* <div className='info-title'>{info.title}</div> */}\n                                <div className='info-title'>{info.title === 'USDx Supplied' ? <FormattedMessage id='USDx_Supplied_home' /> : null}</div>\n                                <div className='info-title'>{info.title === 'USDx Borrowed' ? <FormattedMessage id='USDx_Borrowed' /> : null}</div>\n                                <div className='info-title'>{info.title === 'Utilization Rate' ? <FormattedMessage id='Utilization_Rate' /> : null}</div>\n                                <div className='info-title'>{info.title === 'Collateralization ratio' ? <FormattedMessage id='Collateralization_ratio' /> : null}</div>\n                                <div className='info-title'>{info.title === 'USDx Supply APR' ? <FormattedMessage id='USDx_Supply_APR' /> : null}</div>\n                                <div className='info-title'>{info.title === 'USDx Borrow APR' ? <FormattedMessage id='USDx_Borrow_APR' /> : null}</div>\n\n                                <div className='info-title'>{info.title === 'Total Supplied' ? <FormattedMessage id='Total_Supplied' /> : null}</div>\n                                <div className='info-title'>{info.title === 'Total Borrowed' ? <FormattedMessage id='Total_Borrowed' /> : null}</div>\n                                <div className='info-title'>{info.title === 'Supply APR' ? <FormattedMessage id='Supply_APR' /> : null}</div>\n                                <div className='info-title'>{info.title === 'Borrow APR' ? <FormattedMessage id='Borrow_APR' /> : null}</div>\n\n                                <div className='info-title'>{info.title === 'Supplied Balance' ? <FormattedMessage id='Supplied_Balance' /> : null}</div>\n                                <div className='info-title'>{info.title === 'Borrowed Balance' ? <FormattedMessage id='Borrowed_Balance' /> : null}</div>\n                                <div className='info-title'>{info.title === 'Available to Borrow' ? <FormattedMessage id='Available_to_Borrow' /> : null}</div>\n                            </div>\n                            <div className={`info-amount${key + 1}`}>{info.amount}</div>\n                        </div>)\n                    )\n                }\n            </div>\n        </IntlProvider>\n    )\n}\n\nexport default InfoSection;","import React, { Component } from 'react';\nimport InfoSection from '../../component/infoSection/infoSection';\nimport Network from '../../constant.json';\nimport USDX from \"./../../ABIs/USDX.js\";\nimport MoneyMarket from './../../ABIs/MoneyMarket.js';\nimport { toFormatShowNumber, getPercentageFormat, toDoubleThousands, findNetwork, formatBigNumber } from '../../util.js';\nimport './accountInfo.scss';\n\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nclass AccountInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      borrowBalance: 0,\n      borrowBalanceShow: 0,\n      borrowInterestRate: 0,\n      supplyInterestRate: 0,\n      totalSupply: 0,\n      totalBorrowInMoneyMarket: 0,\n      totalBorrowInMoneyMarketUnformat: 0,\n      totalSupplyUSDxInMoneyMarket: 0,\n      totalSupplyWETHInMoneyMarket: 0,\n      availableToBorrow: 0,\n      collateralRatio: 0,\n      collateralRatioShow: 0,\n      usdxBalanceOf: 0,\n      cash: 0,\n      utilizationRate: 0,\n      usdxAssetPrice: 0,\n      WETHAssetPrice: 0,\n      supplyWETHAmount: 0,\n      originationFee: 0,\n      tatol_Supplied: 0\n    }\n    this.web3 = window.web3;\n\n    if (window.web3) {\n      window.web3.currentProvider.enable().then(\n        res => {\n          console.log(this.web3.eth.accounts[0]);\n          // this.componentDidMount_temp();\n          window.web3.version.getNetwork((e, r) => {\n            if (r) {\n              this.setState({\n                NetworkName: r\n              }, () => {\n                this.componentDidMount_temp();\n              })\n            }\n          })\n        }\n      )\n    }\n\n    if (window.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', () => {\n        this.componentDidMount_temp();\n      });\n    }\n  }\n\n\n  // **************8 totalSupply\n  getWETHAssetPrice = () => {\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    let wethAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      wethAddress = Network.Main.WETH;\n    } else if (NetworkName === 'Rinkeby') {\n      wethAddress = Network.Rinkeby.WETH;\n    }\n    MoneyMarket().assetPrices(\n      wethAddress,\n      (err, res1) => {\n        // res1 weth 价格\n        if (res1 !== undefined && res1 !== null) {\n          // console.log('1111111111111111111 weth 价格 -: ', res1);\n          let usdxAddress = '';\n          let NetworkName = findNetwork(this.state.NetworkName);\n          if (NetworkName === 'Main') {\n            usdxAddress = Network.Main.USDx;\n          } else if (NetworkName === 'Rinkeby') {\n            usdxAddress = Network.Rinkeby.USDx;\n          }\n          MoneyMarket().assetPrices(\n            usdxAddress,\n            (err, res2) => {\n              // res2 usdx 价格\n              if (res2 !== undefined && res2 !== null) {\n                // console.log('2222222222222222222 usdx 价格 -: ', res2);\n                if (this.web3.fromWei(res2.toNumber(), \"ether\") !== 0 && res1.toNumber() !== 0) {\n                  this.setState({ WETHAssetPrice: this.web3.fromWei(res1.toNumber(), \"ether\") / this.web3.fromWei(res2.toNumber(), \"ether\") }, () => {\n                    // console.log('33333333333333333 ----- WETHAssetPrice---: ', this.state.WETHAssetPrice);\n                    // 现在去拿 supply WETH Amount\n                    MoneyMarket().getSupplyBalance(\n                      this.web3.eth.accounts[0],\n                      wethAddress,\n                      (err, res3) => {\n                        // res3 是 supply WETH Amount\n                        // console.log('444444444444444444 ----- supply WETH Amount---: ', res3);\n                        if (res3 !== undefined && res3 !== null) {\n                          this.setState({\n                            supplyWETHAmount: this.web3.fromWei(res3.toNumber(), \"ether\"),\n                            totalSupply: this.state.WETHAssetPrice * this.web3.fromWei(res3.toNumber(), \"ether\")\n                          }, () => {\n                            // console.log('5555555555555555 ----- totalSupply----: ', this.state.totalSupply);\n                          });\n                        }\n                      }\n                    );\n                  });\n                }\n              }\n            });\n        }\n      });\n  }\n\n  // ************************* availableToBorrow\n  calculateAccountValuesByAddress = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || MoneyMarket() === undefined) {\n      return;\n    }\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    let wethAddress = '';\n    if (NetworkName === 'Main') {\n      wethAddress = Network.Main.WETH;\n    } else if (NetworkName === 'Rinkeby') {\n      wethAddress = Network.Rinkeby.WETH;\n    }\n    let mmAddress = '';\n    if (NetworkName === 'Main') {\n      mmAddress = Network.Main.MoneyMarket;\n    } else if (NetworkName === 'Rinkeby') {\n      mmAddress = Network.Rinkeby.MoneyMarket;\n    }\n    MoneyMarket().getBorrowBalance(this.web3.eth.accounts[0], usdxAddress, (err, res) => {\n      // res 是 sun_of_borrow 总的borrow （ 借出 ）\n      if (res !== undefined || res !== null) {\n        // console.log('sun_of_borrow:', res);\n        let res_format = formatBigNumber(res);\n        MoneyMarket().assetPrices(wethAddress, (err, res1) => {\n          if (res1 !== undefined && res1 !== null) {\n            MoneyMarket().assetPrices(usdxAddress, (err, res2) => {\n              if (res2 !== undefined && res2 !== null) {\n                this.setState({ WETHAssetPrice: this.web3.fromWei(res1.toNumber(), \"ether\") / this.web3.fromWei(res2.toNumber(), \"ether\") }, () => {\n                  // console.log(this.state.WETHAssetPrice)\n                  MoneyMarket().getSupplyBalance(this.web3.eth.accounts[0], wethAddress, (err, res3) => {\n                    if (res3 !== undefined && res3 !== null) {\n                      this.setState({\n                        supplyWETHAmount: this.web3.fromWei(res3.toNumber(), \"ether\"),\n                        totalSupply: this.state.WETHAssetPrice * this.web3.fromWei(res3.toNumber(), \"ether\")\n                      }, () => {\n                        MoneyMarket().collateralRatio((err, res_ratio) => {\n                          if (res_ratio !== undefined && res_ratio !== null) {\n                            this.setState({ collateralRatioShow: getPercentageFormat(this.web3.fromWei(res_ratio.toNumber(), \"ether\")) })\n                            USDX().balanceOf(mmAddress, (err, res_cash) => {\n                              if (res_cash) {\n                                MoneyMarket().originationFee((err, res_originFee) => {\n                                  let sumofSupplies = this.web3.fromWei(res3.toNumber(), \"ether\") * this.state.WETHAssetPrice;\n                                  let sumofBorrow = res_format;\n                                  let availableToBorrow = (sumofSupplies / this.web3.fromWei(res_ratio.toNumber(), \"ether\")) - sumofBorrow;\n                                  let availableBorrowAmount = Math.min(availableToBorrow, toFormatShowNumber(this.web3.fromWei(res_cash.toNumber(), \"ether\")));\n                                  if (Number(availableBorrowAmount) < 0) {\n                                    availableBorrowAmount = 0;\n                                  }\n                                  // 修改 available_To_Borrow 不同步问题\n                                  if (Number(availableBorrowAmount) === Number(toFormatShowNumber(this.web3.fromWei(res_cash.toNumber(), \"ether\")))) {\n                                    this.setState({ availableToBorrow: toFormatShowNumber(this.web3.fromWei(res_cash.toNumber(), \"ether\")) }, () => {\n                                      // console.log('--- available_to_borrow --- : ', this.state.availableToBorrow);\n                                    });\n                                  } else {\n                                    this.setState({ availableToBorrow: availableBorrowAmount / (1 + Number(formatBigNumber(res_originFee))) }, () => {\n                                      // console.log('--- available_to_borrow --- : ', this.state.availableToBorrow);\n                                    })\n                                  }\n                                });\n                              }\n                            })\n                          }\n                        });\n                      });\n                    }\n                  }\n                  );\n                });\n              }\n            });\n          }\n        });\n      }\n    }\n    )\n  }\n\n  // ********************** borrowBalanceShow\n  getBorrowBalance = () => {\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    if (typeof web3 !== 'undefined' && this.web3.eth.accounts[0] !== undefined) {\n      MoneyMarket().getBorrowBalance(this.web3.eth.accounts[0], usdxAddress, (err, res) => {\n        // let borrowBalance = 0;\n        if (res !== undefined && res !== null) {\n          // console.log(res)\n          // borrowBalance = res.toNumber();\n          this.setState({\n            borrowBalance: this.web3.fromWei(res.toNumber(), \"ether\"),\n            borrowBalanceShow: this.web3.fromWei(res.toNumber(), \"ether\")\n          }, () => {\n            // console.log(this.state.borrowBalance);\n          });\n        }\n      });\n    }\n  };\n\n  // ******************** borrowInterestRate\n  getBorrowInterestRate = () => {\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    MoneyMarket().markets.call(usdxAddress,\n      (err, res) => {\n        if (res !== null && res !== undefined) {\n          this.setState({ borrowInterestRate: getPercentageFormat(this.web3.fromWei(res[7].toNumber(), \"ether\") * 86400 * 365 / 15) })\n        }\n      }\n    );\n  }\n\n\n  componentDidMount_temp = () => {\n\n    setTimeout(() => {\n      this.getWETHAssetPrice();\n      this.getBorrowBalance();\n      this.getBorrowInterestRate();\n      this.calculateAccountValuesByAddress();\n    }, 2000);\n    this.getAddressIntervalBorrow = setInterval(() => {\n      if (true) {\n        this.getWETHAssetPrice();\n        this.getBorrowBalance();\n        this.getBorrowInterestRate();\n        this.calculateAccountValuesByAddress();\n      }\n    }, 1000 * 15);\n  }\n\n\n  render = () => {\n    const accountInfo = [\n      {\n        title: 'Supplied Balance',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : '$' + toDoubleThousands(this.state.totalSupply),\n        page: 'borrow'\n      },\n      {\n        title: 'Borrowed Balance',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : '$' + toDoubleThousands(this.state.borrowBalanceShow),\n        page: 'borrow'\n      },\n      {\n        title: 'Available to Borrow',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : '$' + toDoubleThousands(this.state.availableToBorrow),\n        page: 'borrow'\n      },\n      {\n        title: 'Borrow APR',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : toDoubleThousands(this.state.borrowInterestRate) + '%',\n        page: 'borrow'\n      },\n      {\n        title: 'Collateralization ratio',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : toDoubleThousands(this.state.collateralRatioShow) + '%',\n        page: 'borrow'\n      }\n    ];\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <div className={'account-info-board'}>\n          <div className={'info-board-title'}>\n            <FormattedMessage id='Account_Portfolio' />\n          </div>\n          <div className={'info-board-content'}>\n            <InfoSection accountInfo={accountInfo} currentPage={'borrow'} />\n          </div>\n        </div>\n      </IntlProvider>\n    )\n  }\n}\n\nexport default AccountInfo;","import React, { Component } from 'react';\nimport Borrow_left from '../../container/supplyInput/Borrow_left';\nimport Borrow_right from '../../container/borrowInput/Borrow_right';\nimport USDX from '../../ABIs/USDX';\nimport WETH from '../../ABIs/WETH';\nimport MoneyMarket from \"./../../ABIs/MoneyMarket.js\";\nimport Header from '../../component/header/header';\nimport RecordBoard from '../../container/recordBoard/recordBoard';\nimport { withMarketInfo } from '../../HOC/withMarketInfo';\nimport { findNetwork, getLoginStatusKey } from '../../util.js';\nimport AccountInfo from '../../container/accountInfo/accountInfo_borrow';\nimport { Link } from \"react-router-dom\";\nimport Network from '../../constant.json';\nimport MediaQuery from 'react-responsive';\nimport './borrow.scss';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nconst WithMarketInfoEnhanced = withMarketInfo(Header);\n\nclass Borrow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // dfAssetPrice: null,\n      calcWETHPrice: 0,\n      WETHAssetPrice: 0,\n      hasLendUSDx: false,\n      wethRecentTransactions: [],\n      loadingPhase: true,\n      switchAccountLoading: false,\n      borrowgroup: false,\n      hasLendUSDxAmount: 0,\n      isLogIn: false,\n      currentUser: window.web3 !== undefined ? window.web3.eth.accounts[0] : null,\n      isApproved_WETH: 0,\n      isApproved_USDx: 0,\n      not_approve_atfirst_WETH: 0,\n      not_approve_atfirst_USDX: 0\n    };\n    this.web3 = window.web3;\n\n    window.web3.currentProvider.enable().then(\n      res => {\n        this.setState({ isLogIn: true }, () => {\n          window.web3.version.getNetwork((e, r) => {\n            if (r) {\n              this.setState({\n                NetworkName: r\n              }, () => {\n                this.componentDidMount_temp();\n              })\n            }\n          })\n        });\n      }\n    )\n\n\n\n    if (window.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', () => {\n        this.componentDidMount_temp();\n      });\n    }\n\n  }\n\n\n  //weth价格修改\n  getCalcWETHPrice = () => {\n    if (typeof web3 === 'undefined' || MoneyMarket() === undefined) {\n      return;\n    }\n    let wethAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      wethAddress = Network.Main.WETH;\n    } else if (NetworkName === 'Rinkeby') {\n      wethAddress = Network.Rinkeby.WETH;\n    }\n    MoneyMarket().assetPrices(wethAddress, (err, res) => {\n      if (res !== undefined && res !== null) {\n        if (this.state.calcWETHPrice !== this.web3.fromWei(res.toNumber(), \"ether\")) {\n          this.setState({\n            calcWETHPrice: this.web3.fromWei(res.toNumber(), \"ether\")\n          });\n        }\n      }\n    });\n  }\n\n  getWETHAssetPrice = () => {\n    if (typeof web3 === 'undefined' || MoneyMarket() === undefined) {\n      return;\n    }\n    //weth价格修改\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    MoneyMarket().assetPrices(usdxAddress, (err, res) => {\n      if (res !== undefined && res !== null && this.state.calcWETHPrice !== 0) {\n        if (this.state.WETHAssetPrice !== this.state.calcWETHPrice / this.web3.fromWei(res.toNumber(), \"ether\")) {\n          this.setState({\n            WETHAssetPrice: this.state.calcWETHPrice / this.web3.fromWei(res.toNumber(), \"ether\")\n          });\n        }\n      }\n    });\n  }\n\n  getCurrentSupplyAmount = () => {\n    if (typeof web3 === 'undefined' || window.web3.eth.accounts[0] === undefined || MoneyMarket() === undefined) {\n      return;\n    }\n    let myAddress = window.web3.eth.accounts[0];\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    MoneyMarket().getSupplyBalance(myAddress, usdxAddress, (err, res) => {\n      if (res === undefined || res === null || this.state.hasLendUSDxAmount === window.web3.fromWei(res.toNumber(), \"ether\")) {\n        return;\n      }\n      this.setState({ hasLendUSDxAmount: window.web3.fromWei(res.toNumber(), \"ether\") });\n      if (window.web3.fromWei(res.toNumber(), \"ether\") > 0) {\n        this.setState({ hasLendUSDx: true });\n      } else if (this.state.hasLendUSDx !== false) {\n        this.setState({ hasLendUSDx: false });\n      }\n    }\n    );\n  }\n\n  setLoginStatus = () => {\n    const { isSMView } = this.props\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined) {\n      return;\n    }\n    var storage = null;\n    var results = null;\n    var key = getLoginStatusKey(this.web3.eth.accounts[0]);\n    if (window.localStorage) {\n      storage = window.localStorage;\n      results = JSON.parse(`${storage.getItem(key)}`);\n    }\n    if (this.state.isLogIn !== true && isSMView) {\n      this.setState({ isLogIn: true });\n    }\n    if (results === null) {\n      return;\n    }\n    results = results.map(item => {\n      if (item.account === this.web3.eth.accounts[0] && this.state.isLogIn !== item.isLogin && !isSMView) {\n        this.setState({ isLogIn: item.isLogin });\n      }\n      return item.id;\n    })\n  }\n\n  componentWillMount() { }\n\n  componentDidMount_temp = () => {\n    setTimeout(() => {\n      this.getCalcWETHPrice();\n      // 检查是否 approve\n      this.get_Allowance();\n      this.getWETHAssetPrice();\n      this.getCurrentSupplyAmount();\n      this.setState({ loadingPhase: false });\n    }, 2000);\n\n    this.accountInterval = setInterval(() => {\n      if (typeof web3 !== 'undefined' && window.web3.eth.accounts[0] !== undefined) {\n        // this.state.isApproved_WETH\n        this.get_Allowance();\n        // console.log('borrow.js---this.state.isApproved_WETH: ', this.state.isApproved_WETH)\n        this.getCalcWETHPrice();\n        this.getWETHAssetPrice();\n        // Swtich account\n        // if (window.web3.eth.accounts[0] !== this.state.currentUser) {\n        //   this.setState({ switchAccountLoading: true, currentUser: window.web3.eth.accounts[0] });\n        //   setTimeout(() => this.setState({ switchAccountLoading: false }), 1200);\n        // }\n        this.getCurrentSupplyAmount();\n      }\n\n      this.setLoginStatus();\n    }, 1000 * 15);\n\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.accountInterval);\n    // clearInterval(this.check_Login_State);\n  }\n\n\n\n  // 检测是否 approved USDx && WETH\n  get_Allowance = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined) {\n      // console.log('will get Allowance ... kazai zhe li le')\n      return;\n    }\n    let mmAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    mmAddress = Network[NetworkName].MoneyMarket;\n    WETH().allowance(this.web3.eth.accounts[0], mmAddress, (err, res) => {\n      if (res !== undefined) {\n        if (Number(res) > 0) {\n          // alert('isApproved_WETH >>>>>>>>>>>>>0')\n          this.setState({ isApproved_WETH: 1, not_approve_atfirst_WETH: 0 });\n        } else if (Number(res) === 0) {\n          // alert('not_approve_atfirst_WETH ============0')\n          this.setState({ not_approve_atfirst_WETH: 1, isApproved_WETH: 0 });\n        }\n      }\n    });\n    USDX().allowance(this.web3.eth.accounts[0], mmAddress, (err, res) => {\n      if (res !== undefined) {\n        if (Number(res) > 0) {\n          this.setState({ isApproved_USDx: 1, not_approve_atfirst_USDX: 0 });\n        } else if (Number(res) === 0) {\n          this.setState({ not_approve_atfirst_USDX: 1, isApproved_USDx: 0 });\n        }\n      }\n    });\n  }\n\n\n\n  render() {\n    const WETHInstance = WETH();\n    const usdxInstance = USDX();\n    let currentAccount = null;\n\n    if (typeof web3 !== 'undefined') {\n      currentAccount = window.web3.eth.accounts[0];\n      var NetworkName = findNetwork(this.state.NetworkName);\n    }\n    // setTimeout(() => this.setState({ switchAccountLoading: false }), 1200);\n    const wethProps = {\n      // ethCoin: false,\n      wethCoin: true,\n      // dfCoin : false,\n      usdxCoin: false,\n      coin: WETHInstance,\n      account: currentAccount,\n      // moneyMarket: Network.Rinkeby.MoneyMarket,\n      supplyType: 'WETH',\n      withdrawType: 'WETH',\n      approveButtonInfo: 'ENABLE WETH',\n      supplyButtonInfo: 'SUPPLY',\n      withdrawButtonInfo: 'WITHDRAW',\n      unwrapButtonInfo: 'UNWRAP',\n      wrapButtonInfo: 'WRAP',\n      balanceType: 'WETH',\n      balanceAmount: \"\",\n      // supplyAssetPrice: this.state.WETHAssetPrice,\n      tabLeftName: 'SUPPLY',\n      tabRightName: 'WITHDRAW',\n      page: 'borrow',\n      login: this.state.isLogIn\n    }\n\n    const borrowProps = {\n      coin: usdxInstance,\n      account: currentAccount,\n      // moneyMarket: Network.Rinkeby.MoneyMarket,\n      // borrowType:  Network.Rinkeby.USDx,\n      // repayType: Network.Rinkeby.USDx,\n      approveButtonInfo: 'ENABLE USDx',\n      borrowButtonInfo: 'BORROW',\n      repayButtonInfo: 'REPAY',\n      balanceType: 'USDx',\n      balanceAmount: '',\n      hasLendUSDx: this.state.hasLendUSDx,\n      page: 'borrow',\n      login: this.state.isLogIn\n    }\n\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <MediaQuery maxWidth={768}>\n          {(match) =>\n            <div className={'borrow-page ' + (match ? 'CM XS ' : 'CM LG ') + (NetworkName === 'Main' ? 'without-banner' : 'with-banner')}>\n\n              <WithMarketInfoEnhanced networkName={findNetwork(this.state.NetworkName)} account={window.web3.eth.accounts[0]} login={window.web3.eth.accounts[0]} />\n\n              <div className='redirect-button'>\n                <div className='go-back-button'>\n                  <Link to={'/'}>\n                    <img src={'images/icon_home@2x.png'} alt=\"HOME\" />\n                    <spam>\n                      <FormattedMessage id='Home' />\n                    </spam>\n                  </Link>\n                </div>\n                <div className='go-to-lend'>\n                  <Link to={'/supply'} >\n                    <span>\n                      <FormattedMessage id='Supply' />\n                    </span>\n                    <img src={'images/icon_lend@2x.png'} alt=\"SUPPLY\" />\n                  </Link>\n                </div>\n              </div>\n\n              <AccountInfo networkName={NetworkName} currentPage={'borrow'} account={currentAccount} login={window.web3.eth.accounts[0] ? true : false} />\n\n              {match && <label className='input-unit-switch'>\n                <input type='checkbox' checked={this.state.borrowgroup} onChange={() => this.setState({ borrowgroup: !this.state.borrowgroup })} />\n                <span className=\"slider round\"></span>\n                <span className=\"supply\">\n                  <FormattedMessage id='Supply' />\n                </span>\n                <span className=\"borrow\">\n                  <FormattedMessage id='Borrow' />\n                </span>\n              </label>\n              }\n\n              <div className='borrow-page-content-wrapper'>\n                {(!this.state.borrowgroup || !match) && <div className='supply-group'>\n                  <div className='supply-title'>\n                    <span className='title-font'>\n                      <FormattedMessage id='SUPPLY' />\n                    </span>\n                  </div>\n                  <div className='supply-content' style={{ display: (this.state.isApproved_WETH === 1) || (this.state.not_approve_atfirst_WETH === 1) ? 'block' : 'none' }}>\n                    <Borrow_left {...wethProps} father_approve_WETH={this.state.isApproved_WETH} />\n                    <RecordBoard coinType={'WETH'} account={currentAccount} page={'borrow'} />\n                  </div>\n                </div>\n                }\n\n                {(this.state.borrowgroup || !match) && <div className='borrow-group'>\n                  <div className='borrow-title-borrow'>\n                    <span className='title-font'>\n                      <FormattedMessage id='BORROW' />\n                    </span>\n                  </div>\n                  <div className='borrow-content' style={{ display: (this.state.isApproved_USDx == 1) || (this.state.not_approve_atfirst_USDX == 1) ? 'block' : 'none' }}>\n                    <Borrow_right networkName={NetworkName} {...borrowProps} father_approve_USDx={this.state.isApproved_USDx} />\n                    {this.state.isLogIn\n                      ?\n                      <RecordBoard coinType={'USDx'} account={currentAccount} page={'borrow'} />\n                      :\n                      null\n                    }\n                  </div>\n                </div>\n                }\n              </div>\n            </div>\n          }\n        </MediaQuery>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default Borrow;","import React, { Component } from 'react';\nimport { Tabs, Button, InputNumber, Input } from 'antd';\nimport Approve from '../../component/approve/approve';\n// import InputUnit from '../../component/inputUnit/inputUnit';\n// import WETH from '../../ABIs/WETH';\nimport USDX from \"../../ABIs/USDX.js\";\nimport MoneyMarket from './../../ABIs/MoneyMarket.js';\nimport { saveTransaction, getTxnHashHref, toDoubleThousands, validNumber, toFormatShowNumber, getTransactionHistoryKey, findNetwork, diffMin, formatBigNumber, toNonExponential } from '../../util.js';\nimport Asset from '../../constant.json';\nimport Network from '../../constant.json';\nimport './supplyInput.scss';\n// import CoinAvailable from './../coinAvailable/coinAvailable_supply';\n// import CoinBalance from './../coinBalance/coinBalance_supply';\nimport ErrorCode from '../../error_code.json';\n\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nconst { TabPane } = Tabs;\n\nclass SupplyContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: '',\n      pendingApproval: false,\n      isApproved: false,\n      isSupplyEnable: true,\n      isWithdrawEnable: true,\n      isWrapEnable: true,\n      isunwrapEnable: true,\n      supplyAmount: '',\n      withdrawAmount: '',\n      withdrawMax: false,\n      maxWithdrawAmount: 0,\n      // maxUnwrapAmount: 0,\n      wrapAmount: '',\n      unwrapAmount: '',\n      coinAllowance: 0,\n      accountBalance: 0,\n      // ethAccountBalance: 0,\n      // wethAccountBalance: 0,\n      supplyAccountBalance: 0,\n      supplyWETHBalance: 0,\n      buttonText: '',\n      supplyButtonText: '',\n      withdrawButtonText: '',\n      collateralRatio: 0,\n      assetBalance: 0,\n      gasPrice: 0,\n      gasLimit: 0,\n      supplyAssetPrice: 0,\n      calcWETHPrice: 0,\n      supplyInputDisabled: false,\n      withdrawInputDisabled: false,\n      wrapInputDisabled: false,\n      unwrapInputDisabled: false,\n      maxClassName: 'max-amount-button',\n      withdrawMaxClassName: 'max-amount-button',\n      unwrapMaxClassName: 'max-amount-button',\n      //check\n      supplyUSDxWaitUpdateForSuccessMap: new Map(),\n      supplyUSDxWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      supplyUSDxWaitTimeOutMap: new Map(),\n      withdrawUSDxWaitUpdateForSuccessMap: new Map(),\n      withdrawUSDxWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      withdrawUSDxWaitTimeOutMap: new Map(),\n      supplyWrapWaitUpdateForSuccessMap: new Map(),\n      supplyWrapWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      supplyWrapWaitTimeOutMap: new Map(),\n      supplyUnwrapWaitUpdateForSuccessMap: new Map(),\n      supplyUnwrapWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      supplyUnwrapWaitTimeOutMap: new Map(),\n      supplyWETHWaitUpdateForSuccessMap: new Map(),\n      supplyWETHWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      supplyWETHWaitTimeOutMap: new Map(),\n      withdrawWETHWaitUpdateForSuccessMap: new Map(),\n      withdrawWETHWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      withdrawWETHWaitTimeOutMap: new Map(),\n      enableUSDxWaitUpdateForSuccessMap: new Map(),\n      enableUSDxWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      enableUSDxWaitTimeOutMap: new Map(),\n      enableWETHWaitUpdateForSuccessMap: new Map(),\n      enableWETHWaitUpdateForFailedMap: new Map(),\n      //超时则取消控件限制\n      enableWETHWaitTimeOutMap: new Map(),\n      //超时则取消控件限制\n      timeOutTimes: 5,\n      maxWithdrawUSDXAmount: 0,\n      i_clicked_approve_btn: 0\n    }\n    this.web3 = window.web3;\n\n    // if (window.ethereum !== undefined) {\n    if (window.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', (accounts) => {\n        setTimeout(this.refreshData(), 500);\n        this.getAllowance();\n        // this.getMaxWithdrawAmount();\n        // this.getAccountBalance();\n        // this.getMyAddressWETHBalance();\n        this.setState({ supplyAmount: '', withdrawAmount: '', wrapAmount: '', unwrapAmount: '' });\n        // reset button&inputText status\n        this.setState({ isWrapEnable: true, wrapInputDisabled: false });\n        this.setState({ isunwrapEnable: true, unwrapInputDisabled: false });\n        this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n        this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n        this.setState({ pendingApproval: false });\n      });\n    }\n\n    // this.componentDidMount_temp();\n    window.web3.version.getNetwork((e, r) => {\n      if (r) {\n        this.setState({\n          NetworkName: r\n        }, () => {\n          this.componentDidMount_temp();\n        })\n      }\n    })\n\n    if (window.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', () => {\n        this.componentDidMount_temp();\n      });\n    }\n\n  };\n\n\n  // ******************* account_Balance\n  // getAccountBalance = () => {\n  //   if (window.web3 !== undefined && this.web3.eth.accounts[0] !== undefined && this.props.coin !== undefined) {\n  //     this.props.coin.balanceOf(this.web3.eth.accounts[0], (err, res) => {\n  //       console.log(res)\n  //       let balance = 0;\n  //       if (res !== undefined && res !== null) {\n  //         balance = formatBigNumber(res);\n  //       }\n\n  //       let AccountBalance = toFormatShowNumber(balance)\n  //       let MaxSupplyAmount = balance;\n\n  //       if (this.state.accountBalance !== AccountBalance) {\n  //         this.setState({ accountBalance: AccountBalance, isSupplyEnable: true, supplyAmount: '' });\n  //       }\n  //         this.setState({ maxSupplyAmount: balance }, ()=>{     });\n\n  //     });\n  //   }\n  // }\n\n  getCurrentSupplyAssetAmount = () => {\n    if (window.web3 !== undefined && this.web3.eth.accounts[0] !== undefined && MoneyMarket() !== undefined) {\n      let withdrawAddress = '';\n      let NetworkName = findNetwork(this.state.NetworkName);\n      if (NetworkName === 'Main') {\n        if (this.props.withdrawType === 'WETH') {\n          withdrawAddress = Network.Main.WETH;\n        }\n        if (this.props.withdrawType === 'USDX') {\n          withdrawAddress = Network.Main.USDx;\n        }\n      } else if (NetworkName === 'Rinkeby') {\n        if (this.props.withdrawType === 'WETH') {\n          withdrawAddress = Network.Rinkeby.WETH;\n        }\n        if (this.props.withdrawType === 'USDX') {\n          withdrawAddress = Network.Rinkeby.USDx;\n        }\n      }\n\n      MoneyMarket().getSupplyBalance(this.web3.eth.accounts[0],\n        withdrawAddress,\n        (err, res) => {\n          if (res !== undefined && res !== null && this.state.supplyAccountBalance !== this.web3.fromWei(res.toNumber(), \"ether\")) {\n            this.setState({ supplyAccountBalance: this.web3.fromWei(res.toNumber(), \"ether\") });\n          }\n        }\n      );\n    }\n  }\n\n  getAllowance = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || this.props.coin === undefined) {\n      console.log('---------ka zai zhe li le');\n      return;\n    }\n    let mmAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    mmAddress = Network[NetworkName].MoneyMarket;\n    this.props.coin.allowance(this.web3.eth.accounts[0], mmAddress, (err, res) => {\n      let allowanceVal = -1;\n      if (res) {\n        allowanceVal = res.toNumber();\n        if (allowanceVal > 0) {\n          this.setState({ coinAllowance: allowanceVal, isApproved: true });\n        } else {\n          this.setState({ isApproved: false, pendingApproval: false, buttonText: this.props.approveButtonInfo });\n        }\n      }\n    });\n  }\n\n\n  getAssetBalance = () => {\n    let mmAddress = '';\n    let NetworkName = window.web3 !== undefined ? findNetwork(this.state.NetworkName) : null;\n    if (NetworkName === 'Main') {\n      mmAddress = Network.Main.MoneyMarket;\n    } else if (NetworkName === 'Rinkeby') {\n      mmAddress = Network.Rinkeby.MoneyMarket;\n    }\n    if (typeof web3 !== 'undefined' && this.props.usdxCoin === true && USDX() !== undefined) {\n      USDX().balanceOf(mmAddress, (err, res) => {\n        let balance = 0;\n        if (res !== undefined && res !== null) {\n          balance = res.toNumber();\n        }\n        if (this.state.assetBalance !== this.web3.fromWei(balance, \"ether\")) {\n          this.setState({ assetBalance: this.web3.fromWei(balance, \"ether\") });\n        }\n      });\n    }\n  }\n\n  getCollateralRatio = () => {\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    MoneyMarket().collateralRatio((err, res) => {\n      if (res !== undefined && res !== null) {\n        this.setState({ collateralRatio: this.web3.fromWei(res.toNumber(), \"ether\") })\n      }\n    });\n  }\n\n  getUSDxAssetPrice = () => {\n    this.getCalcWETHPrice();\n    this.getWETHAssetPrice();\n  }\n\n  // ***********************\n  //weth价格修改\n  getCalcWETHPrice = () => {\n    if (typeof web3 === 'undefined' || MoneyMarket() === undefined) {\n      return;\n    }\n    let wethAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      wethAddress = Network.Main.WETH;\n    } else if (NetworkName === 'Rinkeby') {\n      wethAddress = Network.Rinkeby.WETH;\n    }\n    MoneyMarket().assetPrices(wethAddress, (err, res) => {\n      if (res !== undefined && res !== null) {\n        this.setState({\n          calcWETHPrice: this.web3.fromWei(res.toNumber(), \"ether\")\n        });\n      }\n    });\n  }\n\n  // ***********************\n  getWETHAssetPrice = () => {\n    //weth价格修改\n    if (typeof web3 === 'undefined' || MoneyMarket() === undefined) {\n      return;\n    }\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    MoneyMarket().assetPrices(usdxAddress, (err, res) => {\n      if (res !== undefined && res !== null && this.state.calcWETHPrice !== 0) {\n        this.setState({\n          supplyAssetPrice: this.state.calcWETHPrice / this.web3.fromWei(res.toNumber(), \"ether\")\n        });\n      }\n    });\n  }\n\n\n\n\n\n  // handle_Approve_USDx\n  handleApprove = () => {\n    this.setState({\n      isApproved: false,\n      buttonText: 'ENABLEING USDx...',\n      pendingApproval: true,\n      i_clicked_approve_btn: 1\n    });\n    let mmAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      mmAddress = Network.Main.MoneyMarket;\n    } else if (NetworkName === 'Rinkeby') {\n      mmAddress = Network.Rinkeby.MoneyMarket;\n    }\n    this.props.coin.approve.estimateGas(mmAddress, -1, { from: this.web3.eth.accounts[0] }, (err, gasLimit) => {\n      this.web3.eth.getGasPrice((err, gasPrice) => {\n        console.log('handle_Approve_USDx_gasLimit:' + gasLimit);\n        console.log('handle_Approve_USDx_gasPrice:' + gasPrice);\n        this.props.coin.approve.sendTransaction(\n          mmAddress,\n          -1,\n          {\n            from: this.web3.eth.accounts[0],\n            gas: gasLimit,\n            gasPrice: gasPrice\n          },\n          (err, res) => {\n            if (res) {\n              let txId = res;\n              let txnHashHref = getTxnHashHref((this.state.NetworkName)) + res;\n              this.setState({\n                getHash: true,\n                hashNumber: res,\n                pendingApproval: true,\n                i_clicked_approve_btn: 0\n              });\n              saveTransaction(\n                'loading-supply-usdx-approve',\n                this.web3.eth.accounts[0],\n                Asset['Asset'].USDx,\n                this.props.page,\n                this.state.NetworkName,\n                'Enable',\n                null,\n                'USDx',\n                txnHashHref,\n                txId,\n                0,\n                null,\n                false,\n                null\n              );\n            } else {\n              this.setState({ isApproved: false, pendingApproval: false, buttonText: this.props.approveButtonInfo, i_clicked_approve_btn: 0 });\n            }\n          }\n        )\n      }\n      )\n    }\n    );\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  usdxEventMonitor = () => {\n    if (USDX() === undefined) {\n      return;\n    }\n    let that = this;\n    var approvalUSDXEvent = USDX().Approval();\n    approvalUSDXEvent.watch((error, result) => {\n      console.log('supply_usdx_Event_Monitor: ' + JSON.stringify(result));\n      if (error) {\n        console.log('supply_usdx_Event_Monitor error: ' + JSON.stringify(error));\n        return;\n      }\n      var storage = null;\n      var results = null;\n      var key = null;\n      if (window.localStorage) {\n        storage = window.localStorage;\n        key = getTransactionHistoryKey(that.props.account, Asset['Asset'].USDx, that.props.page, that.state.NetworkName);\n        results = JSON.parse(`${storage.getItem(key)}`);\n      }\n      if (results === null) {\n        return;\n      }\n      let resultObj = JSON.parse(JSON.stringify(result));\n      var txId = resultObj.transactionHash;\n      this.getAllowance();\n      this.setState({ pendingApproval: false, isApproved: true });\n      storage.removeItem(key);\n      results = results.map(item => {\n        if (item.status === 0 && item.transactionType === 'Enable' && item.txId !== txId) {\n          let txnHashHref = getTxnHashHref(that.state.NetworkName) + txId;\n          return {\n            ...item,\n            icon: 'done',\n            status: 1,\n            txId: txId,\n            txnHashHref: txnHashHref\n          }\n        } else if (item.txId === txId) {\n          return {\n            ...item,\n            icon: 'done',\n            status: 1\n          }\n        }\n        return {\n          ...item\n        }\n      })\n      storage.setItem(key, JSON.stringify(results));\n    });\n  }\n\n\n  refreshData = () => {\n    // this.getAccountETHBalance();\n    this.getCurrentSupplyAssetAmount();\n    // this.getAccountBalance();\n    this.getAssetBalance();\n    this.getUSDxAssetPrice();\n    // this.getMaxWithdrawAmount();\n    // this.getmaxWithdrawUSDXAmount();\n    this.get_My_USDx_Supplied_max_Withdraw_USDx_Amount();\n  }\n\n  //check\n  checkWaitingUpdateTransactionRecords = () => {\n    var storage = null;\n    var results = null;\n    var key = null;\n    if (window.localStorage) {\n      if (typeof web3 === 'undefined') {\n        return;\n      }\n      storage = window.localStorage;\n      if (this.props.wethCoin === true) {\n        key = getTransactionHistoryKey(this.web3.eth.accounts[0], Asset['Asset'].WETH, this.props.page, this.state.NetworkName);\n      } else if (this.props.usdxCoin === true) {\n        key = getTransactionHistoryKey(this.web3.eth.accounts[0], Asset['Asset'].USDx, this.props.page, this.state.NetworkName);\n      }\n      results = JSON.parse(`${storage.getItem(key)}`);\n    }\n    if (results === null) {\n      return;\n    }\n    storage.removeItem(key);\n    results = results.map(item => {\n      // if (item.icon === 'loading-supply-wrap') {\n      //   if (this.state.supplyWrapWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n      //     this.setState({ isWrapEnable: true, wrapInputDisabled: false });\n      //     //imtoken用\n      //     if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n      //       // Refresh data\n      //       this.refreshData();\n      //       // this.getAccountETHBalance();\n      //       this.setState({ wrapAmount: '', isWrapEnable: true, wrapInputDisabled: false, });\n      //     }\n      //     return {\n      //       ...item,\n      //       icon: 'done',\n      //       status: 1\n      //     }\n      //   }\n      //   if (this.state.supplyWrapWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n      //     this.setState({ isWrapEnable: true, wrapInputDisabled: false });\n      //     //imtoken用\n      //     if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n      //       // Refresh data\n      //       this.refreshData();\n      //       // this.getAccountETHBalance();\n      //       this.setState({ wrapAmount: '', isWrapEnable: true, wrapInputDisabled: false, });\n      //     }\n      //     return {\n      //       ...item,\n      //       icon: 'failure',\n      //       status: 1,\n      //       failed: true,\n      //       failedInfo: 'WRAP FAILURE'\n      //     }\n      //   }\n      //   //超时则取消控件限制\n      //   if (this.state.supplyWrapWaitTimeOutMap.get(item.txId) !== undefined) {\n      //     return {\n      //       ...item,\n      //       timeOutFlag: 1\n      //     }\n      //   }\n      // }\n\n      // if (item.icon === 'loading-supply-unwrap') {\n      //   if (this.state.supplyUnwrapWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n      //     this.setState({ isunwrapEnable: true, unwrapInputDisabled: false });\n      //     //imtoken用\n      //     if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n      //       // Refresh data\n      //       this.refreshData();\n      //       this.setState({ unwrapAmount: '', isunwrapEnable: true, supplyAmount: '', unwrapInputDisabled: false, maxClassName: 'max-amount-button' });\n      //     }\n      //     return {\n      //       ...item,\n      //       icon: 'done',\n      //       status: 1\n      //     }\n      //   }\n      //   if (this.state.supplyUnwrapWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n      //     this.setState({ isunwrapEnable: true, unwrapInputDisabled: false });\n      //     return {\n      //       ...item,\n      //       icon: 'failure',\n      //       status: 1,\n      //       failed: true,\n      //       failedInfo: 'UNWRAP FAILURE'\n      //     }\n      //   }\n      //   //超时则取消控件限制\n      //   if (this.state.supplyUnwrapWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n      //     return {\n      //       ...item,\n      //       timeOutFlag: 1\n      //     }\n      //   }\n      // }\n\n      // if (item.icon === 'loading-supply-weth') {\n      //   if (this.state.supplyWETHWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n      //     this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n      //     //imtoken用\n      //     if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n      //       // Refresh Data\n      //       this.refreshData();\n      //       this.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n      //       this.setState({ isWithdrawEnable: true });\n      //       this.setState({ withdrawAmount: null, withdrawMax: false, withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n      //       if (this.props.wethCoin === true) {\n      //         this.setState({ unwrapAmount: '' });\n      //       }\n      //     }\n      //     return {\n      //       ...item,\n      //       icon: 'supply',\n      //       status: 1\n      //     }\n      //   }\n      //   if (this.state.supplyWETHWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n      //     this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n      //     //imtoken用\n      //     if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n      //       this.refreshData();\n      //       this.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n      //       if (this.props.wethCoin === true) {\n      //         this.setState({ unwrapAmount: '' });\n      //       }\n      //       this.setState({ isWithdrawEnable: true, supplyAmount: '', withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n      //       this.setState({ withdrawAmount: null, withdrawMax: false });\n      //     }\n      //     return {\n      //       ...item,\n      //       icon: 'failure',\n      //       status: 1,\n      //       failed: true,\n      //       failedInfo: 'SUPPLY WETH FAILURE'\n      //     }\n      //   }\n      //   //超时则取消控件限制\n      //   if (this.state.supplyWETHWaitTimeOutMap.get(item.txId) !== undefined) {\n      //     return {\n      //       ...item,\n      //       timeOutFlag: 1\n      //     }\n      //   }\n      // }\n\n      // if (item.icon === 'loading-supply-withdraw-weth') {\n      //   if (this.state.withdrawWETHWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n      //     this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n      //     //imtoken用\n      //     if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n      //       // Refresh data\n      //       this.refreshData();\n      //       this.setState({ isWithdrawEnable: true, supplyAmount: '' });\n      //       this.setState({ withdrawAmount: null, withdrawMax: false, withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n      //     }\n      //     return {\n      //       ...item,\n      //       icon: 'withdraw',\n      //       status: 1\n      //     }\n      //   }\n      //   if (this.state.withdrawWETHWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n      //     this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n      //     //imtoken用\n      //     if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n      //       this.refreshData();\n      //       this.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n      //       if (this.props.wethCoin === true) {\n      //         this.setState({ unwrapAmount: '' });\n      //       }\n      //       this.setState({ isWithdrawEnable: true, supplyAmount: '', withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n      //       this.setState({ withdrawAmount: null, withdrawMax: false });\n      //     }\n      //     return {\n      //       ...item,\n      //       icon: 'failure',\n      //       status: 1,\n      //       failed: true,\n      //       failedInfo: 'WITHDRAW WETH FAILURE'\n      //     }\n      //   }\n      //   //超时则取消控件限制\n      //   if (this.state.withdrawWETHWaitTimeOutMap.get(item.txId) !== undefined) {\n      //     return {\n      //       ...item,\n      //       timeOutFlag: 1\n      //     }\n      //   }\n      // }\n\n      if (item.icon === 'loading-supply-usdx') {\n        if (this.state.supplyUSDxWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n          this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            // Refresh Data\n            this.refreshData();\n            this.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n            this.setState({ isWithdrawEnable: true });\n            this.setState({ withdrawAmount: null, withdrawMax: false, withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n            if (this.props.wethCoin === true) {\n              this.setState({ unwrapAmount: '' });\n            }\n          }\n          return {\n            ...item,\n            icon: 'supply',\n            status: 1\n          }\n        }\n\n        if (this.state.supplyUSDxWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n          this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.refreshData();\n            this.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n            if (this.props.wethCoin === true) {\n              this.setState({ unwrapAmount: '' });\n            }\n            this.setState({ isWithdrawEnable: true, supplyAmount: '', withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n            this.setState({ withdrawAmount: null, withdrawMax: false });\n          }\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: 'TRANSACTION FAILURE'\n          }\n        }\n\n        //超时则取消控件限制\n        if (this.state.supplyUSDxWaitTimeOutMap.get(item.txId) !== undefined) {\n          return {\n            ...item,\n            timeOutFlag: 1\n          }\n        }\n      }\n\n      if (item.icon === 'loading-supply-withdraw-usdx') {\n        if (this.state.withdrawUSDxWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n          this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            // Refresh data\n            this.refreshData();\n            this.setState({ isWithdrawEnable: true, supplyAmount: '' });\n            this.setState({ withdrawAmount: null, withdrawMax: false, withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n          }\n          return {\n            ...item,\n            icon: 'withdraw',\n            status: 1\n          }\n        }\n        if (this.state.withdrawUSDxWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n          this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n          //imtoken用\n          if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n            this.refreshData();\n            this.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n            if (this.props.wethCoin === true) {\n              this.setState({ unwrapAmount: '' });\n            }\n            this.setState({ isWithdrawEnable: true, supplyAmount: '', withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n            this.setState({ withdrawAmount: null, withdrawMax: false });\n          }\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: 'WITHDRAW USDx FAILURE'\n          }\n        }\n        //超时则取消控件限制\n        if (this.state.withdrawUSDxWaitTimeOutMap.get(item.txId) !== undefined) {\n          return {\n            ...item,\n            timeOutFlag: 1\n          }\n        }\n      }\n\n      // if (item.icon === 'loading-supply-weth-approve') {\n      //   if (this.state.enableWETHWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n      //     this.setState({ pendingApproval: false, isApproved: true });\n      //     //imtoken用\n      //     if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n      //       this.setState({ pendingApproval: false, isApproved: true });\n      //     }\n      //     return {\n      //       ...item,\n      //       icon: 'done',\n      //       status: 1\n      //     }\n      //   }\n      //   if (this.state.enableWETHWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n      //     this.setState({ pendingApproval: false, isApproved: true });\n      //     //imtoken用\n      //     if (window.ethereum.isImToken !== undefined && window.ethereum.isImToken === true) {\n      //       this.setState({ pendingApproval: false, isApproved: true });\n      //     }\n      //     return {\n      //       ...item,\n      //       icon: 'failure',\n      //       status: 1,\n      //       failed: true,\n      //       failedInfo: 'ENABLE WETH FAILURE'\n      //     }\n      //   }\n      //   //超时则取消控件限制\n      //   if (this.state.enableWETHWaitTimeOutMap.get(item.txId) !== undefined) {\n      //     return {\n      //       ...item,\n      //       timeOutFlag: 1\n      //     }\n      //   }\n      // }\n\n      if (item.icon === 'loading-supply-usdx-approve') {\n        if (this.state.enableUSDxWaitUpdateForSuccessMap.get(item.txId) !== undefined) {\n          this.setState({ pendingApproval: false, isApproved: true });\n          return {\n            ...item,\n            icon: 'done',\n            status: 1\n          }\n        }\n        if (this.state.enableUSDxWaitUpdateForFailedMap.get(item.txId) !== undefined) {\n          this.setState({ pendingApproval: false, isApproved: true });\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: 'ENABLE USDx FAILURE'\n          }\n        }\n        //超时则取消控件限制\n        if (this.state.enableUSDxWaitTimeOutMap.get(item.txId) !== undefined) {\n          return {\n            ...item,\n            timeOutFlag: 1\n          }\n        }\n      }\n      return {\n        ...item\n      }\n    })\n    storage.setItem(key, JSON.stringify(results));\n  }\n\n\n  // check_Transactions_Status\n  checkTransactionsStatus = () => {\n    var storage = null;\n    var results = null;\n    var key = null;\n    if (window.localStorage) {\n      if (typeof web3 === 'undefined') {\n        return;\n      }\n      storage = window.localStorage;\n      key = getTransactionHistoryKey(this.web3.eth.accounts[0], Asset['Asset'].USDx, this.props.page, this.state.NetworkName);\n      results = JSON.parse(`${storage.getItem(key)}`);\n    }\n    // console.log(results);\n    if (results === null) {\n      return;\n    }\n\n    // console.log(results);\n\n    results = results.map(item => {\n      // console.log('item item item item item item')\n      if (item.icon === 'loading-supply-wrap') {\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ isWrapEnable: true, wrapInputDisabled: false, wrapAmount: '' })\n          } else {\n            this.setState({ isWrapEnable: false, wrapInputDisabled: true })\n          }\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.supplyWrapWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.supplyWrapWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.supplyWrapWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.supplyWrapWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.supplyWrapWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.supplyWrapWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ isWrapEnable: true, wrapInputDisabled: false });\n        }\n      }\n      if (item.icon === 'loading-supply-unwrap') {\n        // console.log('item item item item item item')\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            // to be fixed\n            this.setState({ isunwrapEnable: true, unwrapAmount: '', unwrapInputDisabled: false, unwrapMaxClassName: 'max-amount-button' })\n          } else {\n            this.setState({ isunwrapEnable: false, unwrapInputDisabled: true, unwrapMaxClassName: 'max-amount-button-disable' })\n          }\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.supplyUnwrapWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.supplyUnwrapWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.supplyUnwrapWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.supplyUnwrapWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.supplyUnwrapWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.supplyUnwrapWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ isunwrapEnable: true, unwrapInputDisabled: false });\n        }\n      }\n      if (item.icon === 'loading-supply-weth') {\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ isSupplyEnable: true, supplyAmount: '', supplyButtonText: this.props.supplyButtonInfo, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n          } else {\n            this.setState({ isSupplyEnable: false, supplyButtonText: 'SUBMITTING…', supplyInputDisabled: true, maxClassName: 'max-amount-button-disable' });\n          }\n\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.supplyWETHWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.supplyWETHWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.supplyWETHWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.supplyWETHWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.supplyWETHWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.supplyWETHWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n        }\n      }\n      if (item.icon === 'loading-supply-withdraw-weth') {\n        if (item.status === 0) {\n          //超时则取消控件限制\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n            return 0;\n          }\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ isWithdrawEnable: true, withdrawAmount: '', withdrawMax: false, withdrawButtonText: this.state.withdrawButtonInfo, withdrawInputDisabled: true, withdrawMaxClassName: 'max-amount-button' });\n          } else {\n            this.setState({ isWithdrawEnable: false, withdrawButtonText: 'SUBMITTING…', withdrawInputDisabled: true, withdrawMaxClassName: 'max-amount-button-disable' });\n          }\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.withdrawWETHWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.withdrawWETHWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.withdrawWETHWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.withdrawWETHWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.withdrawWETHWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.withdrawWETHWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n        }\n      }\n\n      if (item.icon === 'loading-supply-usdx') {\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ isSupplyEnable: true, supplyAmount: '', supplyInputDisabled: false, supplyButtonText: this.props.supplyButtonInfo, maxClassName: 'max-amount-button' });\n          } else {\n            this.setState({ isSupplyEnable: false, supplyButtonText: 'SUBMITTING…', supplyInputDisabled: true, maxClassName: 'max-amount-button-disable' });\n          }\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.supplyUSDxWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.supplyUSDxWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.supplyUSDxWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.supplyUSDxWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.supplyUSDxWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.supplyUSDxWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n        }\n      }\n\n      if (item.icon === 'loading-supply-withdraw-usdx') {\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false, withdrawButtonText: this.props.withdrawButtonInfo, withdrawMax: false, withdrawMaxClassName: 'max-amount-button' });\n          } else {\n            this.setState({ isWithdrawEnable: false, withdrawButtonText: 'SUBMITTING…', withdrawInputDisabled: true, withdrawMaxClassName: 'max-amount-button-disable' });\n          }\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.withdrawUSDxWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.withdrawUSDxWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.withdrawUSDxWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.withdrawUSDxWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.withdrawUSDxWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.withdrawUSDxWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n        }\n      }\n      if (item.icon === 'loading-supply-weth-approve') {\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ isApproved: false, pendingApproval: false });\n            this.setState({ buttonText: this.props.approveButtonInfo });\n          } else {\n            this.setState({ buttonText: 'ENABLEING WETH...', pendingApproval: true });\n          }\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.enableWETHWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.enableWETHWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.enableWETHWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.enableWETHWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.enableWETHWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.enableWETHWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ pendingApproval: false });\n        }\n      }\n\n      if (item.icon === 'loading-supply-usdx-approve') {\n        //超时则取消控件限制\n        if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag === 1) {\n          return 0;\n        }\n        if (item.status === 0) {\n          //超时则取消控件限制\n          let timeOutFlag = -1;\n          if (item.timestamp !== undefined && diffMin(item.timestamp) >= this.state.timeOutTimes && item.timeOutFlag !== undefined && item.timeOutFlag !== 1) {\n            timeOutFlag = 1;\n            this.setState({ isApproved: false, pendingApproval: false });\n            this.setState({ buttonText: this.props.approveButtonInfo });\n          } else {\n            this.setState({ buttonText: 'ENABLEING USDx...', pendingApproval: true });\n          }\n\n          let flag = -1;\n          this.web3.eth.getTransactionReceipt(item.txId, (err, data) => {\n            if (data && data.status === '0x1') { // success\n              flag = 1;\n            }\n            if (data && data.status === '0x0') { // failed\n              flag = 0;\n            }\n          });\n          setTimeout(() => {\n            if (flag === 1) {\n              if (this.state.enableUSDxWaitUpdateForSuccessMap.get(item.txId) === undefined) {\n                this.state.enableUSDxWaitUpdateForSuccessMap.set(item.txId, item);\n              }\n            }\n            if (flag === 0) {\n              if (this.state.enableUSDxWaitUpdateForFailedMap.get(item.txId) === undefined) {\n                this.state.enableUSDxWaitUpdateForFailedMap.set(item.txId, item);\n              }\n            }\n            //超时则取消控件限制\n            if (timeOutFlag === 1) {\n              if (this.state.enableUSDxWaitTimeOutMap.get(item.txId) === undefined) {\n                this.state.enableUSDxWaitTimeOutMap.set(item.txId, item);\n              }\n            }\n          }, 3000);\n        } else {\n          this.setState({ pendingApproval: false });\n        }\n      }\n      return item.id;\n    })\n  }\n\n\n\n  mmMonitor = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || MoneyMarket() === undefined) {\n      return;\n    }\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    let that = this;\n    MoneyMarket().SupplyReceived().watch((error, result) => {\n      console.log('supply_USDx_Received_Event: ' + JSON.stringify(result));\n      if (error) {\n        console.log('supply_USDx_Received_Event eeeeeeeeeeerror --> ' + JSON.stringify(error));\n        return;\n      }\n      var storage = null;\n      var results = null;\n      var key = null;\n      if (window.localStorage) {\n        if (typeof web3 === 'undefined') {\n          return;\n        }\n        storage = window.localStorage;\n        key = getTransactionHistoryKey(that.props.account, Asset['Asset'].USDx, that.props.page, that.state.NetworkName);\n        results = JSON.parse(`${storage.getItem(key)}`);\n      }\n      if (results === null) {\n        return;\n      }\n\n      let resultObj = JSON.parse(JSON.stringify(result));\n      var txId = resultObj.transactionHash;\n      // Refresh Data\n      that.refreshData();\n      that.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n      that.setState({ withdrawAmount: null, isWithdrawEnable: true, withdrawMax: false, withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n\n      if (that.props.wethCoin === true) {\n        that.setState({ unwrapAmount: '' });\n      }\n      storage.removeItem(key);\n      let argsObj = JSON.parse(JSON.stringify(resultObj.args));\n      results = results.map(item => {\n        // check is speed up\n        if (item.status === 0 && item.transactionType === 'Supply' && item.realAmount === argsObj.amount && item.txId !== txId) {\n          let txnHashHref = getTxnHashHref(that.state.NetworkName) + txId;\n          return {\n            ...item,\n            icon: 'supply',\n            status: 1,\n            txId: txId,\n            txnHashHref: txnHashHref\n          }\n        } else if (item.txId === txId) { // normal update\n          return {\n            ...item,\n            icon: 'supply',\n            status: 1\n          }\n        }\n        return {\n          ...item\n        }\n      })\n      storage.setItem(key, JSON.stringify(results));\n    });\n    var supplyWithdrawnEvent = MoneyMarket().SupplyWithdrawn();\n    supplyWithdrawnEvent.watch(function (error, result) {\n      console.log('watch -> supplyWithdrawnEvent:' + JSON.stringify(result));\n      if (error) {\n        console.log('watch mmMonitor supplyWithdrawnEvent error --> ' + JSON.stringify(error));\n        return;\n      }\n      var storage = null;\n      var results = null;\n      var key = null;\n      if (window.localStorage) {\n        if (typeof web3 === 'undefined') {\n          return;\n        }\n        storage = window.localStorage;\n        if (that.props.wethCoin === true) {\n          key = getTransactionHistoryKey(that.props.account, Asset['Asset'].WETH, that.props.page, that.state.NetworkName);\n        } else if (that.props.usdxCoin === true) {\n          key = getTransactionHistoryKey(that.props.account, Asset['Asset'].USDx, that.props.page, that.state.NetworkName);\n        }\n        results = JSON.parse(`${storage.getItem(key)}`);\n      }\n      if (results === null) {\n        return;\n      }\n      let resultObj = JSON.parse(JSON.stringify(result));\n      var txId = resultObj.transactionHash;\n      // Refresh data\n      that.refreshData();\n\n      that.setState({ isWithdrawEnable: true, supplyAmount: '' });\n      that.setState({ withdrawAmount: null, withdrawMax: false, withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n      storage.removeItem(key);\n      let argsObj = JSON.parse(JSON.stringify(resultObj.args));\n      results = results.map(item => {\n        // check is speed up\n        if (item.status === 0 && item.transactionType === 'Withdraw' && item.realAmount === argsObj.amount && item.txId !== txId) {\n          let txnHashHref = getTxnHashHref(that.state.NetworkName) + txId;\n          return {\n            ...item,\n            icon: 'withdraw',\n            status: 1,\n            txId: txId,\n            txnHashHref: txnHashHref\n          }\n        } else if (item.txId === txId) {\n          return {\n            ...item,\n            icon: 'withdraw',\n            status: 1\n          }\n        }\n        return {\n          ...item\n        }\n      })\n      storage.setItem(key, JSON.stringify(results));\n    });\n    var failureEvent = MoneyMarket().Failure();\n    failureEvent.watch(function (error, result) {\n      console.log('watch -> failureEvent:' + JSON.stringify(result));\n      if (error) {\n        console.log('watch mmMonitor failureEvent error --> ' + JSON.stringify(error));\n        return;\n      }\n      var storage = null;\n      var results = null;\n      var key = null;\n      if (window.localStorage) {\n        if (typeof web3 === 'undefined') {\n          return;\n        }\n        storage = window.localStorage;\n        if (that.props.wethCoin === true) {\n          key = getTransactionHistoryKey(that.props.account, Asset['Asset'].WETH, that.props.page, that.state.NetworkName);\n        } else if (that.props.usdxCoin === true) {\n          key = getTransactionHistoryKey(that.props.account, Asset['Asset'].USDx, that.props.page, that.state.NetworkName);\n        }\n        results = JSON.parse(`${storage.getItem(key)}`);\n      }\n      if (results === null) {\n        return;\n      }\n      let resultObj = JSON.parse(JSON.stringify(result));\n      var txId = resultObj.transactionHash;\n      that.refreshData();\n      that.setState({ isSupplyEnable: true, supplyAmount: null, supplyInputDisabled: false, maxClassName: 'max-amount-button' });\n      if (that.props.wethCoin === true) {\n        that.setState({ unwrapAmount: '' });\n      }\n      that.setState({ isWithdrawEnable: true, supplyAmount: '', withdrawInputDisabled: false, withdrawMaxClassName: 'max-amount-button' });\n      that.setState({ withdrawAmount: null, withdrawMax: false });\n      // change icon and status = 1 by txId\n      storage.removeItem(key);\n      results = results.map(item => {\n        if (item.txId === txId) {\n          let errorArgs = resultObj.args;\n          let argsObj = JSON.parse(JSON.stringify(errorArgs));\n          console.log('failure info:' + ErrorCode[argsObj.error]);\n          return {\n            ...item,\n            icon: 'failure',\n            status: 1,\n            failed: true,\n            failedInfo: ErrorCode[argsObj.error]\n          }\n        }\n        return {\n          ...item\n        }\n      })\n      storage.setItem(key, JSON.stringify(results));\n    });\n  }\n\n  refreshDataEventMonitor = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || MoneyMarket() === undefined) {\n      return;\n    }\n    if (MoneyMarket() === undefined) {\n      return;\n    }\n    MoneyMarket().allEvents({ toBlock: 'latest' }).watch((error, result) => {\n      if (error) {\n        console.log('watch error --> ' + JSON.stringify(error));\n        return;\n      }\n      let eventObj = JSON.parse(JSON.stringify(result));\n      let event = eventObj.event;\n      // console.log('refreshDataEventMonitor eventObj:' + JSON.stringify(result))\n      if (event === 'BorrowTaken' || event === 'BorrowRepaid') {\n        this.setState({ withdrawAmount: '' });\n        // this.getMaxWithdrawAmount();\n        // this.getmaxWithdrawUSDXAmount();\n        this.get_My_USDx_Supplied_max_Withdraw_USDx_Amount();\n        // this.getAccountBalance();\n        // this.getMyAddressWETHBalance();\n      }\n    });\n  }\n\n\n\n\n  // ***** 华丽的分割线 ***** ***** 华丽的分割线 ***** ***** 华丽的分割线 ***** ***** 华丽的分割线 ***** ***** 华丽的分割线 ***** ***** 华丽的分割线 ***** ***** 华丽的分割线 *****\n\n\n\n  Get_My_USDx_Balance = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || USDX() === undefined) {\n      return;\n    }\n    USDX().balanceOf(this.web3.eth.accounts[0], (err, res) => {\n      if (res) {\n        this.setState({\n          My_USDx_Balance: this.web3.fromWei(res.toNumber(), \"ether\"),\n          My_USDx_Balance_BN: res\n        }, () => {\n          // console.log(this.state.My_USDx_Balance_BN)//this.state.My_USDx_Balance_BN.toLocaleString().replace(/,/g, '')\n          // console.log(this.state.My_USDx_Balance_BN.toLocaleString().replace(/,/g, ''))\n          // console.log(this.state.My_USDx_Balance_BN.div(this.web3.toBigNumber(10 ** 18))) // BN\n          // console.log(this.state.My_USDx_Balance_BN.div(this.web3.toBigNumber(10 ** 18)).toLocaleString())\n        })\n      }\n    });\n  }\n\n\n\n  get_My_USDx_Supplied_max_Withdraw_USDx_Amount = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || USDX() === undefined || MoneyMarket() === undefined) {\n      return;\n    }\n    let usdxAddress = '';\n    let mmAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n      mmAddress = Network.Main.MoneyMarket;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n      mmAddress = Network.Rinkeby.MoneyMarket;\n    }\n    MoneyMarket().getAccountLiquidity(this.web3.eth.accounts[0], (error, res_Account_Liquidity_BN) => {\n      if (res_Account_Liquidity_BN) {\n\n\n        MoneyMarket().assetPrices(usdxAddress, (err, res_usdx_price_BN) => {\n          if (res_usdx_price_BN) {\n            // console.log(res_Account_Liquidity_BN)\n            res_Account_Liquidity_BN = res_Account_Liquidity_BN.mul(this.web3.toBigNumber(10 ** 18)).div(res_usdx_price_BN);\n            // console.log(res_Account_Liquidity_BN)\n            MoneyMarket().getSupplyBalance(this.web3.eth.accounts[0], usdxAddress, (err, res_supplied_BN) => {\n              if (res_supplied_BN) {\n                this.setState({\n                  My_USDx_Supplied: this.web3.fromWei(res_supplied_BN.toNumber(), \"ether\"),\n                }, () => {\n                  USDX().balanceOf(mmAddress, (err, res_cash_BN) => {\n                    if (res_cash_BN) {\n                      // console.log(res_Account_Liquidity_BN.toLocaleString())\n                      // console.log(res_supplied_BN.toLocaleString())\n                      // console.log(res_cash_BN.toLocaleString())\n                      let moreSmallNum = res_Account_Liquidity_BN.sub(res_supplied_BN).toNumber() < 0 ? res_Account_Liquidity_BN : res_supplied_BN;\n                      let mostSmallNum = moreSmallNum.sub(res_cash_BN).toNumber() < 0 ? moreSmallNum : res_cash_BN;\n                      // console.log(mostSmallNum.toLocaleString())\n                      if (!(mostSmallNum.gt(this.web3.toBigNumber(0)))) {\n                        this.setState({ maxWithdrawUSDXAmount: 0 });\n                        return;\n                      }\n                      this.setState({\n                        maxWithdrawUSDXAmount: this.web3.fromWei(mostSmallNum.toNumber(), \"ether\"),\n                        maxWithdrawUSDXAmount_BN: mostSmallNum\n                      });\n                    }\n                  })\n                })\n              }\n            })\n          }\n        })\n      }\n    })\n  }\n\n\n\n  handle_Supply_Max = () => {\n    let supply_to_show = this.state.My_USDx_Balance_BN.div(this.web3.toBigNumber(10 ** 18)).toLocaleString().substring(0, 18);\n    this.setState({\n      i_will_supply_max: true,\n      supplyAmount: supply_to_show\n    });\n    if (Number(this.state.My_USDx_Balance_BN) === 0) {\n      this.setState({ isSupplyEnable: false, supplyButtonText: this.props.supplyButtonInfo });\n    } else {\n      this.setState({ isSupplyEnable: true });\n    }\n  }\n\n\n\n  handle_Supply_Change = (value) => {\n    if (value.length > 18) {\n      return;\n    }\n    this.setState({\n      i_will_supply_max: false\n    });\n    console.log(value)\n    if (value === null || value === '') {\n\n      console.log(\"value === null || value === ''\")\n      this.setState({\n        isSupplyEnable: true,\n        supplyButtonText: this.props.supplyButtonInfo,\n        supplyAmount: ''\n      });\n      return;\n    } else if (value.length > 18 || this.web3.toBigNumber(value).mul(this.web3.toBigNumber(10 ** 18)).sub(this.state.My_USDx_Balance_BN) > 0) {\n      let supplyButtonText = 'INSUFFICIENT BALANCE';\n      console.log(this.web3.toBigNumber(value).mul(this.web3.toBigNumber(10 ** 18)).sub(this.state.My_USDx_Balance_BN) > 0)\n      this.setState({\n        supplyAmount: value,\n        isSupplyEnable: false,\n        supplyButtonText: supplyButtonText\n      });\n      return;\n    }\n    this.setState({ supplyAmount: value });\n\n    if ((Number(value)) === 0) {\n      this.setState({ isSupplyEnable: false, supplyButtonText: this.props.supplyButtonInfo });\n      return;\n    } else {\n      this.setState({ isSupplyEnable: true });\n    }\n  }\n\n\n\n  handle_Supply_Click = () => {\n    if (this.state.supplyAmount === '' || this.state.supplyAmount === 0 || this.state.supplyAmount === null) {\n      return;\n    }\n    this.setState({\n      isSupplyEnable: false,\n      supplyButtonText: 'SUBMITTING…',\n      supplyInputDisabled: true,\n      maxClassName: 'max-amount-button-disable'\n    });\n\n    let supplyAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      supplyAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      supplyAddress = Network.Rinkeby.USDx;\n    }\n\n    let to_supply_amount_BN = this.web3.toBigNumber(0);\n    if (this.state.i_will_supply_max) {\n      to_supply_amount_BN = this.state.My_USDx_Balance_BN;\n    } else {\n      to_supply_amount_BN = this.web3.toBigNumber(this.state.supplyAmount).mul(this.web3.toBigNumber(10 ** 18));\n    }\n\n    MoneyMarket().supply.estimateGas(supplyAddress, to_supply_amount_BN, { from: this.web3.eth.accounts[0] }, (err, gasLimit) => {\n      this.web3.eth.getGasPrice((err, gasPrice) => {\n        MoneyMarket().supply.sendTransaction(\n          supplyAddress,\n          to_supply_amount_BN,\n          {\n            from: this.web3.eth.accounts[0],\n            gas: gasLimit,\n            gasPrice: gasPrice\n          },\n          (err, res) => {\n            if (res !== undefined && res !== null) {\n              let txId = res;\n              let txnHashHref = getTxnHashHref(this.state.NetworkName) + res;\n              let recordSupplyAmount = toDoubleThousands(this.state.supplyAmount);\n\n              saveTransaction(\n                'loading-supply-usdx',\n                this.web3.eth.accounts[0],\n                Asset['Asset'].USDx,\n                this.props.page,\n                this.state.NetworkName,\n                'Supply',\n                recordSupplyAmount,\n                'USDx',\n                txnHashHref,\n                txId,\n                0,\n                this.web3.toWei(this.state.supplyAmount, \"ether\"),\n                false,\n                null\n              );\n            } else {\n              this.setState({ isSupplyEnable: true, supplyInputDisabled: false });\n            }\n          }\n        )\n      })\n    });\n  }\n\n\n\n  handle_Withdraw_Max = () => {\n    let withdraw_to_show = this.state.maxWithdrawUSDXAmount_BN.div(this.web3.toBigNumber(10 ** 18)).toLocaleString().substring(0, 18);\n    this.setState({\n      withdrawAmount: withdraw_to_show,\n      withdrawMax: true\n    }, () => {\n      if (Number(this.state.maxWithdrawUSDXAmount) === 0) {\n        this.setState({ isWithdrawEnable: false, withdrawButtonText: 'INSUFFICIENT LIQUIDITY' });\n      } else {\n        this.setState({ isWithdrawEnable: true });\n      }\n    });\n  }\n\n\n\n  handle_Withdraw_Change = (value) => {\n    if (value.length > 18) {\n      return;\n    }\n    this.setState({\n      withdrawMax: false\n    });\n    if (value === null || value === '') {\n      this.setState({\n        isWithdrawEnable: true,\n        withdrawButtonText: this.state.withdrawButtonInfo,\n        withdrawAmount: '',\n        withdrawMax: false\n      });\n      return;\n    } else if (this.web3.toBigNumber(value).mul(this.web3.toBigNumber(10 ** 18)).sub(this.state.maxWithdrawUSDXAmount_BN) > 0) {\n      this.setState({\n        withdrawAmount: value,\n        isWithdrawEnable: false,\n        withdrawButtonText: 'INSUFFICIENT LIQUIDITY'\n      });\n      return;\n    }\n    this.setState({ withdrawAmount: value });\n    if (Number(value) === 0) {\n      this.setState({ isWithdrawEnable: false, withdrawButtonText: 'INSUFFICIENT LIQUIDITY' });\n    } else {\n      this.setState({ isWithdrawEnable: true });\n    }\n  }\n\n\n\n\n  handle_Withdraw_Click = () => {\n    if (this.state.withdrawAmount === '' || Number(this.state.withdrawAmount) === 0 || this.state.withdrawAmount === null) {\n      return;\n    }\n    // if (this.state.withdrawAmount > this.state.maxWithdrawUSDXAmount) {\n    //   this.setState({ withdrawAmount: this.state.maxWithdrawUSDXAmount })\n    // }\n    // let amount = this.web3.toWei(this.state.withdrawAmount, \"ether\");\n    let amount = this.web3.toBigNumber(this.state.withdrawAmount).mul(this.web3.toBigNumber(10 ** 18));\n    if (this.state.withdrawMax) {\n      amount = -1;\n    }\n\n    this.setState({\n      isWithdrawEnable: false,\n      withdrawButtonText: 'SUBMITTING…',\n      withdrawInputDisabled: true,\n      withdrawMaxClassName: 'max-amount-button-disable'\n    });\n    let withdrawAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      withdrawAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      withdrawAddress = Network.Rinkeby.USDx;\n    }\n\n    MoneyMarket().withdraw.estimateGas(withdrawAddress, amount, { from: this.web3.eth.accounts[0] }, (err, gasLimit) => {\n      this.web3.eth.getGasPrice((err, gasPrice) => {\n        MoneyMarket().withdraw.sendTransaction(\n          withdrawAddress,\n          amount,\n          {\n            from: this.web3.eth.accounts[0],\n            gas: gasLimit,\n            gasPrice: gasPrice\n          },\n          (err, res) => {\n            if (res !== undefined && res !== null) {\n              let txId = res;\n              let txnHashHref = getTxnHashHref(this.state.NetworkName) + res;\n              let recordWithdrawAmount = (amount === -1) ? toDoubleThousands(this.state.maxWithdrawUSDXAmount) : toDoubleThousands(this.state.withdrawAmount);\n              saveTransaction(\n                'loading-supply-withdraw-usdx',\n                this.web3.eth.accounts[0],\n                Asset['Asset'].USDx,\n                this.props.page,\n                this.state.NetworkName,\n                'Withdraw',\n                recordWithdrawAmount,\n                'USDx',\n                txnHashHref,\n                txId,\n                0,\n                this.state.withdrawMax === true ? -1 : this.web3.toWei(this.state.withdrawAmount, \"ether\"),\n                false,\n                null\n              );\n            } else {\n              this.setState({ isWithdrawEnable: true, withdrawInputDisabled: false });\n            }\n          }\n        )\n      })\n    });\n  }\n\n\n\n  refresh_status = () => {\n    this.Get_My_USDx_Balance();\n  }\n\n\n\n\n\n\n\n  componentDidMount_temp = () => {\n    // event monitor\n    // this.usdxEventMonitor();//imtoken测试临时注释\n    // this.wethEventMonitor();//imtoken测试临时注释\n    //非imtoken用 ，否则用imtoken测试临时注释\n    if (window.web3 !== undefined && window.ethereum.isImToken === undefined) {\n      this.usdxEventMonitor();\n      // this.wethEventMonitor();\n    }\n    // Recent Transactions status = 0\n    this.checkTransactionsStatusTimer = setInterval(() => {\n      this.checkTransactionsStatus();\n    }, 1000);\n    //check\n    this.checkWaitingUpdateTimer = setInterval(() => {\n      this.checkWaitingUpdateTransactionRecords();\n    }, 1000);\n    // this.mmMonitor();//imtoken测试临时注释\n    // this.refreshDataEventMonitor();//imtoken测试临时注释\n    //非imtoken用 ，否则用imtoken测试临时注释\n    if (window.web3 !== undefined && window.ethereum.isImToken === undefined) {\n      this.mmMonitor();\n      this.refreshDataEventMonitor()\n    }\n    this.getAllowance();\n    this.getCollateralRatio();\n    this.getCurrentSupplyAssetAmount();\n    // this.getAccountBalance();\n    this.getAssetBalance();\n    this.getUSDxAssetPrice();\n    // this.getMaxWithdrawAmount();\n    // this.getmaxWithdrawUSDXAmount();\n    this.get_My_USDx_Supplied_max_Withdraw_USDx_Amount();\n    this.Get_My_USDx_Balance();\n\n\n    this.refreshInterval = setInterval(() => {\n      this.getCurrentSupplyAssetAmount();\n      this.getAssetBalance();\n      // this.getMaxWithdrawAmount();\n      // this.getmaxWithdrawUSDXAmount();\n      this.get_My_USDx_Supplied_max_Withdraw_USDx_Amount();\n      // this.getAccountBalance();\n      this.Get_My_USDx_Balance();\n    }, 1000 * 15)\n  }\n\n  componentWillUnmount() {\n    // clearInterval(this.gasPriceInterval);\n    clearInterval(this.refreshInterval);\n    clearInterval(this.accountInterval);\n    clearInterval(this.checkTransactionsStatusTimer);\n    clearInterval(this.checkWaitingUpdateTimer);\n  }\n\n\n  render() {\n    const approveProps = {\n      enableMessage: `Before supplying USDx for the first time, you must enable USDx.`,\n      isEnable: !this.state.pendingApproval,\n      buttonInfo: this.state.isApproved ? this.props.approveButtonInfo : (this.state.buttonText === '' ? this.props.approveButtonInfo : this.state.buttonText),\n      handleClick: this.handleApprove,\n      page: this.props.page\n    };\n\n\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <div className='supply-input'>\n          <div className='info-wrapper'>\n            <span className='balance-type'>\n              <img style={{ width: '16px', height: '16px', margin: 'auto', marginTop: '-4px' }} src={`images/USDx@2x.png`} alt=\"\" />&nbsp;<FormattedMessage id='USDx_Supplied' />\n            </span>\n            <span className='balance-amount'>\n              {this.state.My_USDx_Supplied ? toDoubleThousands(this.state.My_USDx_Supplied) : '-'}\n            </span>\n          </div>\n\n          <Tabs className='tab-wrapper' animated={true} size='large' onChange={this.changePane}>\n            <TabPane tab={this.props.tabLeftName === 'SUPPLY' ? navigator.language === 'zh-CN' ? '存款' : 'SUPPLY' : this.props.tabLeftName} key=\"1\" className='tab-content'>\n              {\n                this.props.isApproved_USDx == 1\n                  ?\n                  <span>\n                    <div className='balance-info'>\n                      <span className='balance-desc'>\n                        <FormattedMessage id='USDx_Balance' />\n                      </span>\n                      <span className='balance-amount'>{this.state.My_USDx_Balance ? toDoubleThousands(this.state.My_USDx_Balance) : '-'}&nbsp;USDx</span>\n                    </div>\n                    <div className='input-unit-wrapper'>\n                      {\n                        !(this.props.hasBorrowedUSDx || false)\n                          ?\n                          <div className='input-wrapper'>\n                            <Input\n                              type='number'\n                              placeholder={'Amount in USDx'}\n                              min={0}\n                              value={this.state.supplyAmount}\n                              onChange={(e) => this.handle_Supply_Change(e.target.value)}\n                              className='input-number'\n                              disabled={this.state.supplyInputDisabled}\n                            />\n                            <span className={this.state.maxClassName} onClick={this.state.supplyInputDisabled ? '' : this.handle_Supply_Max}>MAX</span>\n                          </div>\n                          :\n                          <div className='alert-message'>\n                            <FormattedMessage id='Already_borrowed' />\n                          </div>\n                      }\n                      <div className={'button-wrapper'}>\n                        <Button\n                          size='large'\n                          className={!!(this.props.hasBorrowedUSDx || false || !this.state.isSupplyEnable) ? 'disable-button' : ''}\n                          onClick={() => { this.handle_Supply_Click() }}\n                          disabled={!this.state.isSupplyEnable || !!(this.props.hasBorrowedUSDx || false)}\n                        >\n                          {this.state.isSupplyEnable ? this.props.supplyButtonInfo : this.state.supplyButtonText}\n                        </Button>\n                      </div>\n                    </div>\n                  </span>\n                  :\n                  null\n              }\n              {\n                this.props.not_approve_atfirst_USDX == 1\n                  ?\n                  <Approve {...approveProps} />\n                  :\n                  null\n              }\n            </TabPane>\n\n            <TabPane tab={this.props.tabRightName === 'WITHDRAW' ? navigator.language === 'zh-CN' ? '取出' : 'WITHDRAW' : this.props.tabRightName} key=\"2\" className='tab-content'>\n              {\n                this.props.isApproved_USDx == 1\n                  ?\n                  <div className='balance-info'>\n                    <span className='balance-desc'>\n                      <FormattedMessage id='USDx_Available_supply' />\n                    </span>\n                    <span className='balance-amount'>{this.state.maxWithdrawUSDXAmount ? toDoubleThousands(this.state.maxWithdrawUSDXAmount) : '-'}&nbsp;</span>\n                  </div>\n                  :\n                  null\n              }\n              {\n                this.props.isApproved_USDx == 1\n                  ?\n                  <div className='input-unit-wrapper'>\n                    {!(false || this.props.hasBorrowedUSDx)\n                      ?\n                      <div className='input-wrapper'>\n                        <Input\n                          type='number'\n                          placeholder={'Amount in USDx'}\n                          min={0}\n                          value={this.state.withdrawAmount}\n                          onChange={(e) => { this.handle_Withdraw_Change(e.target.value) }}\n                          className='input-number'\n                          disabled={this.state.withdrawInputDisabled}\n                        />\n                        <span className={this.state.withdrawMaxClassName} onClick={this.state.withdrawInputDisabled ? '' : this.handle_Withdraw_Max}>MAX</span>\n                      </div>\n                      :\n                      <div className='alert-message'>\n                        <FormattedMessage id='Already_borrowed' />\n                      </div>\n                    }\n\n                    <div className={'button-wrapper'}>\n                      <Button\n                        size='large'\n                        className={!!(this.props.hasBorrowedUSDx || false || !this.state.isWithdrawEnable) ? 'disable-button' : ''}\n                        onClick={this.handle_Withdraw_Click}\n                        disabled={!this.state.isWithdrawEnable || !!(this.props.hasBorrowedUSDx || false)}\n                      >\n                        {this.state.isWithdrawEnable ? this.props.withdrawButtonInfo : this.state.withdrawButtonText}\n                      </Button>\n                    </div>\n                  </div>\n                  :\n                  <Approve {...approveProps} />\n              }\n            </TabPane>\n\n          </Tabs>\n        </div>\n      </IntlProvider>\n    )\n  }\n}\n\nexport default SupplyContent;","import React, { Component } from 'react';\nimport InfoSection from '../../component/infoSection/infoSection';\nimport Network from '../../constant.json';\nimport MoneyMarket from './../../ABIs/MoneyMarket.js';\nimport { getPercentageFormat, toDoubleThousands, findNetwork } from '../../util.js';\nimport './accountInfo.scss';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\nclass AccountInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.web3 = window.web3;\n\n  }\n\n  get_USDx_supply_borrow = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || MoneyMarket() === undefined) {\n      return;\n    }\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    MoneyMarket().markets.call(usdxAddress, (err, res) => {\n      if (res !== undefined && res !== null) {\n        // USDx_supply: res[3]\n        // USDx_borrow: res[6]\n        // USDx_supply_APR: res[4]\n        // USDx_borrow_APR: res[7]\n        this.setState({\n          USDx_supply: this.web3.fromWei(res[3], \"ether\"),\n          USDx_borrow: this.web3.fromWei(res[6], \"ether\"),\n          USDx_supply_APR: getPercentageFormat(this.web3.fromWei(res[4].toNumber(), \"ether\") * 86400 * 365 / 15),\n          USDx_borrow_APR: getPercentageFormat(this.web3.fromWei(res[7].toNumber(), \"ether\") * 86400 * 365 / 15)\n        });\n      }\n    })\n  }\n\n\n  componentDidMount = () => {\n    // this.componentDidMount_temp();\n\n\n    if (window.web3) {\n      window.web3.currentProvider.enable().then(\n        res => {\n          window.web3.version.getNetwork((e, r) => {\n            if (r) {\n              this.setState({\n                NetworkName: r\n              }, () => {\n                // this.componentDidMount_temp();\n                this.get_USDx_supply_borrow();\n              })\n            }\n          })\n        }\n      )\n    }\n\n    // this.get_USDx_supply_borrow();\n\n    this.timer_supply = setInterval(() => {\n      this.get_USDx_supply_borrow();\n    }, 1000 * 15);\n\n    if (window.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', () => {\n        this.get_USDx_supply_borrow();\n      });\n    }\n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.timer_supply);\n  }\n\n\n  render = () => {\n    const accountInfo = [\n      {\n        title: 'Total Supplied',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : '$' + toDoubleThousands(this.state.USDx_supply),\n        page: 'lend'\n      },\n      {\n        title: 'Total Borrowed',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : '$' + toDoubleThousands(this.state.USDx_borrow),\n        page: 'lend'\n      },\n\n      {\n        title: 'Supply APR',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : toDoubleThousands(this.state.USDx_supply_APR) + '%',\n        page: 'lend'\n      },\n      {\n        title: 'Borrow APR',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : toDoubleThousands(this.state.USDx_borrow_APR) + '%',\n        page: 'lend'\n      }\n    ];\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <div className={'account-info-board'}>\n          <div className={'info-board-title'}>\n            <FormattedMessage id='USDx_Market' />\n          </div>\n          <div className={'info-board-content'}>\n            <InfoSection accountInfo={accountInfo} currentPage={'lend'} />\n          </div>\n        </div>\n      </IntlProvider>\n    )\n  }\n}\n\nexport default AccountInfo;","import React, { Component } from \"react\";\nimport SupplyContent from \"../../container/supplyInput/SupplyContent\";\nimport USDX from \"../../ABIs/USDX\";\nimport MoneyMarket from \"../../ABIs/MoneyMarket.js\";\nimport Header from '../../component/header/header';\nimport { withMarketInfo } from '../../HOC/withMarketInfo';\nimport { toFormatShowNumber, findNetwork, getLoginStatusKey } from '../../util.js'\nimport RecordBoard from '../../container/recordBoard/recordBoard';\nimport AccountInfo from '../../container/accountInfo/accountInfo_supply';\nimport { Link } from \"react-router-dom\";\nimport Network from \"../../constant.json\";\nimport MediaQuery from 'react-responsive';\nimport \"./lend.scss\";\n\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\n\nconst WithMarketInfoEnhanced = withMarketInfo(Header);\n\nclass Lend extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // supplyAssetPrice: 0,\n      loadingPhase: true,\n      switchAccountLoading: false,\n      hasBorrowedUSDx: false,\n      isLogIn: false,\n      currentUser: window.web3 !== undefined ? window.web3.eth.accounts[0] : null,\n      isApproved_USDx: 0,\n      not_approve_atfirst_USDX: 0\n    };\n    this.web3 = window.web3;\n\n    // window.web3.currentProvider.enable().then(\n    //   res => {\n    //     this.setState({ isLogIn: true }, () => {\n    //       console.log(this.state.isLogIn);\n    //       this.componentDidMount_temp();\n    //     });\n    //   }\n    // )\n\n    window.web3.currentProvider.enable().then(\n      res => {\n        this.setState({ isLogIn: true }, () => {\n          window.web3.version.getNetwork((e, r) => {\n            if (r) {\n              this.setState({\n                NetworkName: r\n              }, () => {\n                this.componentDidMount_temp();\n              })\n            }\n          })\n        });\n      }\n    )\n\n    if (window.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', () => {\n        this.componentDidMount_temp();\n      });\n    }\n\n  }\n\n\n  // *********** has_Borrowed_USDx\n  getBorrowBalance = () => {\n    if (typeof web3 === 'undefined' || window.web3.eth.accounts[0] === undefined || MoneyMarket() === undefined) {\n      return;\n    }\n    let myAddress = window.web3.eth.accounts[0];\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    MoneyMarket().getBorrowBalance(myAddress, usdxAddress, (err, res) => {\n      if (res !== undefined && res !== null && Number(window.web3.fromWei(res.toNumber(), \"ether\")) > 0) {\n        this.setState({ hasBorrowedUSDx: true });\n      } else {\n        this.setState({ hasBorrowedUSDx: false });\n      }\n    }\n    );\n  }\n\n  // setLoginStatus = () => {\n  //   const { isSMView } = this.props;\n  //   if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined) {\n  //     return;\n  //   }\n  //   var storage = null;\n  //   var results = null;\n  //   var key = getLoginStatusKey(this.web3.eth.accounts[0]);\n  //   if (window.localStorage) {\n  //     storage = window.localStorage;\n  //     results = JSON.parse(`${storage.getItem(key)}`);\n  //   }\n  //   if (this.state.isLogIn !== true && isSMView) {\n  //     this.setState({ isLogIn: true });\n  //   }\n  //   if (results === null) {\n  //     return;\n  //   }\n  //   results = results.map(item => {\n  //     if (item.account === this.web3.eth.accounts[0] && this.state.isLogIn !== item.isLogin && !isSMView) {\n  //       this.setState({ isLogIn: item.isLogin });\n  //     }\n  //     return item.id;\n  //   })\n  // }\n\n\n\n\n  // 检测是否 approved USDx\n  get_Allowance = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined) {\n      // console.log('11111111111  在这儿卡住了');\n      return;\n    }\n    let mmAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    mmAddress = Network[NetworkName].MoneyMarket;\n    USDX().allowance(this.web3.eth.accounts[0], mmAddress, (err, res) => {\n      if (res !== undefined && res !== null) {\n        if (Number(res) > 0) {\n          this.setState({\n            isApproved_USDx: 1,\n            not_approve_atfirst_USDX: 0\n          }, () => {\n            // console.log('is_Approved >>>>>>>>>>>>> ')\n          });\n        } else if (Number(res) == 0) {\n          this.setState({\n            not_approve_atfirst_USDX: 1,\n            isApproved_USDx: 0\n          }, () => {\n            // console.log('not_Approved >>>>>>>>>>>>> ')\n          });\n        }\n      }\n    });\n  }\n\n  componentDidMount_temp = () => {\n    setTimeout(() => {\n      this.get_Allowance();\n      this.getBorrowBalance();\n    }, 2000);\n\n    this.accountInterval = setInterval(() => {\n      this.get_Allowance();\n      this.getBorrowBalance();\n    }, 1000 * 15);\n\n\n    return false;\n\n    setTimeout(() => {\n      this.get_Allowance();\n      this.getAssetPrice();\n      this.getBorrowBalance();\n      this.setState({ loadingPhase: false });\n    }, 700);\n\n    if (typeof web3 !== 'undefined' && window.web3.eth.accounts[0] !== undefined) {\n      // this.setState({ currentUser: window.web3.eth.accounts[0] });\n      this.accountInterval = setInterval(() => {\n        if (window.web3.eth.accounts[0] !== this.state.currentUser) {\n          this.setState({ switchAccountLoading: true, currentUser: window.web3.eth.accounts[0] });\n          setTimeout(() => this.setState({ switchAccountLoading: false }), 1200);\n          this.getBorrowBalance();\n        }\n        // console.log('lend:' + this.props.isLogIn)\n        // this.setLoginStatus();\n      }, 1000 * 15);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.accountInterval);\n  }\n\n\n\n  render() {\n    const usdxInstance = USDX();\n    let currentAccount = null;\n    let NetworkName;\n    if (typeof web3 !== 'undefined') {\n      currentAccount = this.web3.eth.accounts[0];\n      NetworkName = findNetwork(this.state.NetworkName);\n    }\n\n    const usdxProps = {\n      wethCoin: false,\n      usdxCoin: true,\n      coin: usdxInstance,\n      account: currentAccount,\n      supplyType: 'USDX',\n      withdrawType: 'USDX',\n      approveButtonInfo: \"ENABLE USDx\",\n      supplyButtonInfo: \"SUPPLY\",\n      withdrawButtonInfo: \"WITHDRAW\",\n      balanceType: \"USDx\",\n      balanceAmount: \"\",\n      tabLeftName: 'SUPPLY',\n      tabRightName: 'WITHDRAW',\n      hasBorrowedUSDx: this.state.hasBorrowedUSDx,\n      page: 'lend',\n      login: window.web3.eth.accounts[0] ? true : false,\n      isApproved_USDx: this.state.isApproved_USDx,\n      not_approve_atfirst_USDX: this.state.not_approve_atfirst_USDX\n    };\n\n    return (\n      <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        <MediaQuery maxWidth={768}>\n          {(match) =>\n            <div className={'lend-page ' + (match ? 'CM XS ' : 'CM LG ') + (NetworkName === 'Main' ? 'without-banner' : 'with-banner')}>\n              <WithMarketInfoEnhanced networkName={NetworkName} account={currentAccount} login={window.web3.eth.accounts[0]} />\n              <div className='redirect-button'>\n                <div className='go-back-button'>\n                  <Link to={'/'}>\n                    <img src={'images/icon_home@2x.png'} alt=\"HOME\" />\n                    <span>\n                      <FormattedMessage id='Home' />\n                    </span>\n                  </Link>\n                </div>\n                <div className='go-to-borrow'>\n                  <Link to={'/borrow'} >\n                    <span>\n                      <FormattedMessage id='Borrow' />\n                    </span>\n                    <img src={'images/icon_borrow@2x.png'} alt=\"BORROW\" />\n                  </Link>\n                </div>\n              </div>\n              <AccountInfo networkName={NetworkName} currentPage={'lend'} account={currentAccount} login={window.web3.eth.accounts[0] ? true : false} />\n\n              <div className=\"lend-page-wrapper\">\n                <div className=\"supply-group\">\n                  <div className=\"supply-title\">\n                    <span>\n                      <FormattedMessage id='SUPPLY' /></span>\n                  </div>\n                  <div className=\"supply-content\" style={{}}>\n                    {/* <div className=\"supply-content\" style={{ display: (this.state.isApproved_USDx == 1) || (this.state.not_approve_atfirst_USDX == 1) ? 'block' : 'none' }}> */}\n                    <SupplyContent {...usdxProps} />\n\n                    {this.state.isLogIn && window.web3.eth.accounts[0] && (this.state.isApproved_USDx == 1 || this.state.not_approve_atfirst_USDX == 1)\n                      ?\n                      <RecordBoard coinType={'USDx'} account={currentAccount} page={'lend'} />\n                      :\n                      null\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n        </MediaQuery>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default Lend;\n","import React, { Component } from 'react';\nimport InfoSection from '../../component/infoSection/infoSection';\nimport Network from '../../constant.json';\nimport MoneyMarket from './../../ABIs/MoneyMarket.js';\nimport { getPercentageFormat, toDoubleThousands, findNetwork } from '../../util.js';\n\nimport './accountInfo.scss';\n\n\nclass AccountInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.web3 = window.web3;\n  }\n\n  get_USDx_supply_borrow = () => {\n    if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || MoneyMarket() === undefined) {\n      return;\n    }\n    let usdxAddress = '';\n    let NetworkName = findNetwork(this.state.NetworkName);\n    if (NetworkName === 'Main') {\n      usdxAddress = Network.Main.USDx;\n    } else if (NetworkName === 'Rinkeby') {\n      usdxAddress = Network.Rinkeby.USDx;\n    }\n    MoneyMarket().markets.call(usdxAddress, (err, res) => {\n      if (res !== undefined && res !== null) {\n        // USDx_supply: res[3]\n        // USDx_borrow: res[6]\n        // USDx_supply_APR: res[4]\n        // USDx_borrow_APR: res[7]\n        this.setState({\n          USDx_supply: this.web3.fromWei(res[3], \"ether\"),\n          USDx_borrow: this.web3.fromWei(res[6], \"ether\"),\n          USDx_supply_APR: getPercentageFormat(this.web3.fromWei(res[4].toNumber(), \"ether\") * 86400 * 365 / 15),\n          USDx_borrow_APR: getPercentageFormat(this.web3.fromWei(res[7].toNumber(), \"ether\") * 86400 * 365 / 15)\n        }, () => {\n          this.setState({\n            USDx_borrow_supply_rate: getPercentageFormat(this.state.USDx_borrow / this.state.USDx_supply)\n          })\n        });\n      }\n    })\n  }\n\n\n  componentDidMount = () => {\n    if (window.web3) {\n      window.web3.currentProvider.enable().then(\n        res => {\n          // this.componentDidMount_temp()\n          window.web3.version.getNetwork((e, r) => {\n            if (r) {\n              this.setState({\n                NetworkName: r\n              }, () => {\n                // this.componentDidMount_temp();\n                this.get_USDx_supply_borrow();\n              })\n            }\n          })\n        }\n      )\n    }\n\n    // this.get_USDx_supply_borrow();\n\n    this.timer_main = setInterval(() => {\n      this.get_USDx_supply_borrow();\n    }, 1000 * 15);\n\n    if (this.web3.currentProvider.isMetaMask) {\n      window.ethereum.on('accountsChanged', () => {\n        this.get_USDx_supply_borrow();\n      });\n    }\n  }\n\n\n  componentWillUnmount = () => {\n    clearInterval(this.timer_main);\n  }\n\n  render = () => {\n    const accountInfo = [\n      {\n        title: 'USDx Supplied',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : '$' + toDoubleThousands(this.state.USDx_supply),\n        page: 'main'\n      },\n      {\n        title: 'USDx Borrowed',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : '$' + toDoubleThousands(this.state.USDx_borrow),\n        page: 'main'\n      },\n      {\n        title: 'Utilization Rate',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : toDoubleThousands(this.state.USDx_borrow_supply_rate) + '%',\n        page: 'main'\n      },\n      {\n        title: 'Collateralization ratio',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : '125.00%',\n        page: 'main'\n      },\n      {\n        title: 'USDx Supply APR',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : toDoubleThousands(this.state.USDx_supply_APR) + '%',\n        page: 'main'\n      },\n      {\n        title: 'USDx Borrow APR',\n        amount: (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined || !this.props.login) ? '-' : toDoubleThousands(this.state.USDx_borrow_APR) + '%',\n        page: 'main'\n      }\n    ];\n\n    return (\n      <div className={'main-info-board'}>\n        <div className={'main-info-board-content'}>\n          <InfoSection accountInfo={accountInfo} currentPage={'main'} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AccountInfo;","import React, { Component } from 'react';\nimport './home.scss';\nimport { Link } from \"react-router-dom\";\nimport MediaQuery from 'react-responsive';\nimport AccountInfo from '../../container/accountInfo/accountInfo_main';\nimport { findNetwork, getLoginStatusKey } from '../../util.js';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        // this.componentDidMount_temp();\n\n    }\n\n    componentDidMount_temp = () => {\n        // this.connectMetamask();\n        // this.getCurentAccount();\n\n        setTimeout(() => {\n            this.connectMetamask();\n            this.getCurentAccount();\n        }, 2000);\n\n        this.getCurentAccountTimer = setInterval(() => {\n            this.getCurentAccount();\n            // console.log('main:' + this.props.isLogIn) // main:undefined\n        }, 1000 * 15);\n    }\n\n\n\n\n\n\n    render() {\n        return (\n            <div>\n                <h1>test... home</h1>\n            </div>\n        )\n        // return (\n        //     <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n        //         <MediaQuery maxWidth={736}>\n        //             {(match) => <div className={'main-page ' + (match ? 'CM XS' : 'CM LG')}>\n        //                 <div className='main-page-header'>\n        //                     <img src={'images/logo@2x.svg'} className='header-logo' alt=\"MAIN\" />\n        //                     {match ? null : <div className='login-info-sec'>\n        //                         <div style={{ display: 'flex', alignItems: 'center' }}>\n        //                             <div className={account !== undefined && this.state.isLogIn ? 'signed-in' : 'connect-sign'}></div>\n        //                             <span style={{ fontWeight: 500, paddingLeft: '8px' }}>{account !== undefined && this.state.isLogIn ? `${NetworkName}` : 'Unconnected'}</span>\n        //                         </div>\n        //                         <div className=\"login\" style={{ fontWeight: 500 }}>\n        //                             {account !== undefined && this.state.isLogIn ? account.substring(0, 8) + '...' + account.substring(account.length - 6) : 'Connect to Metamask'}\n        //                             <div className=\"popup\">\n        //                                 <span><em></em></span>\n        //                                 <p style={{ display: account !== undefined && this.state.isLogIn ? 'none' : 'block', fontWeight: 500 }} onClick={() => this.connectMetamask()}>Connect</p>\n        //                                 <p className=\"out\" style={{ display: account !== undefined && this.state.isLogIn ? 'block' : 'none', fontWeight: 500 }} onClick={() => this.unConnectMetamask()}>Logout</p>\n        //                             </div>\n        //                         </div>\n        //                     </div>}\n        //                 </div>\n        //                 <div className='headline-wrapper'>\n        //                     <div className='headline'>\n        //                         {/* <span>Decentralized Lending with Lendf.me</span> */}\n        //                         <FormattedMessage id='Decentralized' />\n        //                     </div>\n        //                     {/* <div className='headline-intro'>\n        //                         <div>Borrowing and lending are mutually exclusive and cannot be occur simultaneously; </div>\n        //                         <div>In order to offer USDx in Lend page, you must first repay the USDx loan in the Borrow option.</div>\n        //                     </div> */}\n        //                 </div>\n        //                 <div className='info-sec'>\n        //                     <AccountInfo currentPage={'main'} account={this.state.currentAccount} login={this.state.isLogIn} />\n        //                 </div>\n        //                 <div className='button-container'>\n        //                     <div className='lend-container'>\n        //                         <div className='lend-button'>\n        //                             <Link className={'lend-link'} to={{ pathname: './supply', state: { isLogIn: this.state.isLogIn } }} />\n        //                             <div style={{ display: 'flex', alignItems: 'center' }}>\n        //                                 <img src={'images/icon_s@2x.png'} alt=\"MAIN\" />\n        //                                 <div className='title'>\n        //                                     <FormattedMessage id='Supply_USDx' />\n        //                                 </div>\n        //                             </div>\n        //                         </div>\n        //                         <div className='description'>\n        //                             <FormattedMessage id='Supply_your' />\n        //                         </div>\n        //                     </div>\n        //                     <div className='borrow-container'>\n        //                         <div className='borrow-button'>\n        //                             <Link className={'borrow-link'} to={{ pathname: './borrow', state: { isLogIn: this.state.isLogIn } }} />\n        //                             <div style={{ display: 'flex', alignItems: 'center' }}>\n        //                                 <img src={'images/icon_b@2x.png'} alt=\"MAIN\" />\n        //                                 <div className='title'>\n        //                                     <FormattedMessage id='Borrow_USDx' />\n        //                                 </div>\n        //                             </div>\n        //                         </div>\n        //                         <div className='description'>\n        //                             <FormattedMessage id='Pledge_WETH' />\n        //                         </div>\n        //                     </div>\n        //                 </div>\n        //             </div>}\n        //         </MediaQuery>\n        //     </IntlProvider>\n        // );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport './main.scss';\nimport { Link } from \"react-router-dom\";\nimport MediaQuery from 'react-responsive';\nimport AccountInfo from '../../container/accountInfo/accountInfo_main';\nimport { findNetwork, getLoginStatusKey } from '../../util.js';\n\n// add i18n.\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport en_US from '../../language/en_US.js';\nimport zh_CN from '../../language/zh_CN';\n\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentAccount: null,\n            isLogIn: false\n        }\n        this.web3 = window.web3;\n\n        // this.componentDidMount_temp();\n\n        window.web3.currentProvider.enable().then(\n            res => {\n                this.setState({ isLogIn: true }, () => {\n                    window.web3.version.getNetwork((e, r) => {\n                        if (r) {\n                            this.setState({\n                                NetworkName: r\n                            }, () => {\n                                this.componentDidMount_temp();\n                            })\n                        }\n                    })\n\n                });\n            }\n        )\n\n        if (window.web3.currentProvider.isMetaMask) {\n            window.ethereum.on('accountsChanged', () => {\n                this.componentDidMount_temp();\n            });\n        }\n\n    }\n\n    componentDidMount_temp = () => {\n        // this.connectMetamask();\n        // this.getCurentAccount();\n\n        setTimeout(() => {\n            this.connectMetamask();\n            this.getCurentAccount();\n        }, 2000);\n\n        this.getCurentAccountTimer = setInterval(() => {\n            this.getCurentAccount();\n            this.setLoginStatus();\n            // console.log('main:' + this.props.isLogIn) // main:undefined\n        }, 1000 * 15);\n    }\n\n    getCurentAccount = () => {\n        if (typeof web3 !== 'undefined') {\n            this.web3.eth.getCoinbase((e, r) => {\n                // console.log(e, r)\n                if (r) {\n                    this.setState({ currentAccount: r });\n                } else {\n                    this.setState({ currentAccount: null });\n                }\n            })\n        }\n    }\n\n    setLoginStatus = () => {\n        const { isSMView } = this.props;\n        if (typeof web3 === 'undefined' || this.web3.eth.accounts[0] === undefined) {\n            return;\n        }\n        var storage = null;\n        var results = null;\n        var key = getLoginStatusKey(this.web3.eth.accounts[0]);\n        if (window.localStorage) {\n            storage = window.localStorage;\n            results = JSON.parse(`${storage.getItem(key)}`);\n        }\n        if (this.state.isLogIn !== true && isSMView) {\n            this.setState({ isLogIn: true });\n        }\n        if (results === null) {\n            return;\n        }\n        results = results.map(item => {\n            if (item.account === this.web3.eth.accounts[0] && this.state.isLogIn !== item.isLogin && !isSMView) {\n                this.setState({ isLogIn: item.isLogin });\n            }\n            return item.id;\n        })\n    }\n\n    connectMetamask = () => {\n        if (typeof web3 === 'undefined') {\n            return;\n        }\n        window.web3.currentProvider.enable().then(\n            res => {\n                this.setState({ isLogIn: true });\n            }\n        )\n        // this.props.checkLogIn(true);\n    }\n\n    unConnectMetamask = () => {\n        this.setState({ isLogIn: false });\n        this.props.checkLogIn(false);\n    }\n\n\n    render() {\n        let NetworkName = findNetwork(this.state.NetworkName);\n        let account = window.web3.eth.accounts[0];\n        // if (typeof web3 !== 'undefined') {\n        //     NetworkName = findNetwork(this.state.NetworkName);\n        //     account = window.web3.eth.accounts[0];\n        // }\n\n        return (\n            <IntlProvider locale={'en'} messages={navigator.language === 'zh-CN' ? zh_CN : en_US} >\n                <MediaQuery maxWidth={736}>\n                    {(match) => <div className={'main-page ' + (match ? 'CM XS' : 'CM LG')}>\n                        <div className='main-page-header'>\n                            <img src={'images/logo@2x.svg'} className='header-logo' alt=\"MAIN\" />\n                            {match ? null : <div className='login-info-sec'>\n                                <div style={{ display: 'flex', alignItems: 'center' }}>\n                                    <div className={account !== undefined && this.state.isLogIn ? 'signed-in' : 'connect-sign'}></div>\n                                    <span style={{ fontWeight: 500, paddingLeft: '8px' }}>{account !== undefined && this.state.isLogIn ? `${NetworkName}` : 'Unconnected'}</span>\n                                </div>\n                                <div className=\"login\" style={{ fontWeight: 500 }}>\n                                    {account !== undefined && this.state.isLogIn ? account.substring(0, 8) + '...' + account.substring(account.length - 6) : 'Connect to Metamask'}\n                                    <div className=\"popup\">\n                                        <span><em></em></span>\n                                        <p style={{ display: account !== undefined && this.state.isLogIn ? 'none' : 'block', fontWeight: 500 }} onClick={() => this.connectMetamask()}>Connect</p>\n                                        <p className=\"out\" style={{ display: account !== undefined && this.state.isLogIn ? 'block' : 'none', fontWeight: 500 }} onClick={() => this.unConnectMetamask()}>Logout</p>\n                                    </div>\n                                </div>\n                            </div>}\n                        </div>\n                        <div className='headline-wrapper'>\n                            <div className='headline'>\n                                {/* <span>Decentralized Lending with Lendf.me</span> */}\n                                <FormattedMessage id='Decentralized' />\n                            </div>\n                            {/* <div className='headline-intro'>\n                                <div>Borrowing and lending are mutually exclusive and cannot be occur simultaneously; </div>\n                                <div>In order to offer USDx in Lend page, you must first repay the USDx loan in the Borrow option.</div>\n                            </div> */}\n                        </div>\n                        <div className='info-sec'>\n                            <AccountInfo currentPage={'main'} account={this.state.currentAccount} login={this.state.isLogIn} />\n                        </div>\n                        <div className='button-container'>\n                            <div className='lend-container'>\n                                <div className='lend-button'>\n                                    <Link className={'lend-link'} to={{ pathname: './supply', state: { isLogIn: this.state.isLogIn } }} />\n                                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                                        <img src={'images/icon_s@2x.png'} alt=\"MAIN\" />\n                                        <div className='title'>\n                                            <FormattedMessage id='Supply_USDx' />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='description'>\n                                    <FormattedMessage id='Supply_your' />\n                                </div>\n                            </div>\n                            <div className='borrow-container'>\n                                <div className='borrow-button'>\n                                    <Link className={'borrow-link'} to={{ pathname: './borrow', state: { isLogIn: this.state.isLogIn } }} />\n                                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                                        <img src={'images/icon_b@2x.png'} alt=\"MAIN\" />\n                                        <div className='title'>\n                                            <FormattedMessage id='Borrow_USDx' />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='description'>\n                                    <FormattedMessage id='Pledge_WETH' />\n                                </div>\n                            </div>\n                        </div>\n                    </div>}\n                </MediaQuery>\n            </IntlProvider>\n        );\n    }\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport './App.scss';\nimport { Alert } from 'antd';\nimport { Route, Switch } from \"react-router-dom\";\nimport Borrow from './pages/borrow/borrow';\nimport Lend from './pages/lend/lend';\nimport Main from './pages/main/main';\nimport MediaQuery from 'react-responsive';\nimport { findNetwork, saveLoginStatus, getLoginStatusKey, getPercentageFormat } from './util.js';\n\n\nimport Home from './pages/home/home';\nimport Web3 from 'web3';\n\nconst mainnetOrRinkebyIconAlert = <img style={{ margin: 'auto' }} src={`images/alert_icon.png`} alt=\"\" />;\nconst noteIconAlert = <img style={{ margin: 'auto' }} src={`images/note_alert.png`} alt=\"\" />;\n\n// tokens ABIs\nlet USDx_abi = require('./ABIs/USDX_ABI.json');\nlet WETH_abi = require('./ABIs/WETH_ABI.json');\nlet imBTC_abi = require('./ABIs/imBTC_ABI.json');\nlet USDT_abi = require('./ABIs/USDT_ABI.json');\nlet mMarket_abi = require('./ABIs/moneyMarket.json');\n// tokens address\nlet address = require('./ABIs/address_map.json');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      my_supply_balance: null,\n      my_borrow_balance: null\n    }\n    this.new_web3 = window.new_web3 = new Web3(Web3.givenProvider || null); // this.new_web3 === window.new_web3 true\n\n    this.new_web3.eth.net.getNetworkType().then(\n      (net_type) => {\n        let USDx = new this.new_web3.eth.Contract(USDx_abi, address[net_type]['address_USDx']);\n        let WETH = new this.new_web3.eth.Contract(WETH_abi, address[net_type]['address_WETH']);\n        let imBTC = new this.new_web3.eth.Contract(imBTC_abi, address[net_type]['address_imBTC']);\n        let USDT = new this.new_web3.eth.Contract(USDT_abi, address[net_type]['address_USDT']);\n        let mMarket = new this.new_web3.eth.Contract(mMarket_abi, address[net_type]['address_mMarket']);\n        console.log(mMarket)\n        console.log(imBTC)\n        this.setState({\n          USDx: USDx,\n          WETH: WETH,\n          imBTC: imBTC,\n          USDT: USDT,\n          mMarket: mMarket\n        }, () => {\n          this.get_tokens_decimals();\n\n          let timer_Next = setInterval(() => {\n            if (!(this.state.USDx_decimals && this.state.WETH_decimals && this.state.imBTC_decimals && this.state.USDT_decimals)) {\n              console.log('111111111: not get yet...')\n            } else {\n              console.log('2222222222: i got it...');\n              clearInterval(timer_Next);\n            }\n          }, 100)\n        })\n      }\n    )\n\n  }\n\n\n\n  get_tokens_decimals = () => {\n    this.state.USDx.methods.decimals().call().then(res_usdx_decimals => {\n      console.log('usdx: ', res_usdx_decimals);\n      this.setState({ USDx_decimals: Number(res_usdx_decimals) })\n    })\n\n    this.state.WETH.methods.decimals().call().then(res_weth_decimals => {\n      console.log('weth: ', res_weth_decimals);\n      this.setState({ WETH_decimals: Number(res_weth_decimals) })\n    })\n\n    this.state.imBTC.methods.decimals().call().then(res_imBTC_decimals => {\n      console.log('imbtc: ', res_imBTC_decimals);\n      this.setState({ imBTC_decimals: Number(res_imBTC_decimals) })\n    })\n\n    this.state.USDT.methods.decimals().call().then(res_usdt_decimals => {\n      console.log('usdt: ', res_usdt_decimals);\n      this.setState({ USDT_decimals: Number(res_usdt_decimals) })\n    })\n  }\n\n\n\n  get_market_status = () => {\n    console.log(this.state.mMarket);\n    this.state.mMarket.methods.calculateAccountValues('0x629c4Ee8ad2b48ffEb1f50182a0b12464869427b').call().then(res_account => {\n\n      this.state.mMarket.methods.assetPrices('0xaf21bb8ae7b7a5eec37964e478583cd486fd12e2').call().then(res_usdx_price => {\n\n        // res_account[1] supply\n        // res_account[2] borrow\n        let supply = this.new_web3.utils.toBN(res_account[1]).div(this.new_web3.utils.toBN(res_usdx_price))\n        let borrow = this.new_web3.utils.toBN(res_account[2]).div(this.new_web3.utils.toBN(res_usdx_price))\n\n        // console.log(num.toString())\n\n        supply = this.toStringDecimals(supply, 18);\n        borrow = this.toStringDecimals(borrow, 18);\n\n        this.setState({\n          my_supply_balance: supply,\n          my_borrow_balance: borrow\n        })\n      })\n\n\n    })\n  }\n\n  get_usdx_status = () => {\n    this.state.mMarket.methods.markets('0xaf21bb8ae7b7a5eec37964e478583cd486fd12e2').call().then(res_markets => {\n      console.log(res_markets)\n\n      console.log(res_markets.totalSupply)\n      console.log(res_markets.totalBorrows)\n\n      // supply APR\n      console.log(this.toStringDecimals_new(this.new_web3.utils.toBN(res_markets.supplyRateMantissa).mul(this.new_web3.utils.toBN(2102400)).toString(), 16,2))\n      \n      // borrow APR\n      console.log(this.toStringDecimals_new(this.new_web3.utils.toBN(res_markets.borrowRateMantissa).mul(this.new_web3.utils.toBN(2102400)).toString(), 16,2))\n\n\n\n      // U rate\n      console.log(this.toStringDecimals_new(this.new_web3.utils.toBN(res_markets.totalBorrows).mul(this.new_web3.utils.toBN(10 ** 18)).div(this.new_web3.utils.toBN(res_markets.totalSupply)).toString(), 16,2))\n      // console.log(getPercentageFormat(this.new_web3.utils.fromWei(res_markets[4].toNumber(), \"ether\") * 86400 * 365 / 15))\n\n\n\n      // 获取USDx价格\n      this.state.mMarket.methods.assetPrices('0xaf21bb8ae7b7a5eec37964e478583cd486fd12e2').call().then(res_usdx_price => {\n\n\n        console.log(res_usdx_price);\n\n        console.log(res_usdx_price);\n\n\n\n      })\n\n\n\n    })\n  }\n\n\n  // ######### 1111111\n  contractMethodCall = (contract, methodName, param = []) => {\n\n    if (!(contract instanceof Object) || methodName.constructor != String) {\n      console.log('input param type error!!!')\n      console.log(`contract:${typeof (contract)}`);\n      console.log(`methodName:${typeof (methodName)}`);\n      return 'error';\n    }\n\n    if (param.constructor != Array)\n      param = [param];\n\n    return new Promise(resolve => {\n      contract.methods[methodName](...param).call().then(async result => { resolve(result) });\n    })\n  }\n  // ######### 222222222\n  toStringDecimals = (numStr, decimals) => {\n    numStr = numStr.toLocaleString().replace(/,/g, '');\n    decimals = decimals.toString();\n\n    var str = (10 ** decimals).toLocaleString().replace(/,/g, '').slice(1);\n\n    var res = (numStr.length > decimals ?\n      numStr.slice(0, numStr.length - decimals) + '.' + numStr.slice(numStr.length - decimals) :\n      '0.' + str.slice(0, str.length - numStr.length) + numStr).replace(/(0+)$/g, \"\");\n\n    return res.slice(-1) == '.' ? res + '00' : res;\n  }\n\n  // ######### 222222222\n  // toStringDecimals_new = (numStr, decimals, decimalPlace = 2) => {\n  //   numStr = numStr.toLocaleString().replace(/,/g, '');\n  //   decimals = decimals.toString();\n\n  //   var str = (10 ** decimals).toLocaleString().replace(/,/g, '').slice(1);\n\n  //   var res = (numStr.length > decimals ?\n  //     numStr.slice(0, numStr.length - decimals) + '.' + numStr.slice(numStr.length - decimals) :\n  //     '0.' + str.slice(0, str.length - numStr.length) + numStr).replace(/(0+)$/g, \"\");\n\n  //   res = res.slice(-1) == '.' ? res + '00' : res;\n  //   return res.slice(0, res.indexOf('.') + 1 + decimalPlace);\n  //   // return res.slice(-1) == '.' ? res + '00' : res;\n  // }\n\n\n  toStringDecimals_new = (numStr, decimals, decimalPlace = decimals)=> {\n    numStr = numStr.toLocaleString().replace(/,/g,'');\n    decimals = decimals.toString();\n\n    var str = (10**decimals).toLocaleString().replace(/,/g,'').slice(1);\n\n    var res = (numStr.length > decimals ? \n    numStr.slice(0, numStr.length - decimals) + '.' + numStr.slice(numStr.length - decimals) : \n    '0.' + str.slice(0, str.length - numStr.length) + numStr).replace(/(0+)$/g,\"\");\n\n    res = res.slice(-1) == '.' ? res + '00' : res;\n    \n    if (decimalPlace == 0)\n        return res.slice(0, res.indexOf('.'));\n\n    var length = res.indexOf('.') + 1 + decimalPlace;\n    return res.slice(0, length >= res.length ? res.length : length);\n    // return res.slice(-1) == '.' ? res + '00' : res;\n}\n\n  componentDidMount() { }\n\n\n\n\n  render() {\n    return (\n      <MediaQuery maxWidth={736}>\n        {(match) => (\n          <Switch>\n            <React.Fragment>\n              <div className=\"App\">\n                <div className=\"App-header\">\n                  <Alert message=\"Lendf.me is currently only available on Mainnet or the Rinkeby Testnet.\" type=\"error\" onClose='' icon={mainnetOrRinkebyIconAlert} showIcon />\n                  <Alert message=\"Note: You are currently connected to the Rinkeby Testnet\" type=\"informational\" onClose='' className='informational-banner' icon={noteIconAlert} showIcon />\n\n                  <Route exact path=\"/\" render={() => <Home />} />\n\n\n                  <div>\n                    <button onClick={this.get_market_status}>get balance</button>\n\n                    <hr style={{ margin: '20px' }}></hr>\n\n                    <span>supply: </span>\n                    <input value={this.state.my_supply_balance ? this.state.my_supply_balance : ''} style={{ width: '300px' }} readOnly={true} />\n\n                    <hr style={{ margin: '20px' }}></hr>\n\n                    <span>borrow: </span>\n                    <input value={this.state.my_borrow_balance ? this.state.my_borrow_balance : ''} style={{ width: '300px' }} readOnly={true} />\n\n                    <hr style={{ margin: '20px' }}></hr>\n\n                    <button onClick={this.get_usdx_status}>get usdx status</button>\n\n\n\n                  </div>\n                  {/* <Route exact path=\"/\" render={() => <Main checkLogIn={this.checkLogIn} isSMView={!!match} />} /> */}\n                  {/* <Route path=\"/supply\" render={() => <Lend checkLogIn={this.checkLogIn} isSMView={!!match} />} /> */}\n                  {/* <Route path=\"/borrow\" render={() => <Borrow checkLogIn={this.checkLogIn} isSMView={!!match} />} /> */}\n                </div>\n              </div>\n            </React.Fragment>\n          </Switch>\n        )}\n      </MediaQuery>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}